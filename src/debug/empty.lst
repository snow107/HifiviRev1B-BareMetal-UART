
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/src/debug/empty.elf:     file format elf32-littleriscv
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/src/debug/empty.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x20010000

Program Header:
    LOAD off    0x00001000 vaddr 0x20010000 paddr 0x20010000 align 2**12
         filesz 0x00000d78 memsz 0x00000d78 flags rwx
    LOAD off    0x00002000 vaddr 0x80000000 paddr 0x20013f48 align 2**12
         filesz 0x000004c4 memsz 0x000004c4 flags rw-
     TLS off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**2
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x000024c8 vaddr 0x800004c8 paddr 0x800004c8 align 2**12
         filesz 0x00000000 memsz 0x00000c98 flags rw-
    LOAD off    0x000024c4 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00002d80 vaddr 0x20010d80 paddr 0x20010d80 align 2**12
         filesz 0x000031c2 memsz 0x000031c2 flags r-x

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .init             000002d6  20010000  20010000  00001000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .init_array       00000008  200102d8  200102d8  000012d8  2**3  CONTENTS, ALLOC, LOAD, DATA
  2 .ctors            00000056  200102e0  200102e0  000012e0  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata           00000a40  20010338  20010338  00001338  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .text             000031c2  20010d80  20010d80  00002d80  2**7  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .data             000004c4  80000000  20013f48  00002000  2**3  CONTENTS, ALLOC, LOAD, DATA
  6 .bss              00000098  800004c8  800004c8  000024c8  2**3  ALLOC
  7 .stack            00000400  80000560  80000560  000024c8  2**4  ALLOC
  8 .heap             00000800  80000960  80000960  000024c8  2**2  ALLOC
  9 .debug_info       0001a284  00000000  00000000  00005f42  2**0  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev     00001c8e  00000000  00000000  000201c6  2**0  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges    00000758  00000000  00000000  00021e58  2**3  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges     00000628  00000000  00000000  000225b0  2**3  CONTENTS, READONLY, DEBUGGING
 13 .debug_line       0000739d  00000000  00000000  00022bd8  2**0  CONTENTS, READONLY, DEBUGGING
 14 .debug_str        0000412d  00000000  00000000  00029f75  2**0  CONTENTS, READONLY, DEBUGGING
 15 .comment          00000028  00000000  00000000  0002e0a2  2**0  CONTENTS, READONLY
 16 .riscv.attributes 0000002b  00000000  00000000  0002e0ca  2**0  CONTENTS, READONLY
 17 .debug_frame      00001e70  00000000  00000000  0002e0f8  2**2  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
20010000 l    d  .init	00000000 .init
200102d8 l    d  .init_array	00000000 .init_array
200102e0 l    d  .ctors	00000000 .ctors
20010338 l    d  .rodata	00000000 .rodata
20010d80 l    d  .text	00000000 .text
80000000 l    d  .data	00000000 .data
800004c8 l    d  .bss	00000000 .bss
80000560 l    d  .stack	00000000 .stack
80000960 l    d  .heap	00000000 .heap
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 scrub.o
20010092 l     F .init	00000000 _metal_memory_scrub
20010172 l       .init	00000000 skip_scrub
2001016a l       .init	00000000 wait_scrub
200100ee l       .init	00000000 dtim_scrub
20010104 l       .init	00000000 ils_scrub
2001011a l       .init	00000000 dls_scrub
20010130 l       .init	00000000 sram_scrub
20010146 l       .init	00000000 memory_scrub
2001015c l       .init	00000000 done_scrub
00000000 l    df *ABS*	00000000 synchronize_harts.c
00000000 l    df *ABS*	00000000 crt0.o
20010250 l       .init	00000000 _skip_init
20010338 l       .rodata	00000000 argv
2001033c l       .rodata	00000000 envp
20010340 l       .rodata	00000000 name
00000000 l    df *ABS*	00000000 sifive_fe310-g000_pll.c
2001352a l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllsel0
20013544 l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllref
2001355e l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_divider_base
20013574 l     F .text	00000014 __metal_driver_sifive_fe310_g000_pll_divider_offset
20013588 l     F .text	00000012 __metal_driver_sifive_fe310_g000_pll_config_base
2001359a l     F .text	00000010 __metal_driver_sifive_fe310_g000_pll_config_offset
200135aa l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_init_rate
200135c0 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
200135d2 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
200104ec l     O .rodata	00000880 pll_configs
200135e4 l     F .text	0000004e get_pll_config_freq
2001383e l     F .text	000000aa find_closest_config
200138e8 l     F .text	000001ac configure_pll
00000000 l    df *ABS*	00000000 riscv_clint0.c
200111fe l     F .text	0000002a __metal_driver_sifive_clint0_control_base
20011228 l     F .text	00000028 __metal_driver_sifive_clint0_num_interrupts
20011250 l     F .text	0000003c __metal_driver_sifive_clint0_interrupt_parents
2001128c l     F .text	00000030 __metal_driver_sifive_clint0_interrupt_lines
200113ec l     F .text	00000036 _get_cpu_intc
00000000 l    df *ABS*	00000000 riscv_cpu.c
2001191e l     F .text	00000024 __metal_driver_cpu_hartid
20011942 l     F .text	0000002a __metal_driver_cpu_timebase
2001196c l     F .text	0000002a __metal_driver_cpu_interrupt_controller
20011996 l     F .text	00000024 __metal_driver_cpu_buserror
00000000 l    df *ABS*	00000000 PWM.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 __atexit.c
800004d4 l     O .bss	0000008c _global_atexit0
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 init.c
800004cc l     O .bss	00000004 init_done.1531
800004d0 l     O .bss	00000004 fini_done.1540
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfrosc.c
20013342 l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfrosc_ref
2001335c l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfrosc_config_base
20013372 l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfrosc_config_offset
20013386 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfxosc.c
2001343e l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfxosc_ref
20013458 l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfxosc_config_base
2001346e l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfxosc_config_offset
20013482 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_prci.c
20013bee l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 cpu.c
00000000 l    df *ABS*	00000000 shutdown.c
00000000 l    df *ABS*	00000000 vector.o
20013e00 l       .text	00000000 IRQ_0
20013e04 l       .text	00000000 IRQ_1
20013e08 l       .text	00000000 IRQ_2
20013e0c l       .text	00000000 IRQ_3
20013e10 l       .text	00000000 IRQ_4
20013e14 l       .text	00000000 IRQ_5
20013e18 l       .text	00000000 IRQ_6
20013e1c l       .text	00000000 IRQ_7
20013e20 l       .text	00000000 IRQ_8
20013e24 l       .text	00000000 IRQ_9
20013e28 l       .text	00000000 IRQ_10
20013e2c l       .text	00000000 IRQ_11
20013e30 l       .text	00000000 IRQ_12
20013e34 l       .text	00000000 IRQ_13
20013e38 l       .text	00000000 IRQ_14
20013e3c l       .text	00000000 IRQ_15
20013e40 l       .text	00000000 IRQ_LC0
20013e44 l       .text	00000000 IRQ_LC1
20013e48 l       .text	00000000 IRQ_LC2
20013e4c l       .text	00000000 IRQ_LC3
20013e50 l       .text	00000000 IRQ_LC4
20013e54 l       .text	00000000 IRQ_LC5
20013e58 l       .text	00000000 IRQ_LC6
20013e5c l       .text	00000000 IRQ_LC7
20013e60 l       .text	00000000 IRQ_LC8
20013e64 l       .text	00000000 IRQ_LC9
20013e68 l       .text	00000000 IRQ_LC10
20013e6c l       .text	00000000 IRQ_LC11
20013e70 l       .text	00000000 IRQ_LC12
20013e74 l       .text	00000000 IRQ_LC13
20013e78 l       .text	00000000 IRQ_LC14
20013e7c l       .text	00000000 IRQ_LC15
00000000 l    df *ABS*	00000000 fixed-clock.c
20013e80 l     F .text	00000070 __metal_driver_fixed_clock_rate
00000000 l    df *ABS*	00000000 sys_exit.c
00000000 l    df *ABS*	00000000 impure.c
80000000 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 inline.c
00000000 l    df *ABS*	00000000 
200102e0 l       .init_array	00000000 metal_constructors_end
200102e0 l       .init_array	00000000 __fini_array_end
200102e0 l       .init_array	00000000 metal_destructors_end
200102e0 l       .init_array	00000000 metal_destructors_start
200102e0 l       .init_array	00000000 __fini_array_start
200102d8 l       .init_array	00000000 __init_array_end
200102d8 l       .init_array	00000000 __preinit_array_end
200102d8 l       .init_array	00000000 __init_array_start
200102d8 l       .init_array	00000000 metal_constructors_start
200102d8 l       .init_array	00000000 __preinit_array_start
2001224c  w    F .text	00000096 metal_lc4_interrupt_vector_handler
80004000 g       *ABS*	00000000 metal_dtim_0_memory_end
20013ca6 g     F .text	00000026 metal_clock_get_rate_hz
200115c8 g     F .text	00000058 __metal_driver_riscv_clint0_set_vector_mode
200121b6  w    F .text	00000096 metal_lc3_interrupt_vector_handler
20012a3c g     F .text	00000064 __metal_valid_interrupt_id
200102dc g     O .init_array	00000004 _use_hfxosc_ptr
20012eb6 g     F .text	0000001a __metal_driver_riscv_cpu_controller_get_vector_mode
80000c88 g       .data	00000000 __global_pointer$
20012c8c g     F .text	000001d6 __metal_driver_riscv_cpu_controller_interrupt_register
200102d8 g     O .init_array	00000004 _metal_sifive_fe310_g000_pll_init_ptr
800004c8 g       .data	00000000 __tls_base
20013d3a g     F .text	0000002e metal_cpu_get
2001034c g     O .rodata	00000064 __metal_driver_vtable_riscv_clint0
80000560 g       .bss	00000000 metal_segment_bss_target_end
200112bc g     F .text	0000009a __metal_clint0_mtime_get
200132b6 g     F .text	0000002e __metal_driver_cpu_get_instruction_length
00000001 g       *ABS*	00000000 __metal_chicken_bit
08000000 g       .rodata	00000000 metal_segment_itim_target_start
08000000 g       *ABS*	00000000 metal_itim_0_memory_start
20010186 g     F .init	0000000e __metal_synchronize_harts
800004c8 g       .data	00000000 metal_segment_bss_target_start
20011356 g     F .text	00000096 __metal_driver_riscv_clint0_mtimecmp_set
200136d2 g     F .text	0000016c __metal_driver_sifive_fe310_g000_pll_get_rate_hz
00000400 g       *ABS*	00000000 __stack_size
2001253a  w    F .text	00000096 metal_lc9_interrupt_vector_handler
2001009e  w    F .init	00000000 __metal_before_start
200111d6  w    F .text	00000014 metal_init_run
200104a8 g     O .rodata	00000044 __metal_driver_vtable_cpu
00000000 g       *ABS*	00000000 __metal_eccscrub_bit
20012f3c g     F .text	00000072 __metal_driver_cpu_mcycle_get
20010d6c g     O .rodata	0000000c __metal_driver_vtable_sifive_fe310_g000_pll
80000498 g     O .data	00000008 __metal_dt_cpu_0
200124a4  w    F .text	00000096 metal_lc8_interrupt_vector_handler
20013a94 g     F .text	0000015a __metal_driver_sifive_fe310_g000_pll_set_rate_hz
20012792  w    F .text	00000096 metal_lc13_interrupt_vector_handler
20011b28 g     F .text	00000018 __metal_default_exception_handler
200118ea g     F .text	00000034 __metal_driver_riscv_clint0_set_interrupt
20012ed0 g     F .text	00000050 __metal_driver_riscv_cpu_controller_set_vector_mode
20010d80 g     F .text	0000005a init_PWM
200119ba g     F .text	00000030 __metal_driver_cpu_get
20010444 g     O .rodata	00000064 __metal_driver_vtable_riscv_cpu_intc
20011a1c g     F .text	00000018 __metal_interrupt_global_disable
2001240e  w    F .text	00000096 metal_lc7_interrupt_vector_handler
200125d0  w    F .text	00000096 metal_lc10_interrupt_vector_handler
20012b5c g     F .text	0000004e __metal_exception_register
20010dda g     F .text	00000088 set_PWM_1
200110e6 g     F .text	00000078 metal_init
200130d0 g     F .text	0000001a __metal_driver_cpu_timer_controller_interrupt
20011c18 g     F .text	00000068 __metal_default_sw_handler
8000006c g     O .data	0000000c __metal_dt_clock_2
800004bc g     O .data	00000008 __metal_driver_vtable_fixed_clock
80000488 g     O .data	00000004 _global_impure_ptr
20011c80  w    F .text	00000092 metal_timer_interrupt_vector_handler
20010f2c g     F .text	0000006a __libc_init_array
20012666  w    F .text	00000096 metal_lc11_interrupt_vector_handler
20013508 g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz
20012e62 g     F .text	0000002a __metal_driver_riscv_cpu_controller_interrupt_enable
20013c66 g     F .text	00000040 _metal_clock_call_all_callbacks
200102b4 g     F .init	00000002 _init
20011a7e g     F .text	0000001a __metal_interrupt_timer_disable
2001318e g     F .text	00000062 __metal_driver_cpu_clear_sw_ipi
20010ef4 g     F .text	00000038 __libc_fini_array
80000478 g     O .data	0000000c __metal_dt_clock_4
2001115e g     F .text	00000078 metal_fini
20013118 g     F .text	00000014 __metal_driver_cpu_get_sw_interrupt_id
20013322 g     F .text	00000020 __metal_driver_cpu_get_buserror
80000000 g       .data	00000000 metal_segment_data_target_start
20011ad0 g     F .text	0000002c __metal_interrupt_local_enable
200118b6 g     F .text	00000034 __metal_driver_riscv_clint0_clear_interrupt
00000000 g       *ABS*	00000000 __tbss_size
80000060 g     O .data	0000000c __metal_dt_clock_0
00000800 g       *ABS*	00000000 __heap_size
20011d12 g     F .text	00000016 __metal_default_beu_handler
20011ab4 g     F .text	0000001c __metal_interrupt_external_disable
20012f20 g     F .text	0000001c __metal_driver_riscv_cpu_controller_command_request
20012baa g     F .text	000000e2 __metal_driver_riscv_cpu_controller_interrupt_init
20013270 g     F .text	00000046 __metal_driver_cpu_exception_register
20011a34 g     F .text	00000018 __metal_interrupt_software_enable
2001208a  w    F .text	00000096 metal_lc1_interrupt_vector_handler
800004c8 g     O .bss	00000004 _global_atexit
20012954 g     F .text	00000050 __metal_controller_interrupt_vector_mode
2001101e g     F .text	000000c8 __call_exitprocs
80000960 g       .stack	00000000 _sp
20010194 g     F .init	00000000 _start
20013398 g     F .text	00000084 __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz
20013250 g     F .text	00000020 __metal_driver_cpu_controller_interrupt
200132e4 g     F .text	0000001e __metal_driver_cpu_get_exception_pc
20011a98 g     F .text	0000001c __metal_interrupt_external_enable
20010f96 g     F .text	00000088 __register_exitproc
20012378  w    F .text	00000096 metal_lc6_interrupt_vector_handler
200119ea g     F .text	0000001a __metal_myhart_id
20011b86  w    F .text	00000092 metal_software_interrupt_vector_handler
20012e8c g     F .text	0000002a __metal_driver_riscv_cpu_controller_interrupt_disable
200114aa g     F .text	000000da __metal_driver_riscv_clint0_register
80000490 g     O .data	00000008 __metal_dt_clint_2000000
20013ccc g     F .text	00000048 metal_clock_set_rate_hz
200102b6  w    F .init	00000000 secondary_main
20011b58  w    F .text	0000002e metal_interrupt_vector_handler
20013c00 g     F .text	0000002e __metal_driver_sifive_fe310_g000_prci_get_reg
20012aa0 g     F .text	000000bc __metal_local_interrupt_enable
20011784 g     F .text	00000132 __metal_driver_riscv_clint0_command_request
200122e2  w    F .text	00000096 metal_lc5_interrupt_vector_handler
20010e62 g     F .text	0000005c main
800004c8 g       .data	00000000 metal_segment_data_target_end
800004a4 g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_hfrosc
2001312c g     F .text	00000062 __metal_driver_cpu_set_sw_ipi
200131f0 g     F .text	00000060 __metal_driver_cpu_get_msip
20013d82 g     F .text	0000000e metal_shutdown
08000000 g       .rodata	00000000 metal_segment_itim_target_end
20013302 g     F .text	00000020 __metal_driver_cpu_set_exception_pc
200126fc  w    F .text	00000096 metal_lc12_interrupt_vector_handler
200115ac g     F .text	0000001c __metal_driver_riscv_clint0_get_vector_mode
800004a0 g     O .data	00000004 __metal_dt_prci_10008000
20012fae g     F .text	00000046 __metal_driver_cpu_timebase_get
20010000 g       .init	00000000 _enter
20013d68 g     F .text	0000001a metal_cpu_get_current_hartid
20013494 g     F .text	00000074 __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz
20013e00 g       .text	00000000 __metal_vector_table
20010d78 g       *ABS*	00000000 metal_segment_itim_source_start
8000048c  w    O .data	00000004 __metal_cpu_table
80000090 g     O .data	000003d0 __metal_dt_cpu_0_interrupt_controller
200102b4 g     F .init	00000002 _fini
2001030c g     F .ctors	0000002a use_hfxosc
20011a04 g     F .text	00000018 __metal_interrupt_global_enable
20010ebe g     F .text	0000000a atexit
20011a64 g     F .text	0000001a __metal_interrupt_timer_enable
200116d2 g     F .text	000000b2 __metal_driver_riscv_clint0_disable
2001305a g     F .text	00000076 __metal_driver_cpu_mtimecmp_set
20013632 g     F .text	000000a0 __metal_driver_sifive_fe310_g000_pll_init
80000078 g     O .data	0000000c __metal_dt_clock_5
80000000 g       *ABS*	00000000 metal_dtim_0_memory_start
20013c2e g     F .text	00000038 __metal_driver_sifive_fe310_g000_prci_set_reg
20013ef0 g     F .text	0000001e __metal_driver_fixed_clock_get_rate_hz
20011620 g     F .text	000000b2 __metal_driver_riscv_clint0_enable
20013f48 g       *ABS*	00000000 metal_segment_data_source_start
20010178 g       .init	00000000 early_trap_vector
200129a4 g     F .text	00000098 __metal_controller_interrupt_vector
8000046c g     O .data	0000000c __metal_dt_clock_1
20011d28 g     F .text	00000066 __metal_default_timer_handler
20012120  w    F .text	00000096 metal_lc2_interrupt_vector_handler
200128be  w    F .text	00000096 metal_lc15_interrupt_vector_handler
20013d14 g     F .text	00000026 metal_cpu_interrupt_controller
20010ec8 g     F .text	0000002c exit
20013f0e g     F .text	00000022 __metal_driver_fixed_clock_set_rate_hz
20011b40 g     F .text	00000018 __metal_default_interrupt_handler
200111ea  w    F .text	00000014 metal_fini_run
20011e00 g     F .text	0000017c __metal_exception_handler
20011ff6  w    F .text	00000094 metal_lc0_interrupt_vector_handler
20013f30 g     F .text	00000012 _exit
20012ff4 g     F .text	00000066 __metal_driver_cpu_mtime_get
20011584 g     F .text	00000028 __metal_driver_riscv_clint0_vector_register
20012828  w    F .text	00000096 metal_lc14_interrupt_vector_handler
800004ac g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_hfxosc
08002000 g       *ABS*	00000000 metal_itim_0_memory_end
20011422 g     F .text	00000088 __metal_driver_riscv_clint0_init
200102e0 g     F .ctors	0000002c metal_sifive_fe310_g000_pll_init
200130ea g     F .text	00000014 __metal_driver_cpu_get_timer_interrupt_id
20010090  w      .init	00000000 __register_frame_info
2001341c g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz
200130fe g     F .text	0000001a __metal_driver_cpu_sw_controller_interrupt
20011afc g     F .text	0000002c __metal_interrupt_local_disable
20011a4c g     F .text	00000018 __metal_interrupt_software_disable
80000460 g     O .data	0000000c __metal_dt_clock_3
80000084 g     O .data	0000000c __metal_dt_clock_6
800004b4 g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_prci
00000000 g       *ABS*	00000000 __metal_boot_hart



Disassembly of section .init:

20010000 <_enter>:
_enter():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/entry.S:24
     * it's not valid to obtain the address of any symbol without GP
     * configured.  The C environment might go ahead and do this again, but
     * that's safe as it's a fixed register. */
.option push
.option norelax
    la gp, __global_pointer$
20010000:	5fff1197          	auipc	gp,0x5fff1
20010004:	c8818193          	addi	gp,gp,-888 # 80000c88 <__global_pointer$>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/entry.S:28
.option pop

    /* trap over the chicken bit register clearing, aloe & fe310 dont have it */
    la t0, 1f
20010008:	00000297          	auipc	t0,0x0
2001000c:	01828293          	addi	t0,t0,24 # 20010020 <_enter+0x20>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/entry.S:29
    csrw mtvec, t0
20010010:	30529073          	csrw	mtvec,t0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/entry.S:31
    /* chicken bit is enable if core are sifive series. */
    la t0, __metal_chicken_bit
20010014:	00100293          	li	t0,1
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/entry.S:32
    beqz t0, 1f
20010018:	00028463          	beqz	t0,20010020 <_enter+0x20>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/entry.S:34
    /* If set, always clear the feature disable register for all cores series */
    csrwi 0x7C1, 0
2001001c:	7c105073          	csrwi	0x7c1,0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/entry.S:39
.align 4
1:
    /* Set up a simple trap vector to catch anything that goes wrong early in
     * the boot process. */
    la t0, early_trap_vector
20010020:	00000297          	auipc	t0,0x0
20010024:	15828293          	addi	t0,t0,344 # 20010178 <early_trap_vector>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/entry.S:40
    csrw mtvec, t0
20010028:	30529073          	csrw	mtvec,t0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/entry.S:48
     * C, so here we set up a C environment. First we set up a stack pointer,
     * which is left as a weak reference in order to allow initialization
     * routines that do not need a stack to be set up to transparently be
     * called. */
    .weak __metal_stack_pointer
    la sp, __metal_stack_pointer
2001002c:	dfff0117          	auipc	sp,0xdfff0
20010030:	fd410113          	addi	sp,sp,-44 # 0 <__metal_boot_hart>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/entry.S:55
   /* The METAL is designed for a bare-metal environment and therefore is expected
    * to define its own stack pointer. We also align the stack pointer here
    * because the only RISC-V ABI that's currently defined, mandates 16-byte
    * stack alignment. */

    bne sp, zero, 1f
20010034:	00011463          	bnez	sp,2001003c <_enter+0x3c>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/entry.S:56
    la sp, _sp
20010038:	cd818113          	addi	sp,gp,-808 # 80000960 <_sp>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/entry.S:59
1:
    /* Increment by hartid number of stack sizes */
    csrr a0, mhartid
2001003c:	f1402573          	csrr	a0,mhartid
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/entry.S:60
    li t0, 0
20010040:	4281                	li	t0,0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/entry.S:61
    la t1, __stack_size
20010042:	40000313          	li	t1,1024
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/entry.S:63
1:
    andi sp, sp, -16
20010046:	ff017113          	andi	sp,sp,-16
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/entry.S:64
    beq t0, a0, 1f
2001004a:	00a28563          	beq	t0,a0,20010054 <_enter+0x54>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/entry.S:65
    add sp, sp, t1
2001004e:	911a                	add	sp,sp,t1
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/entry.S:66
    addi t0, t0, 1
20010050:	0285                	addi	t0,t0,1
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/entry.S:67
    j 1b
20010052:	bfd5                	j	20010046 <_enter+0x46>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/entry.S:76
     * just skip over the call entirely.   Note that __metal_initialize isn't
     * actually a full C function, as it doesn't end up with the .bss or .data
     * segments having been initialized.  This is done to avoid putting a
     * burden on systems that can be initialized without having a C environment
     * set up. */
    la ra, __metal_before_start
20010054:	00000097          	auipc	ra,0x0
20010058:	04a08093          	addi	ra,ra,74 # 2001009e <__metal_before_start>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/entry.S:77
    beqz ra, 1f
2001005c:	00008363          	beqz	ra,20010062 <_enter+0x62>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/entry.S:78
    jalr ra
20010060:	9082                	jalr	ra
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/entry.S:84
1:

    /* At this point we can enter the C runtime's startup file.  The arguments
     * to this function are designed to match those provided to the SEE, just
     * so we don't have to write another ABI. */
    csrr a0, mhartid
20010062:	f1402573          	csrr	a0,mhartid
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/entry.S:85
    li a1, 0
20010066:	4581                	li	a1,0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/entry.S:86
    li a2, 0
20010068:	4601                	li	a2,0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/entry.S:87
    call _start
2001006a:	222d                	jal	20010194 <_start>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/entry.S:92

    /* If we've made it back here then there's probably something wrong.  We
     * allow the METAL to register a handler here. */
    .weak __metal_after_main
    la ra, __metal_after_main
2001006c:	dfff0097          	auipc	ra,0xdfff0
20010070:	f9408093          	addi	ra,ra,-108 # 0 <__metal_boot_hart>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/entry.S:93
    beqz ra, 1f
20010074:	00008363          	beqz	ra,2001007a <_enter+0x7a>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/entry.S:94
    jalr ra
20010078:	9082                	jalr	ra
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/entry.S:99
1:

    /* If that handler returns then there's not a whole lot we can do.  Just
     * try to make some noise. */
     la t0, 1f
2001007a:	00000297          	auipc	t0,0x0
2001007e:	00c28293          	addi	t0,t0,12 # 20010086 <_enter+0x86>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/entry.S:100
     csrw mtvec, t0
20010082:	30529073          	csrw	mtvec,t0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/entry.S:102
1:
     lw t1, 0(x0)
20010086:	00002303          	lw	t1,0(zero) # 0 <__metal_boot_hart>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/entry.S:103
     j 1b
2001008a:	bff5                	j	20010086 <_enter+0x86>
2001008c:	0000                	unimp
	...

20010090 <__register_frame_info>:
__register_frame_info():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/entry.S:117
.weak __register_frame_info
.global __register_frame_info
.section .text.metal.init.__register_frame_info
__register_frame_info:
    .cfi_startproc
    ret
20010090:	8082                	ret

20010092 <_metal_memory_scrub>:
_metal_memory_scrub():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:19
.type _metal_memory_scrub, @function
_metal_memory_scrub:
    /* Zero out memory */
1:
#if __riscv_xlen == 32
    sw      x0, 0(t1)
20010092:	00032023          	sw	zero,0(t1)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:20
    addi    t1, t1, 4
20010096:	0311                	addi	t1,t1,4
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:21
    blt     t1, t2, 1b
20010098:	fe734de3          	blt	t1,t2,20010092 <_metal_memory_scrub>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:27
#else
    sd      x0, 0(t1)
    addi    t1, t1, 8
    blt     t1, t2, 1b
#endif
    ret
2001009c:	8082                	ret

2001009e <__metal_before_start>:
__metal_before_start():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:38
.weak __metal_before_start
.global __metal_before_start
.type __metal_before_start, @function
__metal_before_start:
    /* Save caller ra */
    mv      s0, ra
2001009e:	8406                	mv	s0,ra
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:40

    la      t0, __metal_eccscrub_bit
200100a0:	dfff0297          	auipc	t0,0xdfff0
200100a4:	f6028293          	addi	t0,t0,-160 # 0 <__metal_boot_hart>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:41
    beqz    t0, skip_scrub
200100a8:	0c028563          	beqz	t0,20010172 <skip_scrub>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:43

    la      t0, __metal_boot_hart
200100ac:	dfff0297          	auipc	t0,0xdfff0
200100b0:	f5428293          	addi	t0,t0,-172 # 0 <__metal_boot_hart>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:44
    csrr    a5, mhartid
200100b4:	f14027f3          	csrr	a5,mhartid
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:46
    /* Disable machine interrupts to be safe */
    li      a3, 8
200100b8:	46a1                	li	a3,8
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:47
    csrc    mstatus, a3
200100ba:	3006b073          	csrc	mstatus,a3
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:48
    bne     a5, t0, wait_scrub
200100be:	0a579663          	bne	a5,t0,2001016a <wait_scrub>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:53

    /* Zero out itim memory. */
    .weak metal_itim_0_memory_start
    .weak metal_itim_0_memory_end
    la      t1, metal_itim_0_memory_start
200100c2:	e7ff0317          	auipc	t1,0xe7ff0
200100c6:	f3e30313          	addi	t1,t1,-194 # 8000000 <metal_itim_0_memory_start>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:54
    la      t2, metal_itim_0_memory_end
200100ca:	e7ff2397          	auipc	t2,0xe7ff2
200100ce:	f3638393          	addi	t2,t2,-202 # 8002000 <metal_itim_0_memory_end>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:55
    beq     t1, t2, dtim_scrub
200100d2:	00730e63          	beq	t1,t2,200100ee <dtim_scrub>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:56
    jal     _metal_memory_scrub
200100d6:	3f75                	jal	20010092 <_metal_memory_scrub>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:59
    .weak metal_itim_1_memory_start
    .weak metal_itim_1_memory_end
    la      t1, metal_itim_1_memory_start
200100d8:	dfff0317          	auipc	t1,0xdfff0
200100dc:	f2830313          	addi	t1,t1,-216 # 0 <__metal_boot_hart>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:60
    la      t2, metal_itim_1_memory_end
200100e0:	dfff0397          	auipc	t2,0xdfff0
200100e4:	f2038393          	addi	t2,t2,-224 # 0 <__metal_boot_hart>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:61
    beq     t1, t2, dtim_scrub
200100e8:	00730363          	beq	t1,t2,200100ee <dtim_scrub>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:62
    jal     _metal_memory_scrub
200100ec:	375d                	jal	20010092 <_metal_memory_scrub>

200100ee <dtim_scrub>:
dtim_scrub():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:68

dtim_scrub:
    /* Zero out dtim memory. */
    .weak metal_dtim_0_memory_start
    .weak metal_dtim_0_memory_end
    la      t1, metal_dtim_0_memory_start
200100ee:	5fff0317          	auipc	t1,0x5fff0
200100f2:	f1230313          	addi	t1,t1,-238 # 80000000 <metal_dtim_0_memory_start>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:69
    la      t2, metal_dtim_0_memory_end
200100f6:	5fff4397          	auipc	t2,0x5fff4
200100fa:	f0a38393          	addi	t2,t2,-246 # 80004000 <metal_dtim_0_memory_end>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:70
    beq     t1, t2, ils_scrub
200100fe:	00730363          	beq	t1,t2,20010104 <ils_scrub>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:71
    jal     _metal_memory_scrub
20010102:	3f41                	jal	20010092 <_metal_memory_scrub>

20010104 <ils_scrub>:
ils_scrub():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:77

ils_scrub:
    /* Zero out ils memory. */
    .weak metal_ils_0_memory_start
    .weak metal_ils_0_memory_end
    la      t1, metal_ils_0_memory_start
20010104:	dfff0317          	auipc	t1,0xdfff0
20010108:	efc30313          	addi	t1,t1,-260 # 0 <__metal_boot_hart>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:78
    la      t2, metal_ils_0_memory_end
2001010c:	dfff0397          	auipc	t2,0xdfff0
20010110:	ef438393          	addi	t2,t2,-268 # 0 <__metal_boot_hart>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:79
    beq     t1, t2, dls_scrub
20010114:	00730363          	beq	t1,t2,2001011a <dls_scrub>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:80
    jal     _metal_memory_scrub
20010118:	3fad                	jal	20010092 <_metal_memory_scrub>

2001011a <dls_scrub>:
dls_scrub():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:86

dls_scrub:
    /* Zero out dls memory. */
    .weak metal_dls_0_memory_start
    .weak metal_dls_0_memory_end
    la      t1, metal_dls_0_memory_start
2001011a:	dfff0317          	auipc	t1,0xdfff0
2001011e:	ee630313          	addi	t1,t1,-282 # 0 <__metal_boot_hart>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:87
    la      t2, metal_dls_0_memory_end
20010122:	dfff0397          	auipc	t2,0xdfff0
20010126:	ede38393          	addi	t2,t2,-290 # 0 <__metal_boot_hart>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:88
    beq     t1, t2, sram_scrub
2001012a:	00730363          	beq	t1,t2,20010130 <sram_scrub>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:89
    jal     _metal_memory_scrub
2001012e:	3795                	jal	20010092 <_metal_memory_scrub>

20010130 <sram_scrub>:
sram_scrub():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:95

sram_scrub:
    /* Zero out sram memory. */
    .weak metal_sys_sram_0_memory_start
    .weak metal_sys_sram_0_memory_end
    la      t1, metal_sys_sram_0_memory_start
20010130:	dfff0317          	auipc	t1,0xdfff0
20010134:	ed030313          	addi	t1,t1,-304 # 0 <__metal_boot_hart>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:96
    la      t2, metal_sys_sram_0_memory_end
20010138:	dfff0397          	auipc	t2,0xdfff0
2001013c:	ec838393          	addi	t2,t2,-312 # 0 <__metal_boot_hart>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:97
    beq     t1, t2, memory_scrub
20010140:	00730363          	beq	t1,t2,20010146 <memory_scrub>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:98
    jal     _metal_memory_scrub
20010144:	37b9                	jal	20010092 <_metal_memory_scrub>

20010146 <memory_scrub>:
memory_scrub():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:104

memory_scrub:
    /* Zero out main memory. */
    .weak metal_memory_0_memory_start
    .weak metal_memory_0_memory_end
    la      t1, metal_memory_0_memory_start
20010146:	dfff0317          	auipc	t1,0xdfff0
2001014a:	eba30313          	addi	t1,t1,-326 # 0 <__metal_boot_hart>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:105
    la      t2, metal_memory_0_memory_end
2001014e:	dfff0397          	auipc	t2,0xdfff0
20010152:	eb238393          	addi	t2,t2,-334 # 0 <__metal_boot_hart>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:106
    beq     t1, t2, done_scrub
20010156:	00730363          	beq	t1,t2,2001015c <done_scrub>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:107
    jal     _metal_memory_scrub
2001015a:	3f25                	jal	20010092 <_metal_memory_scrub>

2001015c <done_scrub>:
done_scrub():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:110

done_scrub:
    lui     a4, 0x2000
2001015c:	02000737          	lui	a4,0x2000
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:111
    li      a5,1
20010160:	4785                	li	a5,1
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:112
    sw      a5,0(a4)
20010162:	c31c                	sw	a5,0(a4)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:113
    fence   w,rw
20010164:	0130000f          	fence	w,rw
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:114
    j skip_scrub
20010168:	a029                	j	20010172 <skip_scrub>

2001016a <wait_scrub>:
wait_scrub():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:117

wait_scrub:
    lui     a4, 0x2000
2001016a:	02000737          	lui	a4,0x2000
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:118
    lw      a5, 0(a4)
2001016e:	431c                	lw	a5,0(a4)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:119
    beqz    a5, wait_scrub
20010170:	dfed                	beqz	a5,2001016a <wait_scrub>

20010172 <skip_scrub>:
skip_scrub():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:123

skip_scrub:
    /* Restore caller ra */
    mv      ra, s0
20010172:	80a2                	mv	ra,s0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/scrub.S:124
    ret
20010174:	8082                	ret
	...

20010178 <early_trap_vector>:
early_trap_vector():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/trap.S:64
.section .text.metal.init.trapvec
.global early_trap_vector
.align 2
early_trap_vector:
    .cfi_startproc
    csrr t0, mcause
20010178:	342022f3          	csrr	t0,mcause
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/trap.S:65
    csrr t1, mepc
2001017c:	34102373          	csrr	t1,mepc
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/trap.S:66
    csrr t2, mtval
20010180:	343023f3          	csrr	t2,mtval
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/trap.S:67
    j early_trap_vector
20010184:	bfd5                	j	20010178 <early_trap_vector>

20010186 <__metal_synchronize_harts>:
__metal_synchronize_harts():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/synchronize_harts.c:19
/*
 * _synchronize_harts() is called by crt0.S to cause harts > 0 to wait for
 * hart 0 to finish copying the datat section, zeroing the BSS, and running
 * the libc contstructors.
 */
__attribute__((section(".init"))) void __metal_synchronize_harts() {
20010186:	1141                	addi	sp,sp,-16
20010188:	c622                	sw	s0,12(sp)
2001018a:	0800                	addi	s0,sp,16
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/synchronize_harts.c:66
        while (METAL_MSIP(msip_base, hart) == 1)
            ;
    }

#endif /* __METAL_DT_MAX_HARTS > 1 */
}
2001018c:	0001                	nop
2001018e:	4432                	lw	s0,12(sp)
20010190:	0141                	addi	sp,sp,16
20010192:	8082                	ret

20010194 <_start>:
_start():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:36
.cfi_startproc
.cfi_undefined ra

  /* This is a bit funky: it's not usually sane for _start to return, but in
   * this case we actually want to in order to signal an error to the METAL. */
  mv s0, ra
20010194:	8406                	mv	s0,ra
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:44
   * safely perform any access that may be relaxed without GP being set.  This
   * is done with relaxation disabled to avoid relaxing the address calculation
   * to just "addi gp, gp, 0". */
.option push
.option norelax
  la gp, __global_pointer$
20010196:	5fff1197          	auipc	gp,0x5fff1
2001019a:	af218193          	addi	gp,gp,-1294 # 80000c88 <__global_pointer$>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:50
.option pop

  /* Stack pointer is expected to be initialized before _start */

  /* If we're not hart 0, skip the initialization work */
  la t0, __metal_boot_hart
2001019e:	00000293          	li	t0,0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:51
  bne a0, t0, _skip_init
200101a2:	0a551763          	bne	a0,t0,20010250 <_skip_init>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:60
   * boot and then need to get relocated into a non-persistant writable memory
   * before C code can execute.  If this is the case we do so here.  This step
   * is optional: if the METAL provides an environment in which this relocation
   * is not necessary then it must simply set metal_segment_data_source_start to
   * be equal to metal_segment_data_target_start. */
  la t0, metal_segment_data_source_start
200101a6:	00004297          	auipc	t0,0x4
200101aa:	da228293          	addi	t0,t0,-606 # 20013f48 <metal_segment_data_source_start>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:61
  la t1, metal_segment_data_target_start
200101ae:	5fff0317          	auipc	t1,0x5fff0
200101b2:	e5230313          	addi	t1,t1,-430 # 80000000 <metal_dtim_0_memory_start>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:62
  la t2, metal_segment_data_target_end
200101b6:	5fff0397          	auipc	t2,0x5fff0
200101ba:	31238393          	addi	t2,t2,786 # 800004c8 <__tls_base>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:64

  beq t0, t1, 2f
200101be:	00628c63          	beq	t0,t1,200101d6 <_start+0x42>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:65
  bge t1, t2, 2f
200101c2:	00735a63          	bge	t1,t2,200101d6 <_start+0x42>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:69

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
200101c6:	0002a503          	lw	a0,0(t0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:70
  addi t0, t0, 4
200101ca:	0291                	addi	t0,t0,4
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:71
  sw   a0, 0(t1)
200101cc:	00a32023          	sw	a0,0(t1)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:72
  addi t1, t1, 4
200101d0:	0311                	addi	t1,t1,4
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:73
  blt  t1, t2, 1b
200101d2:	fe734ae3          	blt	t1,t2,200101c6 <_start+0x32>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:84
  blt  t1, t2, 1b
#endif
2:

  /* Copy the ITIM section */
  la t0, metal_segment_itim_source_start
200101d6:	00001297          	auipc	t0,0x1
200101da:	ba228293          	addi	t0,t0,-1118 # 20010d78 <metal_segment_itim_source_start>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:85
  la t1, metal_segment_itim_target_start
200101de:	e7ff0317          	auipc	t1,0xe7ff0
200101e2:	e2230313          	addi	t1,t1,-478 # 8000000 <metal_itim_0_memory_start>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:86
  la t2, metal_segment_itim_target_end
200101e6:	e7ff0397          	auipc	t2,0xe7ff0
200101ea:	e1a38393          	addi	t2,t2,-486 # 8000000 <metal_itim_0_memory_start>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:88

  beq t0, t1, 2f
200101ee:	00628c63          	beq	t0,t1,20010206 <_start+0x72>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:89
  bge t1, t2, 2f
200101f2:	00735a63          	bge	t1,t2,20010206 <_start+0x72>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:93

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
200101f6:	0002a503          	lw	a0,0(t0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:94
  addi t0, t0, 4
200101fa:	0291                	addi	t0,t0,4
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:95
  sw   a0, 0(t1)
200101fc:	00a32023          	sw	a0,0(t1)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:96
  addi t1, t1, 4
20010200:	0311                	addi	t1,t1,4
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:97
  blt  t1, t2, 1b
20010202:	fe734ae3          	blt	t1,t2,200101f6 <_start+0x62>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:109
#endif
2:

  /* Fence all subsequent instruction fetches until after the ITIM writes
     complete */
  fence.i
20010206:	0000100f          	fence.i
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:112

  /* Zero the BSS segment. */
  la t1, metal_segment_bss_target_start
2001020a:	5fff0317          	auipc	t1,0x5fff0
2001020e:	2be30313          	addi	t1,t1,702 # 800004c8 <__tls_base>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:113
  la t2, metal_segment_bss_target_end
20010212:	8d818393          	addi	t2,gp,-1832 # 80000560 <metal_segment_bss_target_end>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:115

  bge t1, t2, 2f
20010216:	00735763          	bge	t1,t2,20010224 <_start+0x90>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:119

1:
#if __riscv_xlen == 32
  sw   x0, 0(t1)
2001021a:	00032023          	sw	zero,0(t1)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:120
  addi t1, t1, 4
2001021e:	0311                	addi	t1,t1,4
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:121
  blt  t1, t2, 1b
20010220:	fe734de3          	blt	t1,t2,2001021a <_start+0x86>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:131
#endif
2:

  /* Set TLS pointer */
  .weak __tls_base	
  la tp, __tls_base
20010224:	5fff0217          	auipc	tp,0x5fff0
20010228:	2a420213          	addi	tp,tp,676 # 800004c8 <__tls_base>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:136

  /* At this point we're in an environment that can execute C code.  The first
   * thing to do is to make the callback to the parent environment if it's been
   * requested to do so. */
  beqz a2, 1f
2001022c:	c211                	beqz	a2,20010230 <_start+0x9c>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:137
  jalr a2
2001022e:	9602                	jalr	a2
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:141
1:

  /* The RISC-V port only uses new-style constructors and destructors. */
  la a0, __libc_fini_array
20010230:	00001517          	auipc	a0,0x1
20010234:	cc450513          	addi	a0,a0,-828 # 20010ef4 <__libc_fini_array>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:142
  call atexit
20010238:	487000ef          	jal	ra,20010ebe <atexit>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:143
  call __libc_init_array
2001023c:	4f1000ef          	jal	ra,20010f2c <__libc_init_array>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:147

  /* Register metal_fini_run as a destructor and call metal_init_run to
   * run and setup Metal constructors */
  la a0, metal_fini_run
20010240:	00001517          	auipc	a0,0x1
20010244:	faa50513          	addi	a0,a0,-86 # 200111ea <metal_fini_run>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:148
  call atexit
20010248:	477000ef          	jal	ra,20010ebe <atexit>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:149
  call metal_init_run
2001024c:	78b000ef          	jal	ra,200111d6 <metal_init_run>

20010250 <_skip_init>:
_skip_init():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:155

_skip_init:

  /* Synchronize harts so that secondary harts wait until hart 0 finishes
     initializing */
  call __metal_synchronize_harts
20010250:	3f1d                	jal	20010186 <__metal_synchronize_harts>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:158

  /* Disable and clear all interrupt sources */
  li   a3, -1
20010252:	56fd                	li	a3,-1
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:159
  csrc mie, a3
20010254:	3046b073          	csrc	mie,a3
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:160
  csrc mip, a3
20010258:	3446b073          	csrc	mip,a3
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:164

  /* The delegation CSRs exist if user mode interrupts (N extension) or
   * supervisor mode (S extension) are supported */
  csrr a5, misa
2001025c:	301027f3          	csrr	a5,misa
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:165
  lui  a4, 0x42
20010260:	00042737          	lui	a4,0x42
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:166
  and  a4, a4, a5
20010264:	8f7d                	and	a4,a4,a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:167
  beqz a4, 1f
20010266:	c709                	beqz	a4,20010270 <_skip_init+0x20>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:168
  csrc mideleg, a3
20010268:	3036b073          	csrc	mideleg,a3
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:169
  csrc medeleg, a3
2001026c:	3026b073          	csrc	medeleg,a3
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:173
1:

  /* The satp CSR exists if supervisor mode (S extension) is supported */
  lui  a4, 0x40
20010270:	00040737          	lui	a4,0x40
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:174
  and  a4, a4, a5
20010274:	8f7d                	and	a4,a4,a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:175
  beqz a4, 1f
20010276:	c319                	beqz	a4,2001027c <_skip_init+0x2c>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:176
  csrc satp, a3
20010278:	1806b073          	csrc	satp,a3
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:180
1:

  /* Check RISC-V isa and enable FS bits if Floating Point architecture. */
  li   a4, 0x10028
2001027c:	00010737          	lui	a4,0x10
20010280:	02870713          	addi	a4,a4,40 # 10028 <__heap_size+0xf828>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:181
  and  a5, a5, a4
20010284:	8ff9                	and	a5,a5,a4
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:182
  beqz a5, 1f
20010286:	cb89                	beqz	a5,20010298 <_skip_init+0x48>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:183
  csrr a5, mstatus
20010288:	300027f3          	csrr	a5,mstatus
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:184
  lui  a4, 0x2
2001028c:	6709                	lui	a4,0x2
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:185
  or   a5, a5, a4
2001028e:	8fd9                	or	a5,a5,a4
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:186
  csrw mstatus, a5
20010290:	30079073          	csrw	mstatus,a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:187
  csrwi fcsr, 0
20010294:	00305073          	csrwi	fcsr,0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:193
1:

  /* This is a C runtime, so main() is defined to have some arguments.  Since
   * there's nothing sane the METAL can pass we don't bother with that but
   * instead just setup as close to a NOP as we can. */
  li a0, 1     /* argc=1 */
20010298:	4505                	li	a0,1
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:194
  la a1, argv  /* argv = {"libgloss", NULL} */
2001029a:	00000597          	auipc	a1,0x0
2001029e:	09e58593          	addi	a1,a1,158 # 20010338 <argv>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:195
  la a2, envp  /* envp = {NULL} */
200102a2:	00000617          	auipc	a2,0x0
200102a6:	09a60613          	addi	a2,a2,154 # 2001033c <envp>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:196
  call secondary_main
200102aa:	2031                	jal	200102b6 <secondary_main>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:202

  /* Call exit to handle libc's cleanup routines.  Under normal contains this
   * shouldn't even get called, but I'm still not using a tail call here
   * because returning to the METAL is the right thing to do in pathological
   * situations. */
  call exit
200102ac:	41d000ef          	jal	ra,20010ec8 <exit>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:207

  /* And here's where we return.  Again, it's a bit odd but the METAL defines
   * this as a bad idea (ie, as opposed to leaving it undefined) and at this
   * point it's really the only thing left to do. */
  mv ra, s0
200102b0:	80a2                	mv	ra,s0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:208
  ret
200102b2:	8082                	ret

200102b4 <_fini>:
_init():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:220
.type   _init, @function
.global _fini
.type   _fini, @function
_init:
_fini:
  ret
200102b4:	8082                	ret

200102b6 <secondary_main>:
secondary_main():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:231
.weak   secondary_main
.global secondary_main
.type   secondary_main, @function

secondary_main:
  addi sp, sp, -16
200102b6:	1141                	addi	sp,sp,-16
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:233
#if __riscv_xlen == 32
  sw ra, 4(sp)
200102b8:	c206                	sw	ra,4(sp)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:237
#else
  sd ra, 8(sp)
#endif
  csrr t0, mhartid
200102ba:	f14022f3          	csrr	t0,mhartid
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:238
  la t1, __metal_boot_hart
200102be:	00000313          	li	t1,0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:239
  beq t0, t1, 2f
200102c2:	00628563          	beq	t0,t1,200102cc <secondary_main+0x16>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:241
1:
  wfi
200102c6:	10500073          	wfi
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:242
  j 1b
200102ca:	bff5                	j	200102c6 <secondary_main+0x10>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:244
2:
  call main
200102cc:	397000ef          	jal	ra,20010e62 <main>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:246
#if __riscv_xlen == 32
  lw ra, 4(sp)
200102d0:	4092                	lw	ra,4(sp)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:250
#else
  ld ra, 8(sp)
#endif
  addi sp, sp, 16
200102d2:	0141                	addi	sp,sp,16
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/crt0.S:251
  ret
200102d4:	8082                	ret

Disassembly of section .ctors:

200102e0 <metal_sifive_fe310_g000_pll_init>:
metal_sifive_fe310_g000_pll_init():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:151
    return pll_input_rate * config->multiplier / config->divisor;
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE

METAL_CONSTRUCTOR(metal_sifive_fe310_g000_pll_init) {
200102e0:	1101                	addi	sp,sp,-32
200102e2:	ce06                	sw	ra,28(sp)
200102e4:	cc22                	sw	s0,24(sp)
200102e6:	1000                	addi	s0,sp,32
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:152
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
200102e8:	2c2030ef          	jal	ra,200135aa <__metal_driver_sifive_fe310_g000_pll_init_rate>
200102ec:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:154
    /* If the PLL init_rate is zero, don't initialize the PLL */
    if (init_rate != 0)
200102f0:	fec42783          	lw	a5,-20(s0)
200102f4:	c799                	beqz	a5,20010302 <metal_sifive_fe310_g000_pll_init+0x22>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:155
        __metal_driver_sifive_fe310_g000_pll_init(
200102f6:	800007b7          	lui	a5,0x80000
200102fa:	47878513          	addi	a0,a5,1144 # 80000478 <metal_dtim_0_memory_end+0xffffc478>
200102fe:	334030ef          	jal	ra,20013632 <__metal_driver_sifive_fe310_g000_pll_init>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:157
            __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE);
}
20010302:	0001                	nop
20010304:	40f2                	lw	ra,28(sp)
20010306:	4462                	lw	s0,24(sp)
20010308:	6105                	addi	sp,sp,32
2001030a:	8082                	ret

2001030c <use_hfxosc>:
use_hfxosc():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:388

    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE
METAL_CONSTRUCTOR(use_hfxosc) {
2001030c:	1101                	addi	sp,sp,-32
2001030e:	ce06                	sw	ra,28(sp)
20010310:	cc22                	sw	s0,24(sp)
20010312:	1000                	addi	s0,sp,32
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:389
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20010314:	296030ef          	jal	ra,200135aa <__metal_driver_sifive_fe310_g000_pll_init_rate>
20010318:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:390
    metal_clock_set_rate_hz(&__METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE->clock,
2001031c:	fec42583          	lw	a1,-20(s0)
20010320:	800007b7          	lui	a5,0x80000
20010324:	47878513          	addi	a0,a5,1144 # 80000478 <metal_dtim_0_memory_end+0xffffc478>
20010328:	1a5030ef          	jal	ra,20013ccc <metal_clock_set_rate_hz>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:392
                            init_rate);
}
2001032c:	0001                	nop
2001032e:	40f2                	lw	ra,28(sp)
20010330:	4462                	lw	s0,24(sp)
20010332:	6105                	addi	sp,sp,32
20010334:	8082                	ret

Disassembly of section .text:

20010d80 <init_PWM>:
init_PWM():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/src/PWM.c:15

/**
 * inits the PWM for the RGB led on the hifive1 revb board
 */
void init_PWM()
{
20010d80:	1141                	addi	sp,sp,-16
20010d82:	c622                	sw	s0,12(sp)
20010d84:	0800                	addi	s0,sp,16
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/src/PWM.c:16
	IOF_EN |=(1<<19)|(1<<21)|(1<<22); //we only enable the RGB LED pins
20010d86:	100127b7          	lui	a5,0x10012
20010d8a:	03878793          	addi	a5,a5,56 # 10012038 <metal_itim_0_memory_end+0x8010038>
20010d8e:	4394                	lw	a3,0(a5)
20010d90:	100127b7          	lui	a5,0x10012
20010d94:	03878793          	addi	a5,a5,56 # 10012038 <metal_itim_0_memory_end+0x8010038>
20010d98:	00680737          	lui	a4,0x680
20010d9c:	8f55                	or	a4,a4,a3
20010d9e:	c398                	sw	a4,0(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/src/PWM.c:18
									  //PIN 20 can also be enabled for PWM
	IOF_SEL |= (1<<19)|(1<<21)|(1<<22);
20010da0:	100127b7          	lui	a5,0x10012
20010da4:	03c78793          	addi	a5,a5,60 # 1001203c <metal_itim_0_memory_end+0x801003c>
20010da8:	4394                	lw	a3,0(a5)
20010daa:	100127b7          	lui	a5,0x10012
20010dae:	03c78793          	addi	a5,a5,60 # 1001203c <metal_itim_0_memory_end+0x801003c>
20010db2:	00680737          	lui	a4,0x680
20010db6:	8f55                	or	a4,a4,a3
20010db8:	c398                	sw	a4,0(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/src/PWM.c:19
	PWM_1_COUNT = (1<<16)-1; //the max value the PWM will count to
20010dba:	100257b7          	lui	a5,0x10025
20010dbe:	07a1                	addi	a5,a5,8
20010dc0:	6741                	lui	a4,0x10
20010dc2:	177d                	addi	a4,a4,-1
20010dc4:	c398                	sw	a4,0(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/src/PWM.c:21
							 //max 30 bits long
	PWM_1_CONFIG =	(1<<9)| //reset to zero after match
20010dc6:	100257b7          	lui	a5,0x10025
20010dca:	6705                	lui	a4,0x1
20010dcc:	20070713          	addi	a4,a4,512 # 1200 <__heap_size+0xa00>
20010dd0:	c398                	sw	a4,0(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/src/PWM.c:23
					(1<<12); // PWM always on
}
20010dd2:	0001                	nop
20010dd4:	4432                	lw	s0,12(sp)
20010dd6:	0141                	addi	sp,sp,16
20010dd8:	8082                	ret

20010dda <set_PWM_1>:
set_PWM_1():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/src/PWM.c:31
 * set the PWM value for a selected PWM output
 * @select_output: the output you which the change the PWM value of
 * @value: the requested output value between 0 and 2^16-1 (65535)
 */
void set_PWM_1(int select_output,int value)
{
20010dda:	1101                	addi	sp,sp,-32
20010ddc:	ce22                	sw	s0,28(sp)
20010dde:	1000                	addi	s0,sp,32
20010de0:	fea42623          	sw	a0,-20(s0)
20010de4:	feb42423          	sw	a1,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/src/PWM.c:32
	switch(select_output)
20010de8:	fec42703          	lw	a4,-20(s0)
20010dec:	4785                	li	a5,1
20010dee:	02f70e63          	beq	a4,a5,20010e2a <set_PWM_1+0x50>
20010df2:	fec42703          	lw	a4,-20(s0)
20010df6:	4785                	li	a5,1
20010df8:	00e7c663          	blt	a5,a4,20010e04 <set_PWM_1+0x2a>
20010dfc:	fec42783          	lw	a5,-20(s0)
20010e00:	cf89                	beqz	a5,20010e1a <set_PWM_1+0x40>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/src/PWM.c:47
		break;
	case 3:
		PWM_1_COMP_3 = value;
		break;
	default:
		break;
20010e02:	a8a1                	j	20010e5a <set_PWM_1+0x80>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/src/PWM.c:32
	switch(select_output)
20010e04:	fec42703          	lw	a4,-20(s0)
20010e08:	4789                	li	a5,2
20010e0a:	02f70863          	beq	a4,a5,20010e3a <set_PWM_1+0x60>
20010e0e:	fec42703          	lw	a4,-20(s0)
20010e12:	478d                	li	a5,3
20010e14:	02f70b63          	beq	a4,a5,20010e4a <set_PWM_1+0x70>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/src/PWM.c:47
		break;
20010e18:	a089                	j	20010e5a <set_PWM_1+0x80>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/src/PWM.c:35
		PWM_1_COMP_0 = value;
20010e1a:	100257b7          	lui	a5,0x10025
20010e1e:	02078793          	addi	a5,a5,32 # 10025020 <metal_itim_0_memory_end+0x8023020>
20010e22:	fe842703          	lw	a4,-24(s0)
20010e26:	c398                	sw	a4,0(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/src/PWM.c:36
		break;
20010e28:	a80d                	j	20010e5a <set_PWM_1+0x80>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/src/PWM.c:38
		PWM_1_COMP_1 = value;
20010e2a:	100257b7          	lui	a5,0x10025
20010e2e:	02478793          	addi	a5,a5,36 # 10025024 <metal_itim_0_memory_end+0x8023024>
20010e32:	fe842703          	lw	a4,-24(s0)
20010e36:	c398                	sw	a4,0(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/src/PWM.c:39
		break;
20010e38:	a00d                	j	20010e5a <set_PWM_1+0x80>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/src/PWM.c:41
		PWM_1_COMP_2 = value;
20010e3a:	100257b7          	lui	a5,0x10025
20010e3e:	02878793          	addi	a5,a5,40 # 10025028 <metal_itim_0_memory_end+0x8023028>
20010e42:	fe842703          	lw	a4,-24(s0)
20010e46:	c398                	sw	a4,0(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/src/PWM.c:42
		break;
20010e48:	a809                	j	20010e5a <set_PWM_1+0x80>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/src/PWM.c:44
		PWM_1_COMP_3 = value;
20010e4a:	100257b7          	lui	a5,0x10025
20010e4e:	02c78793          	addi	a5,a5,44 # 1002502c <metal_itim_0_memory_end+0x802302c>
20010e52:	fe842703          	lw	a4,-24(s0)
20010e56:	c398                	sw	a4,0(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/src/PWM.c:45
		break;
20010e58:	0001                	nop
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/src/PWM.c:50
	}

}
20010e5a:	0001                	nop
20010e5c:	4472                	lw	s0,28(sp)
20010e5e:	6105                	addi	sp,sp,32
20010e60:	8082                	ret

20010e62 <main>:
main():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/src/main.c:3
#include "PWM.h"

int main() {
20010e62:	1101                	addi	sp,sp,-32
20010e64:	ce06                	sw	ra,28(sp)
20010e66:	cc22                	sw	s0,24(sp)
20010e68:	1000                	addi	s0,sp,32
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/src/main.c:5

    init_PWM();
20010e6a:	3f19                	jal	20010d80 <init_PWM>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/src/main.c:6
    int strenght = 0;
20010e6c:	fe042623          	sw	zero,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/src/main.c:9
	while(1)
	{
		if(strenght >= (1<<16)) strenght = 0;
20010e70:	fec42703          	lw	a4,-20(s0)
20010e74:	67c1                	lui	a5,0x10
20010e76:	00f74463          	blt	a4,a5,20010e7e <main+0x1c>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/src/main.c:9 (discriminator 1)
20010e7a:	fe042623          	sw	zero,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/src/main.c:10
		set_PWM_1(PWM_LED_R,(5<<8));
20010e7e:	50000593          	li	a1,1280
20010e82:	450d                	li	a0,3
20010e84:	3f99                	jal	20010dda <set_PWM_1>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/src/main.c:11
		set_PWM_1(PWM_LED_G,(5<<8));
20010e86:	50000593          	li	a1,1280
20010e8a:	4505                	li	a0,1
20010e8c:	37b9                	jal	20010dda <set_PWM_1>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/src/main.c:12
		set_PWM_1(PWM_LED_B,(5<<8));
20010e8e:	50000593          	li	a1,1280
20010e92:	4509                	li	a0,2
20010e94:	3799                	jal	20010dda <set_PWM_1>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/src/main.c:13
		strenght++;
20010e96:	fec42783          	lw	a5,-20(s0)
20010e9a:	0785                	addi	a5,a5,1
20010e9c:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/src/main.c:14
		for(int i=0;i<100;i++);
20010ea0:	fe042423          	sw	zero,-24(s0)
20010ea4:	a031                	j	20010eb0 <main+0x4e>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/src/main.c:14 (discriminator 3)
20010ea6:	fe842783          	lw	a5,-24(s0)
20010eaa:	0785                	addi	a5,a5,1
20010eac:	fef42423          	sw	a5,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/src/main.c:14 (discriminator 1)
20010eb0:	fe842703          	lw	a4,-24(s0)
20010eb4:	06300793          	li	a5,99
20010eb8:	fee7d7e3          	bge	a5,a4,20010ea6 <main+0x44>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/src/main.c:9
		if(strenght >= (1<<16)) strenght = 0;
20010ebc:	bf55                	j	20010e70 <main+0xe>

20010ebe <atexit>:
atexit():
20010ebe:	85aa                	mv	a1,a0
20010ec0:	4681                	li	a3,0
20010ec2:	4601                	li	a2,0
20010ec4:	4501                	li	a0,0
20010ec6:	a8c1                	j	20010f96 <__register_exitproc>

20010ec8 <exit>:
exit():
20010ec8:	1141                	addi	sp,sp,-16
20010eca:	c422                	sw	s0,8(sp)
20010ecc:	c606                	sw	ra,12(sp)
20010ece:	00000797          	auipc	a5,0x0
20010ed2:	15078793          	addi	a5,a5,336 # 2001101e <__call_exitprocs>
20010ed6:	842a                	mv	s0,a0
20010ed8:	c399                	beqz	a5,20010ede <exit+0x16>
20010eda:	4581                	li	a1,0
20010edc:	2289                	jal	2001101e <__call_exitprocs>
20010ede:	5ffef797          	auipc	a5,0x5ffef
20010ee2:	5aa78793          	addi	a5,a5,1450 # 80000488 <_global_impure_ptr>
20010ee6:	4388                	lw	a0,0(a5)
20010ee8:	551c                	lw	a5,40(a0)
20010eea:	c391                	beqz	a5,20010eee <exit+0x26>
20010eec:	9782                	jalr	a5
20010eee:	8522                	mv	a0,s0
20010ef0:	040030ef          	jal	ra,20013f30 <_exit>

20010ef4 <__libc_fini_array>:
__libc_fini_array():
20010ef4:	1141                	addi	sp,sp,-16
20010ef6:	fffff797          	auipc	a5,0xfffff
20010efa:	3ea78793          	addi	a5,a5,1002 # 200102e0 <__fini_array_end>
20010efe:	c422                	sw	s0,8(sp)
20010f00:	fffff417          	auipc	s0,0xfffff
20010f04:	3e040413          	addi	s0,s0,992 # 200102e0 <__fini_array_end>
20010f08:	8c1d                	sub	s0,s0,a5
20010f0a:	c226                	sw	s1,4(sp)
20010f0c:	c606                	sw	ra,12(sp)
20010f0e:	8409                	srai	s0,s0,0x2
20010f10:	84be                	mv	s1,a5
20010f12:	e411                	bnez	s0,20010f1e <__libc_fini_array+0x2a>
20010f14:	40b2                	lw	ra,12(sp)
20010f16:	4422                	lw	s0,8(sp)
20010f18:	4492                	lw	s1,4(sp)
20010f1a:	0141                	addi	sp,sp,16
20010f1c:	8082                	ret
20010f1e:	147d                	addi	s0,s0,-1
20010f20:	00241793          	slli	a5,s0,0x2
20010f24:	97a6                	add	a5,a5,s1
20010f26:	439c                	lw	a5,0(a5)
20010f28:	9782                	jalr	a5
20010f2a:	b7e5                	j	20010f12 <__libc_fini_array+0x1e>

20010f2c <__libc_init_array>:
__libc_init_array():
20010f2c:	1141                	addi	sp,sp,-16
20010f2e:	fffff797          	auipc	a5,0xfffff
20010f32:	3aa78793          	addi	a5,a5,938 # 200102d8 <_metal_sifive_fe310_g000_pll_init_ptr>
20010f36:	c422                	sw	s0,8(sp)
20010f38:	fffff417          	auipc	s0,0xfffff
20010f3c:	3a040413          	addi	s0,s0,928 # 200102d8 <_metal_sifive_fe310_g000_pll_init_ptr>
20010f40:	8c1d                	sub	s0,s0,a5
20010f42:	c226                	sw	s1,4(sp)
20010f44:	c04a                	sw	s2,0(sp)
20010f46:	c606                	sw	ra,12(sp)
20010f48:	8409                	srai	s0,s0,0x2
20010f4a:	4481                	li	s1,0
20010f4c:	893e                	mv	s2,a5
20010f4e:	02849663          	bne	s1,s0,20010f7a <__libc_init_array+0x4e>
20010f52:	fffff797          	auipc	a5,0xfffff
20010f56:	38678793          	addi	a5,a5,902 # 200102d8 <_metal_sifive_fe310_g000_pll_init_ptr>
20010f5a:	fffff417          	auipc	s0,0xfffff
20010f5e:	37e40413          	addi	s0,s0,894 # 200102d8 <_metal_sifive_fe310_g000_pll_init_ptr>
20010f62:	8c1d                	sub	s0,s0,a5
20010f64:	8409                	srai	s0,s0,0x2
20010f66:	4481                	li	s1,0
20010f68:	893e                	mv	s2,a5
20010f6a:	00849f63          	bne	s1,s0,20010f88 <__libc_init_array+0x5c>
20010f6e:	40b2                	lw	ra,12(sp)
20010f70:	4422                	lw	s0,8(sp)
20010f72:	4492                	lw	s1,4(sp)
20010f74:	4902                	lw	s2,0(sp)
20010f76:	0141                	addi	sp,sp,16
20010f78:	8082                	ret
20010f7a:	00249793          	slli	a5,s1,0x2
20010f7e:	97ca                	add	a5,a5,s2
20010f80:	439c                	lw	a5,0(a5)
20010f82:	0485                	addi	s1,s1,1
20010f84:	9782                	jalr	a5
20010f86:	b7e1                	j	20010f4e <__libc_init_array+0x22>
20010f88:	00249793          	slli	a5,s1,0x2
20010f8c:	97ca                	add	a5,a5,s2
20010f8e:	439c                	lw	a5,0(a5)
20010f90:	0485                	addi	s1,s1,1
20010f92:	9782                	jalr	a5
20010f94:	bfd9                	j	20010f6a <__libc_init_array+0x3e>

20010f96 <__register_exitproc>:
__register_exitproc():
20010f96:	5ffef797          	auipc	a5,0x5ffef
20010f9a:	53278793          	addi	a5,a5,1330 # 800004c8 <__tls_base>
20010f9e:	439c                	lw	a5,0(a5)
20010fa0:	8e2a                	mv	t3,a0
20010fa2:	e39d                	bnez	a5,20010fc8 <__register_exitproc+0x32>
20010fa4:	5ffef717          	auipc	a4,0x5ffef
20010fa8:	53070713          	addi	a4,a4,1328 # 800004d4 <_global_atexit0>
20010fac:	5ffef797          	auipc	a5,0x5ffef
20010fb0:	50e7ae23          	sw	a4,1308(a5) # 800004c8 <__tls_base>
20010fb4:	dffef517          	auipc	a0,0xdffef
20010fb8:	04c50513          	addi	a0,a0,76 # 0 <__metal_boot_hart>
20010fbc:	87ba                	mv	a5,a4
20010fbe:	c509                	beqz	a0,20010fc8 <__register_exitproc+0x32>
20010fc0:	411c                	lw	a5,0(a0)
20010fc2:	8cf1aa23          	sw	a5,-1836(gp) # 8000055c <_global_atexit0+0x88>
20010fc6:	87ba                	mv	a5,a4
20010fc8:	43d8                	lw	a4,4(a5)
20010fca:	487d                	li	a6,31
20010fcc:	557d                	li	a0,-1
20010fce:	04e84763          	blt	a6,a4,2001101c <__register_exitproc+0x86>
20010fd2:	020e0e63          	beqz	t3,2001100e <__register_exitproc+0x78>
20010fd6:	0887a803          	lw	a6,136(a5)
20010fda:	04080163          	beqz	a6,2001101c <__register_exitproc+0x86>
20010fde:	00271893          	slli	a7,a4,0x2
20010fe2:	98c2                	add	a7,a7,a6
20010fe4:	00c8a023          	sw	a2,0(a7)
20010fe8:	10082303          	lw	t1,256(a6)
20010fec:	4605                	li	a2,1
20010fee:	00e61633          	sll	a2,a2,a4
20010ff2:	00c36333          	or	t1,t1,a2
20010ff6:	10682023          	sw	t1,256(a6)
20010ffa:	08d8a023          	sw	a3,128(a7)
20010ffe:	4689                	li	a3,2
20011000:	00de1763          	bne	t3,a3,2001100e <__register_exitproc+0x78>
20011004:	10482683          	lw	a3,260(a6)
20011008:	8e55                	or	a2,a2,a3
2001100a:	10c82223          	sw	a2,260(a6)
2001100e:	00170693          	addi	a3,a4,1
20011012:	070a                	slli	a4,a4,0x2
20011014:	c3d4                	sw	a3,4(a5)
20011016:	97ba                	add	a5,a5,a4
20011018:	c78c                	sw	a1,8(a5)
2001101a:	4501                	li	a0,0
2001101c:	8082                	ret

2001101e <__call_exitprocs>:
__call_exitprocs():
2001101e:	7179                	addi	sp,sp,-48
20011020:	cc52                	sw	s4,24(sp)
20011022:	ca56                	sw	s5,20(sp)
20011024:	c85a                	sw	s6,16(sp)
20011026:	c65e                	sw	s7,12(sp)
20011028:	d606                	sw	ra,44(sp)
2001102a:	d422                	sw	s0,40(sp)
2001102c:	d226                	sw	s1,36(sp)
2001102e:	d04a                	sw	s2,32(sp)
20011030:	ce4e                	sw	s3,28(sp)
20011032:	c462                	sw	s8,8(sp)
20011034:	8b2a                	mv	s6,a0
20011036:	8a2e                	mv	s4,a1
20011038:	5ffefa97          	auipc	s5,0x5ffef
2001103c:	490a8a93          	addi	s5,s5,1168 # 800004c8 <__tls_base>
20011040:	4b85                	li	s7,1
20011042:	000aa403          	lw	s0,0(s5)
20011046:	c811                	beqz	s0,2001105a <__call_exitprocs+0x3c>
20011048:	4044                	lw	s1,4(s0)
2001104a:	08842983          	lw	s3,136(s0)
2001104e:	fff48913          	addi	s2,s1,-1
20011052:	048a                	slli	s1,s1,0x2
20011054:	94a2                	add	s1,s1,s0
20011056:	00095e63          	bgez	s2,20011072 <__call_exitprocs+0x54>
2001105a:	50b2                	lw	ra,44(sp)
2001105c:	5422                	lw	s0,40(sp)
2001105e:	5492                	lw	s1,36(sp)
20011060:	5902                	lw	s2,32(sp)
20011062:	49f2                	lw	s3,28(sp)
20011064:	4a62                	lw	s4,24(sp)
20011066:	4ad2                	lw	s5,20(sp)
20011068:	4b42                	lw	s6,16(sp)
2001106a:	4bb2                	lw	s7,12(sp)
2001106c:	4c22                	lw	s8,8(sp)
2001106e:	6145                	addi	sp,sp,48
20011070:	8082                	ret
20011072:	000a0e63          	beqz	s4,2001108e <__call_exitprocs+0x70>
20011076:	00099563          	bnez	s3,20011080 <__call_exitprocs+0x62>
2001107a:	197d                	addi	s2,s2,-1
2001107c:	14f1                	addi	s1,s1,-4
2001107e:	bfe1                	j	20011056 <__call_exitprocs+0x38>
20011080:	00291793          	slli	a5,s2,0x2
20011084:	97ce                	add	a5,a5,s3
20011086:	0807a783          	lw	a5,128(a5)
2001108a:	ff4798e3          	bne	a5,s4,2001107a <__call_exitprocs+0x5c>
2001108e:	4058                	lw	a4,4(s0)
20011090:	40dc                	lw	a5,4(s1)
20011092:	177d                	addi	a4,a4,-1
20011094:	03271863          	bne	a4,s2,200110c4 <__call_exitprocs+0xa6>
20011098:	01242223          	sw	s2,4(s0)
2001109c:	dff9                	beqz	a5,2001107a <__call_exitprocs+0x5c>
2001109e:	00442c03          	lw	s8,4(s0)
200110a2:	00098863          	beqz	s3,200110b2 <__call_exitprocs+0x94>
200110a6:	1009a683          	lw	a3,256(s3)
200110aa:	012b9733          	sll	a4,s7,s2
200110ae:	8ef9                	and	a3,a3,a4
200110b0:	ee89                	bnez	a3,200110ca <__call_exitprocs+0xac>
200110b2:	9782                	jalr	a5
200110b4:	4058                	lw	a4,4(s0)
200110b6:	000aa783          	lw	a5,0(s5)
200110ba:	f98714e3          	bne	a4,s8,20011042 <__call_exitprocs+0x24>
200110be:	faf40ee3          	beq	s0,a5,2001107a <__call_exitprocs+0x5c>
200110c2:	b741                	j	20011042 <__call_exitprocs+0x24>
200110c4:	0004a223          	sw	zero,4(s1)
200110c8:	bfd1                	j	2001109c <__call_exitprocs+0x7e>
200110ca:	00291693          	slli	a3,s2,0x2
200110ce:	96ce                	add	a3,a3,s3
200110d0:	428c                	lw	a1,0(a3)
200110d2:	1049a683          	lw	a3,260(s3)
200110d6:	8f75                	and	a4,a4,a3
200110d8:	e701                	bnez	a4,200110e0 <__call_exitprocs+0xc2>
200110da:	855a                	mv	a0,s6
200110dc:	9782                	jalr	a5
200110de:	bfd9                	j	200110b4 <__call_exitprocs+0x96>
200110e0:	852e                	mv	a0,a1
200110e2:	9782                	jalr	a5
200110e4:	bfc1                	j	200110b4 <__call_exitprocs+0x96>

200110e6 <metal_init>:
metal_init():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/init.c:17
extern metal_constructor_t metal_constructors_start;
extern metal_constructor_t metal_constructors_end;
extern metal_destructor_t metal_destructors_start;
extern metal_destructor_t metal_destructors_end;

void metal_init(void) {
200110e6:	1101                	addi	sp,sp,-32
200110e8:	ce06                	sw	ra,28(sp)
200110ea:	cc22                	sw	s0,24(sp)
200110ec:	1000                	addi	s0,sp,32
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/init.c:20
    /* Make sure the constructors only run once */
    static int init_done = 0;
    if (init_done) {
200110ee:	800007b7          	lui	a5,0x80000
200110f2:	4cc7a783          	lw	a5,1228(a5) # 800004cc <metal_dtim_0_memory_end+0xffffc4cc>
200110f6:	efa9                	bnez	a5,20011150 <metal_init+0x6a>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/init.c:23
        return;
    }
    init_done = 1;
200110f8:	800007b7          	lui	a5,0x80000
200110fc:	4705                	li	a4,1
200110fe:	4ce7a623          	sw	a4,1228(a5) # 800004cc <metal_dtim_0_memory_end+0xffffc4cc>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/init.c:25

    if (&metal_constructors_end <= &metal_constructors_start) {
20011102:	200107b7          	lui	a5,0x20010
20011106:	2e078713          	addi	a4,a5,736 # 200102e0 <__fini_array_end>
2001110a:	200107b7          	lui	a5,0x20010
2001110e:	2d878793          	addi	a5,a5,728 # 200102d8 <_metal_sifive_fe310_g000_pll_init_ptr>
20011112:	04e7f163          	bgeu	a5,a4,20011154 <metal_init+0x6e>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/init.c:29
        return;
    }

    metal_constructor_t *funcptr = &metal_constructors_start;
20011116:	200107b7          	lui	a5,0x20010
2001111a:	2d878793          	addi	a5,a5,728 # 200102d8 <_metal_sifive_fe310_g000_pll_init_ptr>
2001111e:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
20011122:	a831                	j	2001113e <metal_init+0x58>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/init.c:31
        metal_constructor_t func = *funcptr;
20011124:	fec42783          	lw	a5,-20(s0)
20011128:	439c                	lw	a5,0(a5)
2001112a:	fef42423          	sw	a5,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/init.c:33

        func();
2001112e:	fe842783          	lw	a5,-24(s0)
20011132:	9782                	jalr	a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/init.c:35

        funcptr += 1;
20011134:	fec42783          	lw	a5,-20(s0)
20011138:	0791                	addi	a5,a5,4
2001113a:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
2001113e:	fec42703          	lw	a4,-20(s0)
20011142:	200107b7          	lui	a5,0x20010
20011146:	2e078793          	addi	a5,a5,736 # 200102e0 <__fini_array_end>
2001114a:	fcf71de3          	bne	a4,a5,20011124 <metal_init+0x3e>
2001114e:	a021                	j	20011156 <metal_init+0x70>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/init.c:21
        return;
20011150:	0001                	nop
20011152:	a011                	j	20011156 <metal_init+0x70>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/init.c:26
        return;
20011154:	0001                	nop
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/init.c:37
    }
}
20011156:	40f2                	lw	ra,28(sp)
20011158:	4462                	lw	s0,24(sp)
2001115a:	6105                	addi	sp,sp,32
2001115c:	8082                	ret

2001115e <metal_fini>:
metal_fini():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/init.c:39

void metal_fini(void) {
2001115e:	1101                	addi	sp,sp,-32
20011160:	ce06                	sw	ra,28(sp)
20011162:	cc22                	sw	s0,24(sp)
20011164:	1000                	addi	s0,sp,32
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/init.c:42
    /* Make sure the destructors only run once */
    static int fini_done = 0;
    if (fini_done) {
20011166:	800007b7          	lui	a5,0x80000
2001116a:	4d07a783          	lw	a5,1232(a5) # 800004d0 <metal_dtim_0_memory_end+0xffffc4d0>
2001116e:	efa9                	bnez	a5,200111c8 <metal_fini+0x6a>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/init.c:45
        return;
    }
    fini_done = 1;
20011170:	800007b7          	lui	a5,0x80000
20011174:	4705                	li	a4,1
20011176:	4ce7a823          	sw	a4,1232(a5) # 800004d0 <metal_dtim_0_memory_end+0xffffc4d0>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/init.c:47

    if (&metal_destructors_end <= &metal_destructors_start) {
2001117a:	200107b7          	lui	a5,0x20010
2001117e:	2e078713          	addi	a4,a5,736 # 200102e0 <__fini_array_end>
20011182:	200107b7          	lui	a5,0x20010
20011186:	2e078793          	addi	a5,a5,736 # 200102e0 <__fini_array_end>
2001118a:	04e7f163          	bgeu	a5,a4,200111cc <metal_fini+0x6e>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/init.c:51
        return;
    }

    metal_destructor_t *funcptr = &metal_destructors_start;
2001118e:	200107b7          	lui	a5,0x20010
20011192:	2e078793          	addi	a5,a5,736 # 200102e0 <__fini_array_end>
20011196:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
2001119a:	a831                	j	200111b6 <metal_fini+0x58>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/init.c:53
        metal_destructor_t func = *funcptr;
2001119c:	fec42783          	lw	a5,-20(s0)
200111a0:	439c                	lw	a5,0(a5)
200111a2:	fef42423          	sw	a5,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/init.c:55

        func();
200111a6:	fe842783          	lw	a5,-24(s0)
200111aa:	9782                	jalr	a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/init.c:57

        funcptr += 1;
200111ac:	fec42783          	lw	a5,-20(s0)
200111b0:	0791                	addi	a5,a5,4
200111b2:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
200111b6:	fec42703          	lw	a4,-20(s0)
200111ba:	200107b7          	lui	a5,0x20010
200111be:	2e078793          	addi	a5,a5,736 # 200102e0 <__fini_array_end>
200111c2:	fcf71de3          	bne	a4,a5,2001119c <metal_fini+0x3e>
200111c6:	a021                	j	200111ce <metal_fini+0x70>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/init.c:43
        return;
200111c8:	0001                	nop
200111ca:	a011                	j	200111ce <metal_fini+0x70>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/init.c:48
        return;
200111cc:	0001                	nop
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/init.c:59
    }
}
200111ce:	40f2                	lw	ra,28(sp)
200111d0:	4462                	lw	s0,24(sp)
200111d2:	6105                	addi	sp,sp,32
200111d4:	8082                	ret

200111d6 <metal_init_run>:
metal_init_run():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/init.c:69
 * in the case that users don't want the metal constructors or
 * destructors to run.
 */

void metal_init_run(void) __attribute__((weak));
void metal_init_run(void) { metal_init(); }
200111d6:	1141                	addi	sp,sp,-16
200111d8:	c606                	sw	ra,12(sp)
200111da:	c422                	sw	s0,8(sp)
200111dc:	0800                	addi	s0,sp,16
200111de:	3721                	jal	200110e6 <metal_init>
200111e0:	0001                	nop
200111e2:	40b2                	lw	ra,12(sp)
200111e4:	4422                	lw	s0,8(sp)
200111e6:	0141                	addi	sp,sp,16
200111e8:	8082                	ret

200111ea <metal_fini_run>:
metal_fini_run():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/init.c:72

void metal_fini_run(void) __attribute__((weak));
void metal_fini_run(void) { metal_fini(); }
200111ea:	1141                	addi	sp,sp,-16
200111ec:	c606                	sw	ra,12(sp)
200111ee:	c422                	sw	s0,8(sp)
200111f0:	0800                	addi	s0,sp,16
200111f2:	37b5                	jal	2001115e <metal_fini>
200111f4:	0001                	nop
200111f6:	40b2                	lw	ra,12(sp)
200111f8:	4422                	lw	s0,8(sp)
200111fa:	0141                	addi	sp,sp,16
200111fc:	8082                	ret

200111fe <__metal_driver_sifive_clint0_control_base>:
__metal_driver_sifive_clint0_control_base():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:231
/* --------------------- fixed_factor_clock ------------ */


/* --------------------- sifive_clint0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_clint0_control_base(struct metal_interrupt *controller)
{
200111fe:	1101                	addi	sp,sp,-32
20011200:	ce22                	sw	s0,28(sp)
20011202:	1000                	addi	s0,sp,32
20011204:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:232
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20011208:	fec42703          	lw	a4,-20(s0)
2001120c:	800007b7          	lui	a5,0x80000
20011210:	49078793          	addi	a5,a5,1168 # 80000490 <metal_dtim_0_memory_end+0xffffc490>
20011214:	00f71563          	bne	a4,a5,2001121e <__metal_driver_sifive_clint0_control_base+0x20>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:233
		return METAL_RISCV_CLINT0_2000000_BASE_ADDRESS;
20011218:	020007b7          	lui	a5,0x2000
2001121c:	a011                	j	20011220 <__metal_driver_sifive_clint0_control_base+0x22>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:236
	}
	else {
		return 0;
2001121e:	4781                	li	a5,0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:238
	}
}
20011220:	853e                	mv	a0,a5
20011222:	4472                	lw	s0,28(sp)
20011224:	6105                	addi	sp,sp,32
20011226:	8082                	ret

20011228 <__metal_driver_sifive_clint0_num_interrupts>:
__metal_driver_sifive_clint0_num_interrupts():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:251
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_clint0_num_interrupts(struct metal_interrupt *controller)
{
20011228:	1101                	addi	sp,sp,-32
2001122a:	ce22                	sw	s0,28(sp)
2001122c:	1000                	addi	s0,sp,32
2001122e:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:252
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20011232:	fec42703          	lw	a4,-20(s0)
20011236:	800007b7          	lui	a5,0x80000
2001123a:	49078793          	addi	a5,a5,1168 # 80000490 <metal_dtim_0_memory_end+0xffffc490>
2001123e:	00f71463          	bne	a4,a5,20011246 <__metal_driver_sifive_clint0_num_interrupts+0x1e>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:253
		return METAL_MAX_CLINT_INTERRUPTS;
20011242:	4789                	li	a5,2
20011244:	a011                	j	20011248 <__metal_driver_sifive_clint0_num_interrupts+0x20>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:256
	}
	else {
		return 0;
20011246:	4781                	li	a5,0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:258
	}
}
20011248:	853e                	mv	a0,a5
2001124a:	4472                	lw	s0,28(sp)
2001124c:	6105                	addi	sp,sp,32
2001124e:	8082                	ret

20011250 <__metal_driver_sifive_clint0_interrupt_parents>:
__metal_driver_sifive_clint0_interrupt_parents():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:261

static __inline__ struct metal_interrupt * __metal_driver_sifive_clint0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
20011250:	1101                	addi	sp,sp,-32
20011252:	ce22                	sw	s0,28(sp)
20011254:	1000                	addi	s0,sp,32
20011256:	fea42623          	sw	a0,-20(s0)
2001125a:	feb42423          	sw	a1,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:262
	if (idx == 0) {
2001125e:	fe842783          	lw	a5,-24(s0)
20011262:	e791                	bnez	a5,2001126e <__metal_driver_sifive_clint0_interrupt_parents+0x1e>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:263
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20011264:	800007b7          	lui	a5,0x80000
20011268:	09078793          	addi	a5,a5,144 # 80000090 <metal_dtim_0_memory_end+0xffffc090>
2001126c:	a821                	j	20011284 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:265
	}
	else if (idx == 1) {
2001126e:	fe842703          	lw	a4,-24(s0)
20011272:	4785                	li	a5,1
20011274:	00f71763          	bne	a4,a5,20011282 <__metal_driver_sifive_clint0_interrupt_parents+0x32>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:266
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20011278:	800007b7          	lui	a5,0x80000
2001127c:	09078793          	addi	a5,a5,144 # 80000090 <metal_dtim_0_memory_end+0xffffc090>
20011280:	a011                	j	20011284 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:269
	}
	else {
		return NULL;
20011282:	4781                	li	a5,0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:271
	}
}
20011284:	853e                	mv	a0,a5
20011286:	4472                	lw	s0,28(sp)
20011288:	6105                	addi	sp,sp,32
2001128a:	8082                	ret

2001128c <__metal_driver_sifive_clint0_interrupt_lines>:
__metal_driver_sifive_clint0_interrupt_lines():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:274

static __inline__ int __metal_driver_sifive_clint0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
2001128c:	1101                	addi	sp,sp,-32
2001128e:	ce22                	sw	s0,28(sp)
20011290:	1000                	addi	s0,sp,32
20011292:	fea42623          	sw	a0,-20(s0)
20011296:	feb42423          	sw	a1,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:275
	if (idx == 0) {
2001129a:	fe842783          	lw	a5,-24(s0)
2001129e:	e399                	bnez	a5,200112a4 <__metal_driver_sifive_clint0_interrupt_lines+0x18>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:276
		return 3;
200112a0:	478d                	li	a5,3
200112a2:	a809                	j	200112b4 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:278
	}
	else if (idx == 1) {
200112a4:	fe842703          	lw	a4,-24(s0)
200112a8:	4785                	li	a5,1
200112aa:	00f71463          	bne	a4,a5,200112b2 <__metal_driver_sifive_clint0_interrupt_lines+0x26>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:279
		return 7;
200112ae:	479d                	li	a5,7
200112b0:	a011                	j	200112b4 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:282
	}
	else {
		return 0;
200112b2:	4781                	li	a5,0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:284
	}
}
200112b4:	853e                	mv	a0,a5
200112b6:	4472                	lw	s0,28(sp)
200112b8:	6105                	addi	sp,sp,32
200112ba:	8082                	ret

200112bc <__metal_clint0_mtime_get>:
__metal_clint0_mtime_get():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:14
#include <metal/drivers/riscv_clint0.h>
#include <metal/io.h>
#include <metal/machine.h>

unsigned long long
__metal_clint0_mtime_get(struct __metal_driver_riscv_clint0 *clint) {
200112bc:	715d                	addi	sp,sp,-80
200112be:	c686                	sw	ra,76(sp)
200112c0:	c4a2                	sw	s0,72(sp)
200112c2:	c2ca                	sw	s2,68(sp)
200112c4:	c0ce                	sw	s3,64(sp)
200112c6:	de52                	sw	s4,60(sp)
200112c8:	dc56                	sw	s5,56(sp)
200112ca:	da5a                	sw	s6,52(sp)
200112cc:	d85e                	sw	s7,48(sp)
200112ce:	d662                	sw	s8,44(sp)
200112d0:	d466                	sw	s9,40(sp)
200112d2:	0880                	addi	s0,sp,80
200112d4:	faa42e23          	sw	a0,-68(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:17
    __metal_io_u32 lo, hi;
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
200112d8:	fbc42783          	lw	a5,-68(s0)
200112dc:	853e                	mv	a0,a5
200112de:	3705                	jal	200111fe <__metal_driver_sifive_clint0_control_base>
200112e0:	fca42623          	sw	a0,-52(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:21 (discriminator 1)

    /* Guard against rollover when reading */
    do {
        hi = __METAL_ACCESS_ONCE(
200112e4:	fcc42703          	lw	a4,-52(s0)
200112e8:	67b1                	lui	a5,0xc
200112ea:	17f1                	addi	a5,a5,-4
200112ec:	97ba                	add	a5,a5,a4
200112ee:	439c                	lw	a5,0(a5)
200112f0:	fcf42423          	sw	a5,-56(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:23 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4));
        lo = __METAL_ACCESS_ONCE(
200112f4:	fcc42703          	lw	a4,-52(s0)
200112f8:	67b1                	lui	a5,0xc
200112fa:	17e1                	addi	a5,a5,-8
200112fc:	97ba                	add	a5,a5,a4
200112fe:	439c                	lw	a5,0(a5)
20011300:	fcf42223          	sw	a5,-60(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:25 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME));
    } while (__METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20011304:	fcc42703          	lw	a4,-52(s0)
20011308:	67b1                	lui	a5,0xc
2001130a:	17f1                	addi	a5,a5,-4
2001130c:	97ba                	add	a5,a5,a4
2001130e:	439c                	lw	a5,0(a5)
20011310:	fc842703          	lw	a4,-56(s0)
20011314:	fcf718e3          	bne	a4,a5,200112e4 <__metal_clint0_mtime_get+0x28>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:29
                                                    METAL_RISCV_CLINT0_MTIME +
                                                    4)) != hi);

    return (((unsigned long long)hi) << 32) | lo;
20011318:	fc842783          	lw	a5,-56(s0)
2001131c:	8c3e                	mv	s8,a5
2001131e:	4c81                	li	s9,0
20011320:	000c1993          	slli	s3,s8,0x0
20011324:	4901                	li	s2,0
20011326:	fc442783          	lw	a5,-60(s0)
2001132a:	8a3e                	mv	s4,a5
2001132c:	4a81                	li	s5,0
2001132e:	01496b33          	or	s6,s2,s4
20011332:	0159ebb3          	or	s7,s3,s5
20011336:	87da                	mv	a5,s6
20011338:	885e                	mv	a6,s7
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:30
}
2001133a:	853e                	mv	a0,a5
2001133c:	85c2                	mv	a1,a6
2001133e:	40b6                	lw	ra,76(sp)
20011340:	4426                	lw	s0,72(sp)
20011342:	4916                	lw	s2,68(sp)
20011344:	4986                	lw	s3,64(sp)
20011346:	5a72                	lw	s4,60(sp)
20011348:	5ae2                	lw	s5,56(sp)
2001134a:	5b52                	lw	s6,52(sp)
2001134c:	5bc2                	lw	s7,48(sp)
2001134e:	5c32                	lw	s8,44(sp)
20011350:	5ca2                	lw	s9,40(sp)
20011352:	6161                	addi	sp,sp,80
20011354:	8082                	ret

20011356 <__metal_driver_riscv_clint0_mtimecmp_set>:
__metal_driver_riscv_clint0_mtimecmp_set():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:34

int __metal_driver_riscv_clint0_mtimecmp_set(struct metal_interrupt *controller,
                                             int hartid,
                                             unsigned long long time) {
20011356:	7179                	addi	sp,sp,-48
20011358:	d606                	sw	ra,44(sp)
2001135a:	d422                	sw	s0,40(sp)
2001135c:	d24a                	sw	s2,36(sp)
2001135e:	d04e                	sw	s3,32(sp)
20011360:	1800                	addi	s0,sp,48
20011362:	fca42e23          	sw	a0,-36(s0)
20011366:	fcb42c23          	sw	a1,-40(s0)
2001136a:	fcc42823          	sw	a2,-48(s0)
2001136e:	fcd42a23          	sw	a3,-44(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:35
    struct __metal_driver_riscv_clint0 *clint =
20011372:	fdc42783          	lw	a5,-36(s0)
20011376:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:38
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
2001137a:	fec42783          	lw	a5,-20(s0)
2001137e:	853e                	mv	a0,a5
20011380:	3dbd                	jal	200111fe <__metal_driver_sifive_clint0_control_base>
20011382:	fea42423          	sw	a0,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:45
     * and are NOT internally latched for multiword transfers.
     * Need to be careful about sequencing to avoid triggering
     * spurious interrupts: For that set the high word to a max
     * value first.
     */
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
20011386:	fd842783          	lw	a5,-40(s0)
2001138a:	078e                	slli	a5,a5,0x3
2001138c:	873e                	mv	a4,a5
2001138e:	fe842783          	lw	a5,-24(s0)
20011392:	973e                	add	a4,a4,a5
20011394:	6791                	lui	a5,0x4
20011396:	0791                	addi	a5,a5,4
20011398:	97ba                	add	a5,a5,a4
2001139a:	873e                	mv	a4,a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:47
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = 0xFFFFFFFF;
2001139c:	57fd                	li	a5,-1
2001139e:	c31c                	sw	a5,0(a4)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:48
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
200113a0:	fd842783          	lw	a5,-40(s0)
200113a4:	078e                	slli	a5,a5,0x3
200113a6:	873e                	mv	a4,a5
200113a8:	fe842783          	lw	a5,-24(s0)
200113ac:	973e                	add	a4,a4,a5
200113ae:	6791                	lui	a5,0x4
200113b0:	97ba                	add	a5,a5,a4
200113b2:	873e                	mv	a4,a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:50
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
        (__metal_io_u32)time;
200113b4:	fd042783          	lw	a5,-48(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:49
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
200113b8:	c31c                	sw	a5,0(a4)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:53
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = (__metal_io_u32)(time >> 32);
200113ba:	fd442783          	lw	a5,-44(s0)
200113be:	0007d913          	srli	s2,a5,0x0
200113c2:	4981                	li	s3,0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:51
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
200113c4:	fd842783          	lw	a5,-40(s0)
200113c8:	078e                	slli	a5,a5,0x3
200113ca:	873e                	mv	a4,a5
200113cc:	fe842783          	lw	a5,-24(s0)
200113d0:	973e                	add	a4,a4,a5
200113d2:	6791                	lui	a5,0x4
200113d4:	0791                	addi	a5,a5,4
200113d6:	97ba                	add	a5,a5,a4
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:53
                                           4)) = (__metal_io_u32)(time >> 32);
200113d8:	874a                	mv	a4,s2
200113da:	c398                	sw	a4,0(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:54
    return 0;
200113dc:	4781                	li	a5,0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:55
}
200113de:	853e                	mv	a0,a5
200113e0:	50b2                	lw	ra,44(sp)
200113e2:	5422                	lw	s0,40(sp)
200113e4:	5912                	lw	s2,36(sp)
200113e6:	5982                	lw	s3,32(sp)
200113e8:	6145                	addi	sp,sp,48
200113ea:	8082                	ret

200113ec <_get_cpu_intc>:
_get_cpu_intc():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:57

static struct metal_interrupt *_get_cpu_intc() {
200113ec:	1101                	addi	sp,sp,-32
200113ee:	ce06                	sw	ra,28(sp)
200113f0:	cc22                	sw	s0,24(sp)
200113f2:	1000                	addi	s0,sp,32
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:58
    int hartid = 0;
200113f4:	fe042623          	sw	zero,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:59
    __asm__ volatile("csrr %[hartid], mhartid"
200113f8:	f14027f3          	csrr	a5,mhartid
200113fc:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:62
                     : [hartid] "=r"(hartid)::"memory");

    struct metal_cpu *cpu = metal_cpu_get(hartid);
20011400:	fec42783          	lw	a5,-20(s0)
20011404:	853e                	mv	a0,a5
20011406:	135020ef          	jal	ra,20013d3a <metal_cpu_get>
2001140a:	fea42423          	sw	a0,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:64

    return metal_cpu_interrupt_controller(cpu);
2001140e:	fe842503          	lw	a0,-24(s0)
20011412:	103020ef          	jal	ra,20013d14 <metal_cpu_interrupt_controller>
20011416:	87aa                	mv	a5,a0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:65
}
20011418:	853e                	mv	a0,a5
2001141a:	40f2                	lw	ra,28(sp)
2001141c:	4462                	lw	s0,24(sp)
2001141e:	6105                	addi	sp,sp,32
20011420:	8082                	ret

20011422 <__metal_driver_riscv_clint0_init>:
__metal_driver_riscv_clint0_init():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:67

void __metal_driver_riscv_clint0_init(struct metal_interrupt *controller) {
20011422:	7139                	addi	sp,sp,-64
20011424:	de06                	sw	ra,60(sp)
20011426:	dc22                	sw	s0,56(sp)
20011428:	0080                	addi	s0,sp,64
2001142a:	fca42623          	sw	a0,-52(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:69
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
2001142e:	fcc42503          	lw	a0,-52(s0)
20011432:	3bdd                	jal	20011228 <__metal_driver_sifive_clint0_num_interrupts>
20011434:	fea42423          	sw	a0,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:70
    struct __metal_driver_riscv_clint0 *clint =
20011438:	fcc42783          	lw	a5,-52(s0)
2001143c:	fef42223          	sw	a5,-28(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:73
        (struct __metal_driver_riscv_clint0 *)(controller);

    if (!clint->init_done) {
20011440:	fe442783          	lw	a5,-28(s0)
20011444:	43dc                	lw	a5,4(a5)
20011446:	efa9                	bnez	a5,200114a0 <__metal_driver_riscv_clint0_init+0x7e>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:76
        /* Register its interrupts with with parent controller, aka sw and
         * timerto its default isr */
        for (int i = 0; i < num_interrupts; i++) {
20011448:	fe042623          	sw	zero,-20(s0)
2001144c:	a081                	j	2001148c <__metal_driver_riscv_clint0_init+0x6a>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:78 (discriminator 3)
            struct metal_interrupt *intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
2001144e:	fec42583          	lw	a1,-20(s0)
20011452:	fcc42503          	lw	a0,-52(s0)
20011456:	3bed                	jal	20011250 <__metal_driver_sifive_clint0_interrupt_parents>
20011458:	fea42023          	sw	a0,-32(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:80 (discriminator 3)
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
2001145c:	fec42583          	lw	a1,-20(s0)
20011460:	fcc42503          	lw	a0,-52(s0)
20011464:	3525                	jal	2001128c <__metal_driver_sifive_clint0_interrupt_lines>
20011466:	fca42e23          	sw	a0,-36(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:81 (discriminator 3)
            intc->vtable->interrupt_register(intc, line, NULL, controller);
2001146a:	fe042783          	lw	a5,-32(s0)
2001146e:	439c                	lw	a5,0(a5)
20011470:	4fdc                	lw	a5,28(a5)
20011472:	fcc42683          	lw	a3,-52(s0)
20011476:	4601                	li	a2,0
20011478:	fdc42583          	lw	a1,-36(s0)
2001147c:	fe042503          	lw	a0,-32(s0)
20011480:	9782                	jalr	a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 3)
        for (int i = 0; i < num_interrupts; i++) {
20011482:	fec42783          	lw	a5,-20(s0)
20011486:	0785                	addi	a5,a5,1
20011488:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 1)
2001148c:	fec42703          	lw	a4,-20(s0)
20011490:	fe842783          	lw	a5,-24(s0)
20011494:	faf74de3          	blt	a4,a5,2001144e <__metal_driver_riscv_clint0_init+0x2c>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:83
        }
        clint->init_done = 1;
20011498:	fe442783          	lw	a5,-28(s0)
2001149c:	4705                	li	a4,1
2001149e:	c3d8                	sw	a4,4(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:85
    }
}
200114a0:	0001                	nop
200114a2:	50f2                	lw	ra,60(sp)
200114a4:	5462                	lw	s0,56(sp)
200114a6:	6121                	addi	sp,sp,64
200114a8:	8082                	ret

200114aa <__metal_driver_riscv_clint0_register>:
__metal_driver_riscv_clint0_register():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:89

int __metal_driver_riscv_clint0_register(struct metal_interrupt *controller,
                                         int id, metal_interrupt_handler_t isr,
                                         void *priv) {
200114aa:	7139                	addi	sp,sp,-64
200114ac:	de06                	sw	ra,60(sp)
200114ae:	dc22                	sw	s0,56(sp)
200114b0:	0080                	addi	s0,sp,64
200114b2:	fca42623          	sw	a0,-52(s0)
200114b6:	fcb42423          	sw	a1,-56(s0)
200114ba:	fcc42223          	sw	a2,-60(s0)
200114be:	fcd42023          	sw	a3,-64(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:90
    int rc = -1;
200114c2:	57fd                	li	a5,-1
200114c4:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:91
    metal_vector_mode mode = __metal_controller_interrupt_vector_mode();
200114c8:	48c010ef          	jal	ra,20012954 <__metal_controller_interrupt_vector_mode>
200114cc:	fea42023          	sw	a0,-32(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:92
    struct metal_interrupt *intc = NULL;
200114d0:	fe042423          	sw	zero,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:93
    struct metal_interrupt *cpu_intc = _get_cpu_intc();
200114d4:	3f21                	jal	200113ec <_get_cpu_intc>
200114d6:	fca42e23          	sw	a0,-36(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:95
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
200114da:	fcc42503          	lw	a0,-52(s0)
200114de:	33a9                	jal	20011228 <__metal_driver_sifive_clint0_num_interrupts>
200114e0:	fca42c23          	sw	a0,-40(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:97

    if ((mode != METAL_VECTOR_MODE) && (mode != METAL_DIRECT_MODE)) {
200114e4:	fe042703          	lw	a4,-32(s0)
200114e8:	4785                	li	a5,1
200114ea:	00f70863          	beq	a4,a5,200114fa <__metal_driver_riscv_clint0_register+0x50>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:97 (discriminator 1)
200114ee:	fe042783          	lw	a5,-32(s0)
200114f2:	c781                	beqz	a5,200114fa <__metal_driver_riscv_clint0_register+0x50>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:98
        return rc;
200114f4:	fec42783          	lw	a5,-20(s0)
200114f8:	a049                	j	2001157a <__metal_driver_riscv_clint0_register+0xd0>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:101
    }

    for (int i = 0; i < num_interrupts; i++) {
200114fa:	fe042223          	sw	zero,-28(s0)
200114fe:	a091                	j	20011542 <__metal_driver_riscv_clint0_register+0x98>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:102
        int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20011500:	fe442583          	lw	a1,-28(s0)
20011504:	fcc42503          	lw	a0,-52(s0)
20011508:	3351                	jal	2001128c <__metal_driver_sifive_clint0_interrupt_lines>
2001150a:	fca42a23          	sw	a0,-44(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:103
        intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
2001150e:	fe442583          	lw	a1,-28(s0)
20011512:	fcc42503          	lw	a0,-52(s0)
20011516:	3b2d                	jal	20011250 <__metal_driver_sifive_clint0_interrupt_parents>
20011518:	fea42423          	sw	a0,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:104
        if (cpu_intc == intc && id == line) {
2001151c:	fdc42703          	lw	a4,-36(s0)
20011520:	fe842783          	lw	a5,-24(s0)
20011524:	00f71863          	bne	a4,a5,20011534 <__metal_driver_riscv_clint0_register+0x8a>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:104 (discriminator 1)
20011528:	fc842703          	lw	a4,-56(s0)
2001152c:	fd442783          	lw	a5,-44(s0)
20011530:	02f70063          	beq	a4,a5,20011550 <__metal_driver_riscv_clint0_register+0xa6>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:107 (discriminator 2)
            break;
        }
        intc = NULL;
20011534:	fe042423          	sw	zero,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 2)
    for (int i = 0; i < num_interrupts; i++) {
20011538:	fe442783          	lw	a5,-28(s0)
2001153c:	0785                	addi	a5,a5,1
2001153e:	fef42223          	sw	a5,-28(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 1)
20011542:	fe442703          	lw	a4,-28(s0)
20011546:	fd842783          	lw	a5,-40(s0)
2001154a:	faf74be3          	blt	a4,a5,20011500 <__metal_driver_riscv_clint0_register+0x56>
2001154e:	a011                	j	20011552 <__metal_driver_riscv_clint0_register+0xa8>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:105
            break;
20011550:	0001                	nop
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:111
    }

    /* Register its interrupts with parent controller */
    if (intc) {
20011552:	fe842783          	lw	a5,-24(s0)
20011556:	c385                	beqz	a5,20011576 <__metal_driver_riscv_clint0_register+0xcc>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:112
        rc = intc->vtable->interrupt_register(intc, id, isr, priv);
20011558:	fe842783          	lw	a5,-24(s0)
2001155c:	439c                	lw	a5,0(a5)
2001155e:	4fdc                	lw	a5,28(a5)
20011560:	fc042683          	lw	a3,-64(s0)
20011564:	fc442603          	lw	a2,-60(s0)
20011568:	fc842583          	lw	a1,-56(s0)
2001156c:	fe842503          	lw	a0,-24(s0)
20011570:	9782                	jalr	a5
20011572:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:114
    }
    return rc;
20011576:	fec42783          	lw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:115
}
2001157a:	853e                	mv	a0,a5
2001157c:	50f2                	lw	ra,60(sp)
2001157e:	5462                	lw	s0,56(sp)
20011580:	6121                	addi	sp,sp,64
20011582:	8082                	ret

20011584 <__metal_driver_riscv_clint0_vector_register>:
__metal_driver_riscv_clint0_vector_register():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:119

int __metal_driver_riscv_clint0_vector_register(
    struct metal_interrupt *controller, int id,
    metal_interrupt_vector_handler_t isr, void *priv) {
20011584:	7179                	addi	sp,sp,-48
20011586:	d622                	sw	s0,44(sp)
20011588:	1800                	addi	s0,sp,48
2001158a:	fca42e23          	sw	a0,-36(s0)
2001158e:	fcb42c23          	sw	a1,-40(s0)
20011592:	fcc42a23          	sw	a2,-44(s0)
20011596:	fcd42823          	sw	a3,-48(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:121
    /* Not supported. User can override the 'weak' handler with their own */
    int rc = -1;
2001159a:	57fd                	li	a5,-1
2001159c:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:122
    return rc;
200115a0:	fec42783          	lw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:123
}
200115a4:	853e                	mv	a0,a5
200115a6:	5432                	lw	s0,44(sp)
200115a8:	6145                	addi	sp,sp,48
200115aa:	8082                	ret

200115ac <__metal_driver_riscv_clint0_get_vector_mode>:
__metal_driver_riscv_clint0_get_vector_mode():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:126

metal_vector_mode __metal_driver_riscv_clint0_get_vector_mode(
    struct metal_interrupt *controller) {
200115ac:	1101                	addi	sp,sp,-32
200115ae:	ce06                	sw	ra,28(sp)
200115b0:	cc22                	sw	s0,24(sp)
200115b2:	1000                	addi	s0,sp,32
200115b4:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:127
    return __metal_controller_interrupt_vector_mode();
200115b8:	39c010ef          	jal	ra,20012954 <__metal_controller_interrupt_vector_mode>
200115bc:	87aa                	mv	a5,a0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:128
}
200115be:	853e                	mv	a0,a5
200115c0:	40f2                	lw	ra,28(sp)
200115c2:	4462                	lw	s0,24(sp)
200115c4:	6105                	addi	sp,sp,32
200115c6:	8082                	ret

200115c8 <__metal_driver_riscv_clint0_set_vector_mode>:
__metal_driver_riscv_clint0_set_vector_mode():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:131

int __metal_driver_riscv_clint0_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
200115c8:	7179                	addi	sp,sp,-48
200115ca:	d606                	sw	ra,44(sp)
200115cc:	d422                	sw	s0,40(sp)
200115ce:	1800                	addi	s0,sp,48
200115d0:	fca42e23          	sw	a0,-36(s0)
200115d4:	fcb42c23          	sw	a1,-40(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:132
    int rc = -1;
200115d8:	57fd                	li	a5,-1
200115da:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:133
    struct metal_interrupt *intc = _get_cpu_intc();
200115de:	3539                	jal	200113ec <_get_cpu_intc>
200115e0:	fea42423          	sw	a0,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:135

    if (intc) {
200115e4:	fe842783          	lw	a5,-24(s0)
200115e8:	c395                	beqz	a5,2001160c <__metal_driver_riscv_clint0_set_vector_mode+0x44>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:138
        /* Valid vector modes are VECTOR and DIRECT, anything else is invalid
         * (-1) */
        switch (mode) {
200115ea:	fd842703          	lw	a4,-40(s0)
200115ee:	4785                	li	a5,1
200115f0:	02e7e063          	bltu	a5,a4,20011610 <__metal_driver_riscv_clint0_set_vector_mode+0x48>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:141
        case METAL_VECTOR_MODE:
        case METAL_DIRECT_MODE:
            rc = intc->vtable->interrupt_set_vector_mode(intc, mode);
200115f4:	fe842783          	lw	a5,-24(s0)
200115f8:	439c                	lw	a5,0(a5)
200115fa:	43dc                	lw	a5,4(a5)
200115fc:	fd842583          	lw	a1,-40(s0)
20011600:	fe842503          	lw	a0,-24(s0)
20011604:	9782                	jalr	a5
20011606:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:142
            break;
2001160a:	a021                	j	20011612 <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:146
        default:
            break;
        }
    }
2001160c:	0001                	nop
2001160e:	a011                	j	20011612 <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:144
            break;
20011610:	0001                	nop
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:147
    return rc;
20011612:	fec42783          	lw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:148
}
20011616:	853e                	mv	a0,a5
20011618:	50b2                	lw	ra,44(sp)
2001161a:	5422                	lw	s0,40(sp)
2001161c:	6145                	addi	sp,sp,48
2001161e:	8082                	ret

20011620 <__metal_driver_riscv_clint0_enable>:
__metal_driver_riscv_clint0_enable():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:151

int __metal_driver_riscv_clint0_enable(struct metal_interrupt *controller,
                                       int id) {
20011620:	7139                	addi	sp,sp,-64
20011622:	de06                	sw	ra,60(sp)
20011624:	dc22                	sw	s0,56(sp)
20011626:	0080                	addi	s0,sp,64
20011628:	fca42623          	sw	a0,-52(s0)
2001162c:	fcb42423          	sw	a1,-56(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:152
    int rc = -1;
20011630:	57fd                	li	a5,-1
20011632:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:154

    if (id) {
20011636:	fc842783          	lw	a5,-56(s0)
2001163a:	c7c9                	beqz	a5,200116c4 <__metal_driver_riscv_clint0_enable+0xa4>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:155
        struct metal_interrupt *intc = NULL;
2001163c:	fe042423          	sw	zero,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:156
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
20011640:	3375                	jal	200113ec <_get_cpu_intc>
20011642:	fea42023          	sw	a0,-32(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:158
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
20011646:	fcc42503          	lw	a0,-52(s0)
2001164a:	3ef9                	jal	20011228 <__metal_driver_sifive_clint0_num_interrupts>
2001164c:	fca42e23          	sw	a0,-36(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:160

        for (int i = 0; i < num_interrupts; i++) {
20011650:	fe042223          	sw	zero,-28(s0)
20011654:	a091                	j	20011698 <__metal_driver_riscv_clint0_enable+0x78>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:162
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20011656:	fe442583          	lw	a1,-28(s0)
2001165a:	fcc42503          	lw	a0,-52(s0)
2001165e:	313d                	jal	2001128c <__metal_driver_sifive_clint0_interrupt_lines>
20011660:	fca42c23          	sw	a0,-40(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:164
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20011664:	fe442583          	lw	a1,-28(s0)
20011668:	fcc42503          	lw	a0,-52(s0)
2001166c:	36d5                	jal	20011250 <__metal_driver_sifive_clint0_interrupt_parents>
2001166e:	fea42423          	sw	a0,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:165
            if (cpu_intc == intc && id == line) {
20011672:	fe042703          	lw	a4,-32(s0)
20011676:	fe842783          	lw	a5,-24(s0)
2001167a:	00f71863          	bne	a4,a5,2001168a <__metal_driver_riscv_clint0_enable+0x6a>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:165 (discriminator 1)
2001167e:	fc842703          	lw	a4,-56(s0)
20011682:	fd842783          	lw	a5,-40(s0)
20011686:	02f70063          	beq	a4,a5,200116a6 <__metal_driver_riscv_clint0_enable+0x86>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:168 (discriminator 2)
                break;
            }
            intc = NULL;
2001168a:	fe042423          	sw	zero,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
2001168e:	fe442783          	lw	a5,-28(s0)
20011692:	0785                	addi	a5,a5,1
20011694:	fef42223          	sw	a5,-28(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 1)
20011698:	fe442703          	lw	a4,-28(s0)
2001169c:	fdc42783          	lw	a5,-36(s0)
200116a0:	faf74be3          	blt	a4,a5,20011656 <__metal_driver_riscv_clint0_enable+0x36>
200116a4:	a011                	j	200116a8 <__metal_driver_riscv_clint0_enable+0x88>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:166
                break;
200116a6:	0001                	nop
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:172
        }

        /* Enable its interrupts with parent controller */
        if (intc) {
200116a8:	fe842783          	lw	a5,-24(s0)
200116ac:	cf81                	beqz	a5,200116c4 <__metal_driver_riscv_clint0_enable+0xa4>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:173
            rc = intc->vtable->interrupt_enable(intc, id);
200116ae:	fe842783          	lw	a5,-24(s0)
200116b2:	439c                	lw	a5,0(a5)
200116b4:	53dc                	lw	a5,36(a5)
200116b6:	fc842583          	lw	a1,-56(s0)
200116ba:	fe842503          	lw	a0,-24(s0)
200116be:	9782                	jalr	a5
200116c0:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:177
        }
    }

    return rc;
200116c4:	fec42783          	lw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:178
}
200116c8:	853e                	mv	a0,a5
200116ca:	50f2                	lw	ra,60(sp)
200116cc:	5462                	lw	s0,56(sp)
200116ce:	6121                	addi	sp,sp,64
200116d0:	8082                	ret

200116d2 <__metal_driver_riscv_clint0_disable>:
__metal_driver_riscv_clint0_disable():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:181

int __metal_driver_riscv_clint0_disable(struct metal_interrupt *controller,
                                        int id) {
200116d2:	7139                	addi	sp,sp,-64
200116d4:	de06                	sw	ra,60(sp)
200116d6:	dc22                	sw	s0,56(sp)
200116d8:	0080                	addi	s0,sp,64
200116da:	fca42623          	sw	a0,-52(s0)
200116de:	fcb42423          	sw	a1,-56(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:182
    int rc = -1;
200116e2:	57fd                	li	a5,-1
200116e4:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:184

    if (id) {
200116e8:	fc842783          	lw	a5,-56(s0)
200116ec:	c7c9                	beqz	a5,20011776 <__metal_driver_riscv_clint0_disable+0xa4>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:185
        struct metal_interrupt *intc = NULL;
200116ee:	fe042423          	sw	zero,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:186
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
200116f2:	39ed                	jal	200113ec <_get_cpu_intc>
200116f4:	fea42023          	sw	a0,-32(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:188
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
200116f8:	fcc42503          	lw	a0,-52(s0)
200116fc:	3635                	jal	20011228 <__metal_driver_sifive_clint0_num_interrupts>
200116fe:	fca42e23          	sw	a0,-36(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:190

        for (int i = 0; i < num_interrupts; i++) {
20011702:	fe042223          	sw	zero,-28(s0)
20011706:	a091                	j	2001174a <__metal_driver_riscv_clint0_disable+0x78>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:192
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20011708:	fe442583          	lw	a1,-28(s0)
2001170c:	fcc42503          	lw	a0,-52(s0)
20011710:	3eb5                	jal	2001128c <__metal_driver_sifive_clint0_interrupt_lines>
20011712:	fca42c23          	sw	a0,-40(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:194
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20011716:	fe442583          	lw	a1,-28(s0)
2001171a:	fcc42503          	lw	a0,-52(s0)
2001171e:	3e0d                	jal	20011250 <__metal_driver_sifive_clint0_interrupt_parents>
20011720:	fea42423          	sw	a0,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:195
            if (cpu_intc == intc && id == line) {
20011724:	fe042703          	lw	a4,-32(s0)
20011728:	fe842783          	lw	a5,-24(s0)
2001172c:	00f71863          	bne	a4,a5,2001173c <__metal_driver_riscv_clint0_disable+0x6a>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:195 (discriminator 1)
20011730:	fc842703          	lw	a4,-56(s0)
20011734:	fd842783          	lw	a5,-40(s0)
20011738:	02f70063          	beq	a4,a5,20011758 <__metal_driver_riscv_clint0_disable+0x86>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:198 (discriminator 2)
                break;
            }
            intc = NULL;
2001173c:	fe042423          	sw	zero,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
20011740:	fe442783          	lw	a5,-28(s0)
20011744:	0785                	addi	a5,a5,1
20011746:	fef42223          	sw	a5,-28(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 1)
2001174a:	fe442703          	lw	a4,-28(s0)
2001174e:	fdc42783          	lw	a5,-36(s0)
20011752:	faf74be3          	blt	a4,a5,20011708 <__metal_driver_riscv_clint0_disable+0x36>
20011756:	a011                	j	2001175a <__metal_driver_riscv_clint0_disable+0x88>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:196
                break;
20011758:	0001                	nop
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:202
        }

        /* Disable its interrupts with parent controller */
        if (intc) {
2001175a:	fe842783          	lw	a5,-24(s0)
2001175e:	cf81                	beqz	a5,20011776 <__metal_driver_riscv_clint0_disable+0xa4>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:203
            rc = intc->vtable->interrupt_disable(intc, id);
20011760:	fe842783          	lw	a5,-24(s0)
20011764:	439c                	lw	a5,0(a5)
20011766:	579c                	lw	a5,40(a5)
20011768:	fc842583          	lw	a1,-56(s0)
2001176c:	fe842503          	lw	a0,-24(s0)
20011770:	9782                	jalr	a5
20011772:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:207
        }
    }

    return rc;
20011776:	fec42783          	lw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:208
}
2001177a:	853e                	mv	a0,a5
2001177c:	50f2                	lw	ra,60(sp)
2001177e:	5462                	lw	s0,56(sp)
20011780:	6121                	addi	sp,sp,64
20011782:	8082                	ret

20011784 <__metal_driver_riscv_clint0_command_request>:
__metal_driver_riscv_clint0_command_request():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:211

int __metal_driver_riscv_clint0_command_request(
    struct metal_interrupt *controller, int command, void *data) {
20011784:	7179                	addi	sp,sp,-48
20011786:	d606                	sw	ra,44(sp)
20011788:	d422                	sw	s0,40(sp)
2001178a:	1800                	addi	s0,sp,48
2001178c:	fca42e23          	sw	a0,-36(s0)
20011790:	fcb42c23          	sw	a1,-40(s0)
20011794:	fcc42a23          	sw	a2,-44(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:213
    int hartid;
    int rc = -1;
20011798:	57fd                	li	a5,-1
2001179a:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:214
    struct __metal_driver_riscv_clint0 *clint =
2001179e:	fdc42783          	lw	a5,-36(s0)
200117a2:	fef42423          	sw	a5,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:217
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(controller);
200117a6:	fdc42503          	lw	a0,-36(s0)
200117aa:	3c91                	jal	200111fe <__metal_driver_sifive_clint0_control_base>
200117ac:	fea42223          	sw	a0,-28(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:219

    switch (command) {
200117b0:	fd842703          	lw	a4,-40(s0)
200117b4:	4789                	li	a5,2
200117b6:	04f70863          	beq	a4,a5,20011806 <__metal_driver_riscv_clint0_command_request+0x82>
200117ba:	fd842703          	lw	a4,-40(s0)
200117be:	4789                	li	a5,2
200117c0:	00e7c863          	blt	a5,a4,200117d0 <__metal_driver_riscv_clint0_command_request+0x4c>
200117c4:	fd842703          	lw	a4,-40(s0)
200117c8:	4785                	li	a5,1
200117ca:	00f70e63          	beq	a4,a5,200117e6 <__metal_driver_riscv_clint0_command_request+0x62>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:263
            rc = __METAL_ACCESS_ONCE(
                (__metal_io_u32 *)(control_base + (hartid * 4)));
        }
        break;
    default:
        break;
200117ce:	a8e9                	j	200118a8 <__metal_driver_riscv_clint0_command_request+0x124>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:219
    switch (command) {
200117d0:	fd842703          	lw	a4,-40(s0)
200117d4:	478d                	li	a5,3
200117d6:	04f70c63          	beq	a4,a5,2001182e <__metal_driver_riscv_clint0_command_request+0xaa>
200117da:	fd842703          	lw	a4,-40(s0)
200117de:	4791                	li	a5,4
200117e0:	08f70863          	beq	a4,a5,20011870 <__metal_driver_riscv_clint0_command_request+0xec>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:263
        break;
200117e4:	a0d1                	j	200118a8 <__metal_driver_riscv_clint0_command_request+0x124>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:221
        if (data) {
200117e6:	fd442783          	lw	a5,-44(s0)
200117ea:	cbc5                	beqz	a5,2001189a <__metal_driver_riscv_clint0_command_request+0x116>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:222
            *(unsigned long long *)data = __metal_clint0_mtime_get(clint);
200117ec:	fe842503          	lw	a0,-24(s0)
200117f0:	34f1                	jal	200112bc <__metal_clint0_mtime_get>
200117f2:	87aa                	mv	a5,a0
200117f4:	882e                	mv	a6,a1
200117f6:	fd442703          	lw	a4,-44(s0)
200117fa:	c31c                	sw	a5,0(a4)
200117fc:	01072223          	sw	a6,4(a4)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:223
            rc = 0;
20011800:	fe042623          	sw	zero,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
20011804:	a859                	j	2001189a <__metal_driver_riscv_clint0_command_request+0x116>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:227
        if (data) {
20011806:	fd442783          	lw	a5,-44(s0)
2001180a:	cbd1                	beqz	a5,2001189e <__metal_driver_riscv_clint0_command_request+0x11a>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:228
            hartid = *(int *)data;
2001180c:	fd442783          	lw	a5,-44(s0)
20011810:	439c                	lw	a5,0(a5)
20011812:	fef42023          	sw	a5,-32(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:229
            __METAL_ACCESS_ONCE((
20011816:	fe042783          	lw	a5,-32(s0)
2001181a:	078a                	slli	a5,a5,0x2
2001181c:	873e                	mv	a4,a5
2001181e:	fe442783          	lw	a5,-28(s0)
20011822:	97ba                	add	a5,a5,a4
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:230
                __metal_io_u32 *)(control_base + (hartid * 4))) = METAL_DISABLE;
20011824:	0007a023          	sw	zero,0(a5) # 4000 <__heap_size+0x3800>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:231
            rc = 0;
20011828:	fe042623          	sw	zero,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
2001182c:	a88d                	j	2001189e <__metal_driver_riscv_clint0_command_request+0x11a>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:235
        if (data) {
2001182e:	fd442783          	lw	a5,-44(s0)
20011832:	cba5                	beqz	a5,200118a2 <__metal_driver_riscv_clint0_command_request+0x11e>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:236
            hartid = *(int *)data;
20011834:	fd442783          	lw	a5,-44(s0)
20011838:	439c                	lw	a5,0(a5)
2001183a:	fef42023          	sw	a5,-32(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:237
            __METAL_ACCESS_ONCE(
2001183e:	fe042783          	lw	a5,-32(s0)
20011842:	078a                	slli	a5,a5,0x2
20011844:	873e                	mv	a4,a5
20011846:	fe442783          	lw	a5,-28(s0)
2001184a:	97ba                	add	a5,a5,a4
2001184c:	873e                	mv	a4,a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:238
                (__metal_io_u32 *)(control_base + (hartid * 4))) = METAL_ENABLE;
2001184e:	4785                	li	a5,1
20011850:	c31c                	sw	a5,0(a4)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:248
            __METAL_IO_FENCE(o, i);
20011852:	0480000f          	fence	o,i
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:249
            rc = __METAL_ACCESS_ONCE(
20011856:	fe042783          	lw	a5,-32(s0)
2001185a:	078a                	slli	a5,a5,0x2
2001185c:	873e                	mv	a4,a5
2001185e:	fe442783          	lw	a5,-28(s0)
20011862:	97ba                	add	a5,a5,a4
20011864:	439c                	lw	a5,0(a5)
20011866:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:251
            rc = 0;
2001186a:	fe042623          	sw	zero,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
2001186e:	a815                	j	200118a2 <__metal_driver_riscv_clint0_command_request+0x11e>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:255
        rc = 0;
20011870:	fe042623          	sw	zero,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:256
        if (data) {
20011874:	fd442783          	lw	a5,-44(s0)
20011878:	c79d                	beqz	a5,200118a6 <__metal_driver_riscv_clint0_command_request+0x122>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:257
            hartid = *(int *)data;
2001187a:	fd442783          	lw	a5,-44(s0)
2001187e:	439c                	lw	a5,0(a5)
20011880:	fef42023          	sw	a5,-32(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:258
            rc = __METAL_ACCESS_ONCE(
20011884:	fe042783          	lw	a5,-32(s0)
20011888:	078a                	slli	a5,a5,0x2
2001188a:	873e                	mv	a4,a5
2001188c:	fe442783          	lw	a5,-28(s0)
20011890:	97ba                	add	a5,a5,a4
20011892:	439c                	lw	a5,0(a5)
20011894:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
20011898:	a039                	j	200118a6 <__metal_driver_riscv_clint0_command_request+0x122>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
2001189a:	0001                	nop
2001189c:	a031                	j	200118a8 <__metal_driver_riscv_clint0_command_request+0x124>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
2001189e:	0001                	nop
200118a0:	a021                	j	200118a8 <__metal_driver_riscv_clint0_command_request+0x124>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
200118a2:	0001                	nop
200118a4:	a011                	j	200118a8 <__metal_driver_riscv_clint0_command_request+0x124>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
200118a6:	0001                	nop
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:266
    }

    return rc;
200118a8:	fec42783          	lw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:267
}
200118ac:	853e                	mv	a0,a5
200118ae:	50b2                	lw	ra,44(sp)
200118b0:	5422                	lw	s0,40(sp)
200118b2:	6145                	addi	sp,sp,48
200118b4:	8082                	ret

200118b6 <__metal_driver_riscv_clint0_clear_interrupt>:
__metal_driver_riscv_clint0_clear_interrupt():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:270

int __metal_driver_riscv_clint0_clear_interrupt(
    struct metal_interrupt *controller, int id) {
200118b6:	7179                	addi	sp,sp,-48
200118b8:	d606                	sw	ra,44(sp)
200118ba:	d422                	sw	s0,40(sp)
200118bc:	1800                	addi	s0,sp,48
200118be:	fca42e23          	sw	a0,-36(s0)
200118c2:	fcb42c23          	sw	a1,-40(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:271
    int hartid = metal_cpu_get_current_hartid();
200118c6:	4a2020ef          	jal	ra,20013d68 <metal_cpu_get_current_hartid>
200118ca:	87aa                	mv	a5,a0
200118cc:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:272
    return __metal_driver_riscv_clint0_command_request(
200118d0:	fec40793          	addi	a5,s0,-20
200118d4:	863e                	mv	a2,a5
200118d6:	4589                	li	a1,2
200118d8:	fdc42503          	lw	a0,-36(s0)
200118dc:	3565                	jal	20011784 <__metal_driver_riscv_clint0_command_request>
200118de:	87aa                	mv	a5,a0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:274
        controller, METAL_SOFTWARE_IPI_CLEAR, &hartid);
}
200118e0:	853e                	mv	a0,a5
200118e2:	50b2                	lw	ra,44(sp)
200118e4:	5422                	lw	s0,40(sp)
200118e6:	6145                	addi	sp,sp,48
200118e8:	8082                	ret

200118ea <__metal_driver_riscv_clint0_set_interrupt>:
__metal_driver_riscv_clint0_set_interrupt():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:277

int __metal_driver_riscv_clint0_set_interrupt(
    struct metal_interrupt *controller, int id) {
200118ea:	7179                	addi	sp,sp,-48
200118ec:	d606                	sw	ra,44(sp)
200118ee:	d422                	sw	s0,40(sp)
200118f0:	1800                	addi	s0,sp,48
200118f2:	fca42e23          	sw	a0,-36(s0)
200118f6:	fcb42c23          	sw	a1,-40(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:278
    int hartid = metal_cpu_get_current_hartid();
200118fa:	46e020ef          	jal	ra,20013d68 <metal_cpu_get_current_hartid>
200118fe:	87aa                	mv	a5,a0
20011900:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:279
    return __metal_driver_riscv_clint0_command_request(
20011904:	fec40793          	addi	a5,s0,-20
20011908:	863e                	mv	a2,a5
2001190a:	458d                	li	a1,3
2001190c:	fdc42503          	lw	a0,-36(s0)
20011910:	3d95                	jal	20011784 <__metal_driver_riscv_clint0_command_request>
20011912:	87aa                	mv	a5,a0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_clint0.c:281
        controller, METAL_SOFTWARE_IPI_SET, &hartid);
}
20011914:	853e                	mv	a0,a5
20011916:	50b2                	lw	ra,44(sp)
20011918:	5422                	lw	s0,40(sp)
2001191a:	6145                	addi	sp,sp,48
2001191c:	8082                	ret

2001191e <__metal_driver_cpu_hartid>:
__metal_driver_cpu_hartid():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:290



/* --------------------- cpu ------------ */
static __inline__ int __metal_driver_cpu_hartid(struct metal_cpu *cpu)
{
2001191e:	1101                	addi	sp,sp,-32
20011920:	ce22                	sw	s0,28(sp)
20011922:	1000                	addi	s0,sp,32
20011924:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:291
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20011928:	fec42703          	lw	a4,-20(s0)
2001192c:	81018793          	addi	a5,gp,-2032 # 80000498 <__metal_dt_cpu_0>
20011930:	00f71463          	bne	a4,a5,20011938 <__metal_driver_cpu_hartid+0x1a>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:292
		return 0;
20011934:	4781                	li	a5,0
20011936:	a011                	j	2001193a <__metal_driver_cpu_hartid+0x1c>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:295
	}
	else {
		return -1;
20011938:	57fd                	li	a5,-1
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:297
	}
}
2001193a:	853e                	mv	a0,a5
2001193c:	4472                	lw	s0,28(sp)
2001193e:	6105                	addi	sp,sp,32
20011940:	8082                	ret

20011942 <__metal_driver_cpu_timebase>:
__metal_driver_cpu_timebase():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:300

static __inline__ int __metal_driver_cpu_timebase(struct metal_cpu *cpu)
{
20011942:	1101                	addi	sp,sp,-32
20011944:	ce22                	sw	s0,28(sp)
20011946:	1000                	addi	s0,sp,32
20011948:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:301
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
2001194c:	fec42703          	lw	a4,-20(s0)
20011950:	81018793          	addi	a5,gp,-2032 # 80000498 <__metal_dt_cpu_0>
20011954:	00f71763          	bne	a4,a5,20011962 <__metal_driver_cpu_timebase+0x20>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:302
		return 16000000;
20011958:	00f427b7          	lui	a5,0xf42
2001195c:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
20011960:	a011                	j	20011964 <__metal_driver_cpu_timebase+0x22>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:305
	}
	else {
		return 0;
20011962:	4781                	li	a5,0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:307
	}
}
20011964:	853e                	mv	a0,a5
20011966:	4472                	lw	s0,28(sp)
20011968:	6105                	addi	sp,sp,32
2001196a:	8082                	ret

2001196c <__metal_driver_cpu_interrupt_controller>:
__metal_driver_cpu_interrupt_controller():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:310

static __inline__ struct metal_interrupt * __metal_driver_cpu_interrupt_controller(struct metal_cpu *cpu)
{
2001196c:	1101                	addi	sp,sp,-32
2001196e:	ce22                	sw	s0,28(sp)
20011970:	1000                	addi	s0,sp,32
20011972:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:311
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20011976:	fec42703          	lw	a4,-20(s0)
2001197a:	81018793          	addi	a5,gp,-2032 # 80000498 <__metal_dt_cpu_0>
2001197e:	00f71763          	bne	a4,a5,2001198c <__metal_driver_cpu_interrupt_controller+0x20>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:312
		return &__metal_dt_cpu_0_interrupt_controller.controller;
20011982:	800007b7          	lui	a5,0x80000
20011986:	09078793          	addi	a5,a5,144 # 80000090 <metal_dtim_0_memory_end+0xffffc090>
2001198a:	a011                	j	2001198e <__metal_driver_cpu_interrupt_controller+0x22>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:315
	}
	else {
		return NULL;
2001198c:	4781                	li	a5,0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:317
	}
}
2001198e:	853e                	mv	a0,a5
20011990:	4472                	lw	s0,28(sp)
20011992:	6105                	addi	sp,sp,32
20011994:	8082                	ret

20011996 <__metal_driver_cpu_buserror>:
__metal_driver_cpu_buserror():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:330
		return 0;
	}
}

static __inline__ struct metal_buserror * __metal_driver_cpu_buserror(struct metal_cpu *cpu)
{
20011996:	1101                	addi	sp,sp,-32
20011998:	ce22                	sw	s0,28(sp)
2001199a:	1000                	addi	s0,sp,32
2001199c:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:331
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
200119a0:	fec42703          	lw	a4,-20(s0)
200119a4:	81018793          	addi	a5,gp,-2032 # 80000498 <__metal_dt_cpu_0>
200119a8:	00f71463          	bne	a4,a5,200119b0 <__metal_driver_cpu_buserror+0x1a>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:332
		return NULL;
200119ac:	4781                	li	a5,0
200119ae:	a011                	j	200119b2 <__metal_driver_cpu_buserror+0x1c>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:335
	}
	else {
		return NULL;
200119b0:	4781                	li	a5,0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:337
	}
}
200119b2:	853e                	mv	a0,a5
200119b4:	4472                	lw	s0,28(sp)
200119b6:	6105                	addi	sp,sp,32
200119b8:	8082                	ret

200119ba <__metal_driver_cpu_get>:
__metal_driver_cpu_get():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:25
extern void __metal_vector_table();
unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu);
int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time);

struct metal_cpu *__metal_driver_cpu_get(int hartid) {
200119ba:	1101                	addi	sp,sp,-32
200119bc:	ce22                	sw	s0,28(sp)
200119be:	1000                	addi	s0,sp,32
200119c0:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:26
    if (hartid < __METAL_DT_MAX_HARTS) {
200119c4:	fec42783          	lw	a5,-20(s0)
200119c8:	00f04c63          	bgtz	a5,200119e0 <__metal_driver_cpu_get+0x26>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:27
        return &(__metal_cpu_table[hartid]->cpu);
200119cc:	800007b7          	lui	a5,0x80000
200119d0:	fec42703          	lw	a4,-20(s0)
200119d4:	070a                	slli	a4,a4,0x2
200119d6:	48c78793          	addi	a5,a5,1164 # 8000048c <metal_dtim_0_memory_end+0xffffc48c>
200119da:	97ba                	add	a5,a5,a4
200119dc:	439c                	lw	a5,0(a5)
200119de:	a011                	j	200119e2 <__metal_driver_cpu_get+0x28>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:29
    }
    return (struct metal_cpu *)NULL;
200119e0:	4781                	li	a5,0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:30
}
200119e2:	853e                	mv	a0,a5
200119e4:	4472                	lw	s0,28(sp)
200119e6:	6105                	addi	sp,sp,32
200119e8:	8082                	ret

200119ea <__metal_myhart_id>:
__metal_myhart_id():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:32

uintptr_t __metal_myhart_id(void) {
200119ea:	1101                	addi	sp,sp,-32
200119ec:	ce22                	sw	s0,28(sp)
200119ee:	1000                	addi	s0,sp,32
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:34
    uintptr_t myhart;
    __asm__ volatile("csrr %0, mhartid" : "=r"(myhart));
200119f0:	f14027f3          	csrr	a5,mhartid
200119f4:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:35
    return myhart;
200119f8:	fec42783          	lw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:36
}
200119fc:	853e                	mv	a0,a5
200119fe:	4472                	lw	s0,28(sp)
20011a00:	6105                	addi	sp,sp,32
20011a02:	8082                	ret

20011a04 <__metal_interrupt_global_enable>:
__metal_interrupt_global_enable():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:45
    for (ptr = base; ptr < (base + size); ptr++) {
        *ptr = 0;
    }
}

void __metal_interrupt_global_enable(void) {
20011a04:	1101                	addi	sp,sp,-32
20011a06:	ce22                	sw	s0,28(sp)
20011a08:	1000                	addi	s0,sp,32
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:47
    uintptr_t m;
    __asm__ volatile("csrrs %0, mstatus, %1"
20011a0a:	47a1                	li	a5,8
20011a0c:	3007a7f3          	csrrs	a5,mstatus,a5
20011a10:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:50
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
20011a14:	0001                	nop
20011a16:	4472                	lw	s0,28(sp)
20011a18:	6105                	addi	sp,sp,32
20011a1a:	8082                	ret

20011a1c <__metal_interrupt_global_disable>:
__metal_interrupt_global_disable():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:52

void __metal_interrupt_global_disable(void) {
20011a1c:	1101                	addi	sp,sp,-32
20011a1e:	ce22                	sw	s0,28(sp)
20011a20:	1000                	addi	s0,sp,32
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:54
    uintptr_t m;
    __asm__ volatile("csrrc %0, mstatus, %1"
20011a22:	47a1                	li	a5,8
20011a24:	3007b7f3          	csrrc	a5,mstatus,a5
20011a28:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:57
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
20011a2c:	0001                	nop
20011a2e:	4472                	lw	s0,28(sp)
20011a30:	6105                	addi	sp,sp,32
20011a32:	8082                	ret

20011a34 <__metal_interrupt_software_enable>:
__metal_interrupt_software_enable():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:59

void __metal_interrupt_software_enable(void) {
20011a34:	1101                	addi	sp,sp,-32
20011a36:	ce22                	sw	s0,28(sp)
20011a38:	1000                	addi	s0,sp,32
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:61
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20011a3a:	47a1                	li	a5,8
20011a3c:	3047a7f3          	csrrs	a5,mie,a5
20011a40:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:64
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
20011a44:	0001                	nop
20011a46:	4472                	lw	s0,28(sp)
20011a48:	6105                	addi	sp,sp,32
20011a4a:	8082                	ret

20011a4c <__metal_interrupt_software_disable>:
__metal_interrupt_software_disable():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:66

void __metal_interrupt_software_disable(void) {
20011a4c:	1101                	addi	sp,sp,-32
20011a4e:	ce22                	sw	s0,28(sp)
20011a50:	1000                	addi	s0,sp,32
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:68
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
20011a52:	47a1                	li	a5,8
20011a54:	3047b7f3          	csrrc	a5,mie,a5
20011a58:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:71
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
20011a5c:	0001                	nop
20011a5e:	4472                	lw	s0,28(sp)
20011a60:	6105                	addi	sp,sp,32
20011a62:	8082                	ret

20011a64 <__metal_interrupt_timer_enable>:
__metal_interrupt_timer_enable():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:73

void __metal_interrupt_timer_enable(void) {
20011a64:	1101                	addi	sp,sp,-32
20011a66:	ce22                	sw	s0,28(sp)
20011a68:	1000                	addi	s0,sp,32
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:75
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20011a6a:	08000793          	li	a5,128
20011a6e:	3047a7f3          	csrrs	a5,mie,a5
20011a72:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:78
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
20011a76:	0001                	nop
20011a78:	4472                	lw	s0,28(sp)
20011a7a:	6105                	addi	sp,sp,32
20011a7c:	8082                	ret

20011a7e <__metal_interrupt_timer_disable>:
__metal_interrupt_timer_disable():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:80

void __metal_interrupt_timer_disable(void) {
20011a7e:	1101                	addi	sp,sp,-32
20011a80:	ce22                	sw	s0,28(sp)
20011a82:	1000                	addi	s0,sp,32
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:82
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
20011a84:	08000793          	li	a5,128
20011a88:	3047b7f3          	csrrc	a5,mie,a5
20011a8c:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:85
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
20011a90:	0001                	nop
20011a92:	4472                	lw	s0,28(sp)
20011a94:	6105                	addi	sp,sp,32
20011a96:	8082                	ret

20011a98 <__metal_interrupt_external_enable>:
__metal_interrupt_external_enable():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:87

void __metal_interrupt_external_enable(void) {
20011a98:	1101                	addi	sp,sp,-32
20011a9a:	ce22                	sw	s0,28(sp)
20011a9c:	1000                	addi	s0,sp,32
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:89
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20011a9e:	6785                	lui	a5,0x1
20011aa0:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20011aa4:	3047a7f3          	csrrs	a5,mie,a5
20011aa8:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:92
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
20011aac:	0001                	nop
20011aae:	4472                	lw	s0,28(sp)
20011ab0:	6105                	addi	sp,sp,32
20011ab2:	8082                	ret

20011ab4 <__metal_interrupt_external_disable>:
__metal_interrupt_external_disable():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:94

void __metal_interrupt_external_disable(void) {
20011ab4:	1101                	addi	sp,sp,-32
20011ab6:	ce22                	sw	s0,28(sp)
20011ab8:	1000                	addi	s0,sp,32
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:96
    unsigned long m;
    __asm__ volatile("csrrc %0, mie, %1"
20011aba:	6785                	lui	a5,0x1
20011abc:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20011ac0:	3047b7f3          	csrrc	a5,mie,a5
20011ac4:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:99
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
20011ac8:	0001                	nop
20011aca:	4472                	lw	s0,28(sp)
20011acc:	6105                	addi	sp,sp,32
20011ace:	8082                	ret

20011ad0 <__metal_interrupt_local_enable>:
__metal_interrupt_local_enable():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:101

void __metal_interrupt_local_enable(int id) {
20011ad0:	7179                	addi	sp,sp,-48
20011ad2:	d622                	sw	s0,44(sp)
20011ad4:	1800                	addi	s0,sp,48
20011ad6:	fca42e23          	sw	a0,-36(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:102
    uintptr_t b = 1 << id;
20011ada:	fdc42783          	lw	a5,-36(s0)
20011ade:	4705                	li	a4,1
20011ae0:	00f717b3          	sll	a5,a4,a5
20011ae4:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:104
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1" : "=r"(m) : "r"(b));
20011ae8:	fec42783          	lw	a5,-20(s0)
20011aec:	3047a7f3          	csrrs	a5,mie,a5
20011af0:	fef42423          	sw	a5,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:105
}
20011af4:	0001                	nop
20011af6:	5432                	lw	s0,44(sp)
20011af8:	6145                	addi	sp,sp,48
20011afa:	8082                	ret

20011afc <__metal_interrupt_local_disable>:
__metal_interrupt_local_disable():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:107

void __metal_interrupt_local_disable(int id) {
20011afc:	7179                	addi	sp,sp,-48
20011afe:	d622                	sw	s0,44(sp)
20011b00:	1800                	addi	s0,sp,48
20011b02:	fca42e23          	sw	a0,-36(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:108
    uintptr_t b = 1 << id;
20011b06:	fdc42783          	lw	a5,-36(s0)
20011b0a:	4705                	li	a4,1
20011b0c:	00f717b3          	sll	a5,a4,a5
20011b10:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:110
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1" : "=r"(m) : "r"(b));
20011b14:	fec42783          	lw	a5,-20(s0)
20011b18:	3047b7f3          	csrrc	a5,mie,a5
20011b1c:	fef42423          	sw	a5,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:111
}
20011b20:	0001                	nop
20011b22:	5432                	lw	s0,44(sp)
20011b24:	6145                	addi	sp,sp,48
20011b26:	8082                	ret

20011b28 <__metal_default_exception_handler>:
__metal_default_exception_handler():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:113

void __metal_default_exception_handler(struct metal_cpu *cpu, int ecode) {
20011b28:	1101                	addi	sp,sp,-32
20011b2a:	ce06                	sw	ra,28(sp)
20011b2c:	cc22                	sw	s0,24(sp)
20011b2e:	1000                	addi	s0,sp,32
20011b30:	fea42623          	sw	a0,-20(s0)
20011b34:	feb42423          	sw	a1,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:114
    metal_shutdown(100);
20011b38:	06400513          	li	a0,100
20011b3c:	246020ef          	jal	ra,20013d82 <metal_shutdown>

20011b40 <__metal_default_interrupt_handler>:
__metal_default_interrupt_handler():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:117
}

void __metal_default_interrupt_handler(int id, void *priv) {
20011b40:	1101                	addi	sp,sp,-32
20011b42:	ce06                	sw	ra,28(sp)
20011b44:	cc22                	sw	s0,24(sp)
20011b46:	1000                	addi	s0,sp,32
20011b48:	fea42623          	sw	a0,-20(s0)
20011b4c:	feb42423          	sw	a1,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:118
    metal_shutdown(200);
20011b50:	0c800513          	li	a0,200
20011b54:	22e020ef          	jal	ra,20013d82 <metal_shutdown>

20011b58 <metal_interrupt_vector_handler>:
metal_interrupt_vector_handler():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:122
}

/* The metal_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_interrupt_vector_handler(void) {
20011b58:	715d                	addi	sp,sp,-80
20011b5a:	c686                	sw	ra,76(sp)
20011b5c:	c496                	sw	t0,72(sp)
20011b5e:	c29a                	sw	t1,68(sp)
20011b60:	c09e                	sw	t2,64(sp)
20011b62:	de22                	sw	s0,60(sp)
20011b64:	dc2a                	sw	a0,56(sp)
20011b66:	da2e                	sw	a1,52(sp)
20011b68:	d832                	sw	a2,48(sp)
20011b6a:	d636                	sw	a3,44(sp)
20011b6c:	d43a                	sw	a4,40(sp)
20011b6e:	d23e                	sw	a5,36(sp)
20011b70:	d042                	sw	a6,32(sp)
20011b72:	ce46                	sw	a7,28(sp)
20011b74:	cc72                	sw	t3,24(sp)
20011b76:	ca76                	sw	t4,20(sp)
20011b78:	c87a                	sw	t5,16(sp)
20011b7a:	c67e                	sw	t6,12(sp)
20011b7c:	0880                	addi	s0,sp,80
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:123
    metal_shutdown(300);
20011b7e:	12c00513          	li	a0,300
20011b82:	200020ef          	jal	ra,20013d82 <metal_shutdown>

20011b86 <metal_software_interrupt_vector_handler>:
metal_software_interrupt_vector_handler():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:128
}

/* The metal_software_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_software_interrupt_vector_handler(void) {
20011b86:	711d                	addi	sp,sp,-96
20011b88:	ce86                	sw	ra,92(sp)
20011b8a:	cc96                	sw	t0,88(sp)
20011b8c:	ca9a                	sw	t1,84(sp)
20011b8e:	c89e                	sw	t2,80(sp)
20011b90:	c6a2                	sw	s0,76(sp)
20011b92:	c4aa                	sw	a0,72(sp)
20011b94:	c2ae                	sw	a1,68(sp)
20011b96:	c0b2                	sw	a2,64(sp)
20011b98:	de36                	sw	a3,60(sp)
20011b9a:	dc3a                	sw	a4,56(sp)
20011b9c:	da3e                	sw	a5,52(sp)
20011b9e:	d842                	sw	a6,48(sp)
20011ba0:	d646                	sw	a7,44(sp)
20011ba2:	d472                	sw	t3,40(sp)
20011ba4:	d276                	sw	t4,36(sp)
20011ba6:	d07a                	sw	t5,32(sp)
20011ba8:	ce7e                	sw	t6,28(sp)
20011baa:	1080                	addi	s0,sp,96
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:129
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_SW);
20011bac:	3d3d                	jal	200119ea <__metal_myhart_id>
20011bae:	872a                	mv	a4,a0
20011bb0:	800007b7          	lui	a5,0x80000
20011bb4:	070a                	slli	a4,a4,0x2
20011bb6:	48c78793          	addi	a5,a5,1164 # 8000048c <metal_dtim_0_memory_end+0xffffc48c>
20011bba:	97ba                	add	a5,a5,a4
20011bbc:	439c                	lw	a5,0(a5)
20011bbe:	faf42623          	sw	a5,-84(s0)
20011bc2:	fac42783          	lw	a5,-84(s0)
20011bc6:	c785                	beqz	a5,20011bee <metal_software_interrupt_vector_handler+0x68>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:129 (discriminator 1)
20011bc8:	fac42503          	lw	a0,-84(s0)
20011bcc:	3345                	jal	2001196c <__metal_driver_cpu_interrupt_controller>
20011bce:	faa42423          	sw	a0,-88(s0)
20011bd2:	fa842783          	lw	a5,-88(s0)
20011bd6:	0e07a783          	lw	a5,224(a5)
20011bda:	faf42223          	sw	a5,-92(s0)
20011bde:	fa842783          	lw	a5,-88(s0)
20011be2:	0d87a783          	lw	a5,216(a5)
20011be6:	fa442583          	lw	a1,-92(s0)
20011bea:	450d                	li	a0,3
20011bec:	9782                	jalr	a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:130
}
20011bee:	0001                	nop
20011bf0:	40f6                	lw	ra,92(sp)
20011bf2:	42e6                	lw	t0,88(sp)
20011bf4:	4356                	lw	t1,84(sp)
20011bf6:	43c6                	lw	t2,80(sp)
20011bf8:	4436                	lw	s0,76(sp)
20011bfa:	4526                	lw	a0,72(sp)
20011bfc:	4596                	lw	a1,68(sp)
20011bfe:	4606                	lw	a2,64(sp)
20011c00:	56f2                	lw	a3,60(sp)
20011c02:	5762                	lw	a4,56(sp)
20011c04:	57d2                	lw	a5,52(sp)
20011c06:	5842                	lw	a6,48(sp)
20011c08:	58b2                	lw	a7,44(sp)
20011c0a:	5e22                	lw	t3,40(sp)
20011c0c:	5e92                	lw	t4,36(sp)
20011c0e:	5f02                	lw	t5,32(sp)
20011c10:	4ff2                	lw	t6,28(sp)
20011c12:	6125                	addi	sp,sp,96
20011c14:	30200073          	mret

20011c18 <__metal_default_sw_handler>:
__metal_default_sw_handler():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:132

void __metal_default_sw_handler(int id, void *priv) {
20011c18:	7179                	addi	sp,sp,-48
20011c1a:	d606                	sw	ra,44(sp)
20011c1c:	d422                	sw	s0,40(sp)
20011c1e:	1800                	addi	s0,sp,48
20011c20:	fca42e23          	sw	a0,-36(s0)
20011c24:	fcb42c23          	sw	a1,-40(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:135
    uintptr_t mcause;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20011c28:	33c9                	jal	200119ea <__metal_myhart_id>
20011c2a:	872a                	mv	a4,a0
20011c2c:	800007b7          	lui	a5,0x80000
20011c30:	070a                	slli	a4,a4,0x2
20011c32:	48c78793          	addi	a5,a5,1164 # 8000048c <metal_dtim_0_memory_end+0xffffc48c>
20011c36:	97ba                	add	a5,a5,a4
20011c38:	439c                	lw	a5,0(a5)
20011c3a:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:137

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
20011c3e:	342027f3          	csrr	a5,mcause
20011c42:	fef42423          	sw	a5,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:138
    if (cpu) {
20011c46:	fec42783          	lw	a5,-20(s0)
20011c4a:	c795                	beqz	a5,20011c76 <__metal_default_sw_handler+0x5e>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:140
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20011c4c:	fec42503          	lw	a0,-20(s0)
20011c50:	3b31                	jal	2001196c <__metal_driver_cpu_interrupt_controller>
20011c52:	fea42223          	sw	a0,-28(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:141
        intc->metal_exception_table[mcause & METAL_MCAUSE_CAUSE](
20011c56:	fe842783          	lw	a5,-24(s0)
20011c5a:	3ff7f793          	andi	a5,a5,1023
20011c5e:	fe442703          	lw	a4,-28(s0)
20011c62:	0e878793          	addi	a5,a5,232
20011c66:	078a                	slli	a5,a5,0x2
20011c68:	97ba                	add	a5,a5,a4
20011c6a:	439c                	lw	a5,0(a5)
20011c6c:	fdc42583          	lw	a1,-36(s0)
20011c70:	fec42503          	lw	a0,-20(s0)
20011c74:	9782                	jalr	a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:144
            (struct metal_cpu *)cpu, id);
    }
}
20011c76:	0001                	nop
20011c78:	50b2                	lw	ra,44(sp)
20011c7a:	5422                	lw	s0,40(sp)
20011c7c:	6145                	addi	sp,sp,48
20011c7e:	8082                	ret

20011c80 <metal_timer_interrupt_vector_handler>:
metal_timer_interrupt_vector_handler():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:148

/* The metal_timer_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_timer_interrupt_vector_handler(void) {
20011c80:	711d                	addi	sp,sp,-96
20011c82:	ce86                	sw	ra,92(sp)
20011c84:	cc96                	sw	t0,88(sp)
20011c86:	ca9a                	sw	t1,84(sp)
20011c88:	c89e                	sw	t2,80(sp)
20011c8a:	c6a2                	sw	s0,76(sp)
20011c8c:	c4aa                	sw	a0,72(sp)
20011c8e:	c2ae                	sw	a1,68(sp)
20011c90:	c0b2                	sw	a2,64(sp)
20011c92:	de36                	sw	a3,60(sp)
20011c94:	dc3a                	sw	a4,56(sp)
20011c96:	da3e                	sw	a5,52(sp)
20011c98:	d842                	sw	a6,48(sp)
20011c9a:	d646                	sw	a7,44(sp)
20011c9c:	d472                	sw	t3,40(sp)
20011c9e:	d276                	sw	t4,36(sp)
20011ca0:	d07a                	sw	t5,32(sp)
20011ca2:	ce7e                	sw	t6,28(sp)
20011ca4:	1080                	addi	s0,sp,96
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:149
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_TMR);
20011ca6:	3391                	jal	200119ea <__metal_myhart_id>
20011ca8:	872a                	mv	a4,a0
20011caa:	800007b7          	lui	a5,0x80000
20011cae:	070a                	slli	a4,a4,0x2
20011cb0:	48c78793          	addi	a5,a5,1164 # 8000048c <metal_dtim_0_memory_end+0xffffc48c>
20011cb4:	97ba                	add	a5,a5,a4
20011cb6:	439c                	lw	a5,0(a5)
20011cb8:	faf42623          	sw	a5,-84(s0)
20011cbc:	fac42783          	lw	a5,-84(s0)
20011cc0:	c785                	beqz	a5,20011ce8 <metal_timer_interrupt_vector_handler+0x68>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:149 (discriminator 1)
20011cc2:	fac42503          	lw	a0,-84(s0)
20011cc6:	315d                	jal	2001196c <__metal_driver_cpu_interrupt_controller>
20011cc8:	faa42423          	sw	a0,-88(s0)
20011ccc:	fa842783          	lw	a5,-88(s0)
20011cd0:	1407a783          	lw	a5,320(a5)
20011cd4:	faf42223          	sw	a5,-92(s0)
20011cd8:	fa842783          	lw	a5,-88(s0)
20011cdc:	1387a783          	lw	a5,312(a5)
20011ce0:	fa442583          	lw	a1,-92(s0)
20011ce4:	451d                	li	a0,7
20011ce6:	9782                	jalr	a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:150
}
20011ce8:	0001                	nop
20011cea:	40f6                	lw	ra,92(sp)
20011cec:	42e6                	lw	t0,88(sp)
20011cee:	4356                	lw	t1,84(sp)
20011cf0:	43c6                	lw	t2,80(sp)
20011cf2:	4436                	lw	s0,76(sp)
20011cf4:	4526                	lw	a0,72(sp)
20011cf6:	4596                	lw	a1,68(sp)
20011cf8:	4606                	lw	a2,64(sp)
20011cfa:	56f2                	lw	a3,60(sp)
20011cfc:	5762                	lw	a4,56(sp)
20011cfe:	57d2                	lw	a5,52(sp)
20011d00:	5842                	lw	a6,48(sp)
20011d02:	58b2                	lw	a7,44(sp)
20011d04:	5e22                	lw	t3,40(sp)
20011d06:	5e92                	lw	t4,36(sp)
20011d08:	5f02                	lw	t5,32(sp)
20011d0a:	4ff2                	lw	t6,28(sp)
20011d0c:	6125                	addi	sp,sp,96
20011d0e:	30200073          	mret

20011d12 <__metal_default_beu_handler>:
__metal_default_beu_handler():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:152

void __metal_default_beu_handler(int id, void *priv) {}
20011d12:	1101                	addi	sp,sp,-32
20011d14:	ce22                	sw	s0,28(sp)
20011d16:	1000                	addi	s0,sp,32
20011d18:	fea42623          	sw	a0,-20(s0)
20011d1c:	feb42423          	sw	a1,-24(s0)
20011d20:	0001                	nop
20011d22:	4472                	lw	s0,28(sp)
20011d24:	6105                	addi	sp,sp,32
20011d26:	8082                	ret

20011d28 <__metal_default_timer_handler>:
__metal_default_timer_handler():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:154

void __metal_default_timer_handler(int id, void *priv) {
20011d28:	7179                	addi	sp,sp,-48
20011d2a:	d606                	sw	ra,44(sp)
20011d2c:	d422                	sw	s0,40(sp)
20011d2e:	1800                	addi	s0,sp,48
20011d30:	fca42e23          	sw	a0,-36(s0)
20011d34:	fcb42c23          	sw	a1,-40(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:155
    struct metal_cpu *cpu = __metal_driver_cpu_get(__metal_myhart_id());
20011d38:	394d                	jal	200119ea <__metal_myhart_id>
20011d3a:	87aa                	mv	a5,a0
20011d3c:	853e                	mv	a0,a5
20011d3e:	39b5                	jal	200119ba <__metal_driver_cpu_get>
20011d40:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:156
    unsigned long long time = __metal_driver_cpu_mtime_get(cpu);
20011d44:	fec42503          	lw	a0,-20(s0)
20011d48:	2ac010ef          	jal	ra,20012ff4 <__metal_driver_cpu_mtime_get>
20011d4c:	fea42023          	sw	a0,-32(s0)
20011d50:	feb42223          	sw	a1,-28(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:159

    /* Set a 10 cycle timer */
    __metal_driver_cpu_mtimecmp_set(cpu, time + 10);
20011d54:	fe042783          	lw	a5,-32(s0)
20011d58:	fe442803          	lw	a6,-28(s0)
20011d5c:	45a9                	li	a1,10
20011d5e:	4601                	li	a2,0
20011d60:	00b786b3          	add	a3,a5,a1
20011d64:	8536                	mv	a0,a3
20011d66:	00f53533          	sltu	a0,a0,a5
20011d6a:	00c80733          	add	a4,a6,a2
20011d6e:	00e507b3          	add	a5,a0,a4
20011d72:	873e                	mv	a4,a5
20011d74:	87b6                	mv	a5,a3
20011d76:	883a                	mv	a6,a4
20011d78:	85be                	mv	a1,a5
20011d7a:	8642                	mv	a2,a6
20011d7c:	fec42503          	lw	a0,-20(s0)
20011d80:	2da010ef          	jal	ra,2001305a <__metal_driver_cpu_mtimecmp_set>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:160
}
20011d84:	0001                	nop
20011d86:	50b2                	lw	ra,44(sp)
20011d88:	5422                	lw	s0,40(sp)
20011d8a:	6145                	addi	sp,sp,48
20011d8c:	8082                	ret
	...

20011e00 <__metal_exception_handler>:
__metal_exception_handler():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:169
metal_external_interrupt_vector_handler(void) {
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_EXT);
}

void __metal_exception_handler(void) __attribute__((interrupt, aligned(128)));
void __metal_exception_handler(void) {
20011e00:	7119                	addi	sp,sp,-128
20011e02:	de86                	sw	ra,124(sp)
20011e04:	dc96                	sw	t0,120(sp)
20011e06:	da9a                	sw	t1,116(sp)
20011e08:	d89e                	sw	t2,112(sp)
20011e0a:	d6a2                	sw	s0,108(sp)
20011e0c:	d4aa                	sw	a0,104(sp)
20011e0e:	d2ae                	sw	a1,100(sp)
20011e10:	d0b2                	sw	a2,96(sp)
20011e12:	ceb6                	sw	a3,92(sp)
20011e14:	ccba                	sw	a4,88(sp)
20011e16:	cabe                	sw	a5,84(sp)
20011e18:	c8c2                	sw	a6,80(sp)
20011e1a:	c6c6                	sw	a7,76(sp)
20011e1c:	c4f2                	sw	t3,72(sp)
20011e1e:	c2f6                	sw	t4,68(sp)
20011e20:	c0fa                	sw	t5,64(sp)
20011e22:	de7e                	sw	t6,60(sp)
20011e24:	0100                	addi	s0,sp,128
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:174
    int id;
    void *priv;
    uintptr_t mcause, mepc, mtval, mtvec;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20011e26:	36d1                	jal	200119ea <__metal_myhart_id>
20011e28:	872a                	mv	a4,a0
20011e2a:	800007b7          	lui	a5,0x80000
20011e2e:	070a                	slli	a4,a4,0x2
20011e30:	48c78793          	addi	a5,a5,1164 # 8000048c <metal_dtim_0_memory_end+0xffffc48c>
20011e34:	97ba                	add	a5,a5,a4
20011e36:	439c                	lw	a5,0(a5)
20011e38:	faf42623          	sw	a5,-84(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:176

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
20011e3c:	342027f3          	csrr	a5,mcause
20011e40:	faf42423          	sw	a5,-88(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:177
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
20011e44:	341027f3          	csrr	a5,mepc
20011e48:	faf42223          	sw	a5,-92(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:178
    __asm__ volatile("csrr %0, mtval" : "=r"(mtval));
20011e4c:	343027f3          	csrr	a5,mtval
20011e50:	faf42023          	sw	a5,-96(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:179
    __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
20011e54:	305027f3          	csrr	a5,mtvec
20011e58:	f8f42e23          	sw	a5,-100(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:181

    if (cpu) {
20011e5c:	fac42783          	lw	a5,-84(s0)
20011e60:	cbf5                	beqz	a5,20011f54 <__metal_exception_handler+0x154>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:183
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20011e62:	fac42503          	lw	a0,-84(s0)
20011e66:	3619                	jal	2001196c <__metal_driver_cpu_interrupt_controller>
20011e68:	f8a42c23          	sw	a0,-104(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:184
        id = mcause & METAL_MCAUSE_CAUSE;
20011e6c:	fa842783          	lw	a5,-88(s0)
20011e70:	3ff7f793          	andi	a5,a5,1023
20011e74:	f8f42a23          	sw	a5,-108(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:185
        if (mcause & METAL_MCAUSE_INTR) {
20011e78:	fa842783          	lw	a5,-88(s0)
20011e7c:	0a07de63          	bgez	a5,20011f38 <__metal_exception_handler+0x138>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:186
            if (id == METAL_INTERRUPT_ID_BEU) {
20011e80:	f9442703          	lw	a4,-108(s0)
20011e84:	08000793          	li	a5,128
20011e88:	02f71263          	bne	a4,a5,20011eac <__metal_exception_handler+0xac>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:187
                priv = intc->metal_int_beu.exint_data;
20011e8c:	f9842783          	lw	a5,-104(s0)
20011e90:	3987a783          	lw	a5,920(a5)
20011e94:	f8f42823          	sw	a5,-112(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:188
                intc->metal_int_beu.handler(id, priv);
20011e98:	f9842783          	lw	a5,-104(s0)
20011e9c:	3907a783          	lw	a5,912(a5)
20011ea0:	f9042583          	lw	a1,-112(s0)
20011ea4:	f9442503          	lw	a0,-108(s0)
20011ea8:	9782                	jalr	a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:189
                return;
20011eaa:	a06d                	j	20011f54 <__metal_exception_handler+0x154>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:191
            }
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20011eac:	f9442703          	lw	a4,-108(s0)
20011eb0:	47ad                	li	a5,11
20011eb2:	00e7d763          	bge	a5,a4,20011ec0 <__metal_exception_handler+0xc0>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:192 (discriminator 1)
                ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_DIRECT)) {
20011eb6:	f9c42783          	lw	a5,-100(s0)
20011eba:	03f7f793          	andi	a5,a5,63
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:191 (discriminator 1)
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20011ebe:	ef9d                	bnez	a5,20011efc <__metal_exception_handler+0xfc>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:193
                priv = intc->metal_int_table[id].exint_data;
20011ec0:	f9842683          	lw	a3,-104(s0)
20011ec4:	f9442703          	lw	a4,-108(s0)
20011ec8:	87ba                	mv	a5,a4
20011eca:	0786                	slli	a5,a5,0x1
20011ecc:	97ba                	add	a5,a5,a4
20011ece:	078e                	slli	a5,a5,0x3
20011ed0:	97b6                	add	a5,a5,a3
20011ed2:	0987a783          	lw	a5,152(a5)
20011ed6:	f8f42823          	sw	a5,-112(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:194
                intc->metal_int_table[id].handler(id, priv);
20011eda:	f9842683          	lw	a3,-104(s0)
20011ede:	f9442703          	lw	a4,-108(s0)
20011ee2:	87ba                	mv	a5,a4
20011ee4:	0786                	slli	a5,a5,0x1
20011ee6:	97ba                	add	a5,a5,a4
20011ee8:	078e                	slli	a5,a5,0x3
20011eea:	97b6                	add	a5,a5,a3
20011eec:	0907a783          	lw	a5,144(a5)
20011ef0:	f9042583          	lw	a1,-112(s0)
20011ef4:	f9442503          	lw	a0,-108(s0)
20011ef8:	9782                	jalr	a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:195
                return;
20011efa:	a8a9                	j	20011f54 <__metal_exception_handler+0x154>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:197
            }
            if ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_CLIC) {
20011efc:	f9c42783          	lw	a5,-100(s0)
20011f00:	03f7f713          	andi	a4,a5,63
20011f04:	4789                	li	a5,2
20011f06:	04f71763          	bne	a4,a5,20011f54 <__metal_exception_handler+0x154>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:201
                uintptr_t mtvt;
                metal_interrupt_handler_t mtvt_handler;

                __asm__ volatile("csrr %0, 0x307" : "=r"(mtvt));
20011f0a:	307027f3          	csrr	a5,mtvt
20011f0e:	f8f42623          	sw	a5,-116(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:202
                priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20011f12:	f9842783          	lw	a5,-104(s0)
20011f16:	0dc7a783          	lw	a5,220(a5)
20011f1a:	f8f42823          	sw	a5,-112(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:203
                mtvt_handler = (metal_interrupt_handler_t) * (uintptr_t *)mtvt;
20011f1e:	f8c42783          	lw	a5,-116(s0)
20011f22:	439c                	lw	a5,0(a5)
20011f24:	f8f42423          	sw	a5,-120(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:204
                mtvt_handler(id, priv);
20011f28:	f8842783          	lw	a5,-120(s0)
20011f2c:	f9042583          	lw	a1,-112(s0)
20011f30:	f9442503          	lw	a0,-108(s0)
20011f34:	9782                	jalr	a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:205
                return;
20011f36:	a839                	j	20011f54 <__metal_exception_handler+0x154>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:208
            }
        } else {
            intc->metal_exception_table[id]((struct metal_cpu *)cpu, id);
20011f38:	f9842703          	lw	a4,-104(s0)
20011f3c:	f9442783          	lw	a5,-108(s0)
20011f40:	0e878793          	addi	a5,a5,232
20011f44:	078a                	slli	a5,a5,0x2
20011f46:	97ba                	add	a5,a5,a4
20011f48:	439c                	lw	a5,0(a5)
20011f4a:	f9442583          	lw	a1,-108(s0)
20011f4e:	fac42503          	lw	a0,-84(s0)
20011f52:	9782                	jalr	a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:211
        }
    }
}
20011f54:	50f6                	lw	ra,124(sp)
20011f56:	52e6                	lw	t0,120(sp)
20011f58:	5356                	lw	t1,116(sp)
20011f5a:	53c6                	lw	t2,112(sp)
20011f5c:	5436                	lw	s0,108(sp)
20011f5e:	5526                	lw	a0,104(sp)
20011f60:	5596                	lw	a1,100(sp)
20011f62:	5606                	lw	a2,96(sp)
20011f64:	46f6                	lw	a3,92(sp)
20011f66:	4766                	lw	a4,88(sp)
20011f68:	47d6                	lw	a5,84(sp)
20011f6a:	4846                	lw	a6,80(sp)
20011f6c:	48b6                	lw	a7,76(sp)
20011f6e:	4e26                	lw	t3,72(sp)
20011f70:	4e96                	lw	t4,68(sp)
20011f72:	4f06                	lw	t5,64(sp)
20011f74:	5ff2                	lw	t6,60(sp)
20011f76:	6109                	addi	sp,sp,128
20011f78:	30200073          	mret
	...

20011ff6 <metal_lc0_interrupt_vector_handler>:
metal_lc0_interrupt_vector_handler():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:214

/* The metal_lc0_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc0_interrupt_vector_handler(void) {
20011ff6:	711d                	addi	sp,sp,-96
20011ff8:	ce86                	sw	ra,92(sp)
20011ffa:	cc96                	sw	t0,88(sp)
20011ffc:	ca9a                	sw	t1,84(sp)
20011ffe:	c89e                	sw	t2,80(sp)
20012000:	c6a2                	sw	s0,76(sp)
20012002:	c4aa                	sw	a0,72(sp)
20012004:	c2ae                	sw	a1,68(sp)
20012006:	c0b2                	sw	a2,64(sp)
20012008:	de36                	sw	a3,60(sp)
2001200a:	dc3a                	sw	a4,56(sp)
2001200c:	da3e                	sw	a5,52(sp)
2001200e:	d842                	sw	a6,48(sp)
20012010:	d646                	sw	a7,44(sp)
20012012:	d472                	sw	t3,40(sp)
20012014:	d276                	sw	t4,36(sp)
20012016:	d07a                	sw	t5,32(sp)
20012018:	ce7e                	sw	t6,28(sp)
2001201a:	1080                	addi	s0,sp,96
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:215
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC0);
2001201c:	32f9                	jal	200119ea <__metal_myhart_id>
2001201e:	872a                	mv	a4,a0
20012020:	800007b7          	lui	a5,0x80000
20012024:	070a                	slli	a4,a4,0x2
20012026:	48c78793          	addi	a5,a5,1164 # 8000048c <metal_dtim_0_memory_end+0xffffc48c>
2001202a:	97ba                	add	a5,a5,a4
2001202c:	439c                	lw	a5,0(a5)
2001202e:	faf42623          	sw	a5,-84(s0)
20012032:	fac42783          	lw	a5,-84(s0)
20012036:	c78d                	beqz	a5,20012060 <metal_lc0_interrupt_vector_handler+0x6a>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:215 (discriminator 1)
20012038:	fac42503          	lw	a0,-84(s0)
2001203c:	931ff0ef          	jal	ra,2001196c <__metal_driver_cpu_interrupt_controller>
20012040:	faa42423          	sw	a0,-88(s0)
20012044:	fa842783          	lw	a5,-88(s0)
20012048:	2187a783          	lw	a5,536(a5)
2001204c:	faf42223          	sw	a5,-92(s0)
20012050:	fa842783          	lw	a5,-88(s0)
20012054:	2107a783          	lw	a5,528(a5)
20012058:	fa442583          	lw	a1,-92(s0)
2001205c:	4541                	li	a0,16
2001205e:	9782                	jalr	a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:216
}
20012060:	0001                	nop
20012062:	40f6                	lw	ra,92(sp)
20012064:	42e6                	lw	t0,88(sp)
20012066:	4356                	lw	t1,84(sp)
20012068:	43c6                	lw	t2,80(sp)
2001206a:	4436                	lw	s0,76(sp)
2001206c:	4526                	lw	a0,72(sp)
2001206e:	4596                	lw	a1,68(sp)
20012070:	4606                	lw	a2,64(sp)
20012072:	56f2                	lw	a3,60(sp)
20012074:	5762                	lw	a4,56(sp)
20012076:	57d2                	lw	a5,52(sp)
20012078:	5842                	lw	a6,48(sp)
2001207a:	58b2                	lw	a7,44(sp)
2001207c:	5e22                	lw	t3,40(sp)
2001207e:	5e92                	lw	t4,36(sp)
20012080:	5f02                	lw	t5,32(sp)
20012082:	4ff2                	lw	t6,28(sp)
20012084:	6125                	addi	sp,sp,96
20012086:	30200073          	mret

2001208a <metal_lc1_interrupt_vector_handler>:
metal_lc1_interrupt_vector_handler():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:219

/* The metal_lc1_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc1_interrupt_vector_handler(void) {
2001208a:	711d                	addi	sp,sp,-96
2001208c:	ce86                	sw	ra,92(sp)
2001208e:	cc96                	sw	t0,88(sp)
20012090:	ca9a                	sw	t1,84(sp)
20012092:	c89e                	sw	t2,80(sp)
20012094:	c6a2                	sw	s0,76(sp)
20012096:	c4aa                	sw	a0,72(sp)
20012098:	c2ae                	sw	a1,68(sp)
2001209a:	c0b2                	sw	a2,64(sp)
2001209c:	de36                	sw	a3,60(sp)
2001209e:	dc3a                	sw	a4,56(sp)
200120a0:	da3e                	sw	a5,52(sp)
200120a2:	d842                	sw	a6,48(sp)
200120a4:	d646                	sw	a7,44(sp)
200120a6:	d472                	sw	t3,40(sp)
200120a8:	d276                	sw	t4,36(sp)
200120aa:	d07a                	sw	t5,32(sp)
200120ac:	ce7e                	sw	t6,28(sp)
200120ae:	1080                	addi	s0,sp,96
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:220
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC1);
200120b0:	93bff0ef          	jal	ra,200119ea <__metal_myhart_id>
200120b4:	872a                	mv	a4,a0
200120b6:	800007b7          	lui	a5,0x80000
200120ba:	070a                	slli	a4,a4,0x2
200120bc:	48c78793          	addi	a5,a5,1164 # 8000048c <metal_dtim_0_memory_end+0xffffc48c>
200120c0:	97ba                	add	a5,a5,a4
200120c2:	439c                	lw	a5,0(a5)
200120c4:	faf42623          	sw	a5,-84(s0)
200120c8:	fac42783          	lw	a5,-84(s0)
200120cc:	c78d                	beqz	a5,200120f6 <metal_lc1_interrupt_vector_handler+0x6c>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:220 (discriminator 1)
200120ce:	fac42503          	lw	a0,-84(s0)
200120d2:	89bff0ef          	jal	ra,2001196c <__metal_driver_cpu_interrupt_controller>
200120d6:	faa42423          	sw	a0,-88(s0)
200120da:	fa842783          	lw	a5,-88(s0)
200120de:	2307a783          	lw	a5,560(a5)
200120e2:	faf42223          	sw	a5,-92(s0)
200120e6:	fa842783          	lw	a5,-88(s0)
200120ea:	2287a783          	lw	a5,552(a5)
200120ee:	fa442583          	lw	a1,-92(s0)
200120f2:	4545                	li	a0,17
200120f4:	9782                	jalr	a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:221
}
200120f6:	0001                	nop
200120f8:	40f6                	lw	ra,92(sp)
200120fa:	42e6                	lw	t0,88(sp)
200120fc:	4356                	lw	t1,84(sp)
200120fe:	43c6                	lw	t2,80(sp)
20012100:	4436                	lw	s0,76(sp)
20012102:	4526                	lw	a0,72(sp)
20012104:	4596                	lw	a1,68(sp)
20012106:	4606                	lw	a2,64(sp)
20012108:	56f2                	lw	a3,60(sp)
2001210a:	5762                	lw	a4,56(sp)
2001210c:	57d2                	lw	a5,52(sp)
2001210e:	5842                	lw	a6,48(sp)
20012110:	58b2                	lw	a7,44(sp)
20012112:	5e22                	lw	t3,40(sp)
20012114:	5e92                	lw	t4,36(sp)
20012116:	5f02                	lw	t5,32(sp)
20012118:	4ff2                	lw	t6,28(sp)
2001211a:	6125                	addi	sp,sp,96
2001211c:	30200073          	mret

20012120 <metal_lc2_interrupt_vector_handler>:
metal_lc2_interrupt_vector_handler():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:224

/* The metal_lc2_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc2_interrupt_vector_handler(void) {
20012120:	711d                	addi	sp,sp,-96
20012122:	ce86                	sw	ra,92(sp)
20012124:	cc96                	sw	t0,88(sp)
20012126:	ca9a                	sw	t1,84(sp)
20012128:	c89e                	sw	t2,80(sp)
2001212a:	c6a2                	sw	s0,76(sp)
2001212c:	c4aa                	sw	a0,72(sp)
2001212e:	c2ae                	sw	a1,68(sp)
20012130:	c0b2                	sw	a2,64(sp)
20012132:	de36                	sw	a3,60(sp)
20012134:	dc3a                	sw	a4,56(sp)
20012136:	da3e                	sw	a5,52(sp)
20012138:	d842                	sw	a6,48(sp)
2001213a:	d646                	sw	a7,44(sp)
2001213c:	d472                	sw	t3,40(sp)
2001213e:	d276                	sw	t4,36(sp)
20012140:	d07a                	sw	t5,32(sp)
20012142:	ce7e                	sw	t6,28(sp)
20012144:	1080                	addi	s0,sp,96
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:225
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC2);
20012146:	8a5ff0ef          	jal	ra,200119ea <__metal_myhart_id>
2001214a:	872a                	mv	a4,a0
2001214c:	800007b7          	lui	a5,0x80000
20012150:	070a                	slli	a4,a4,0x2
20012152:	48c78793          	addi	a5,a5,1164 # 8000048c <metal_dtim_0_memory_end+0xffffc48c>
20012156:	97ba                	add	a5,a5,a4
20012158:	439c                	lw	a5,0(a5)
2001215a:	faf42623          	sw	a5,-84(s0)
2001215e:	fac42783          	lw	a5,-84(s0)
20012162:	c78d                	beqz	a5,2001218c <metal_lc2_interrupt_vector_handler+0x6c>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:225 (discriminator 1)
20012164:	fac42503          	lw	a0,-84(s0)
20012168:	805ff0ef          	jal	ra,2001196c <__metal_driver_cpu_interrupt_controller>
2001216c:	faa42423          	sw	a0,-88(s0)
20012170:	fa842783          	lw	a5,-88(s0)
20012174:	2487a783          	lw	a5,584(a5)
20012178:	faf42223          	sw	a5,-92(s0)
2001217c:	fa842783          	lw	a5,-88(s0)
20012180:	2407a783          	lw	a5,576(a5)
20012184:	fa442583          	lw	a1,-92(s0)
20012188:	4549                	li	a0,18
2001218a:	9782                	jalr	a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:226
}
2001218c:	0001                	nop
2001218e:	40f6                	lw	ra,92(sp)
20012190:	42e6                	lw	t0,88(sp)
20012192:	4356                	lw	t1,84(sp)
20012194:	43c6                	lw	t2,80(sp)
20012196:	4436                	lw	s0,76(sp)
20012198:	4526                	lw	a0,72(sp)
2001219a:	4596                	lw	a1,68(sp)
2001219c:	4606                	lw	a2,64(sp)
2001219e:	56f2                	lw	a3,60(sp)
200121a0:	5762                	lw	a4,56(sp)
200121a2:	57d2                	lw	a5,52(sp)
200121a4:	5842                	lw	a6,48(sp)
200121a6:	58b2                	lw	a7,44(sp)
200121a8:	5e22                	lw	t3,40(sp)
200121aa:	5e92                	lw	t4,36(sp)
200121ac:	5f02                	lw	t5,32(sp)
200121ae:	4ff2                	lw	t6,28(sp)
200121b0:	6125                	addi	sp,sp,96
200121b2:	30200073          	mret

200121b6 <metal_lc3_interrupt_vector_handler>:
metal_lc3_interrupt_vector_handler():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:229

/* The metal_lc3_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc3_interrupt_vector_handler(void) {
200121b6:	711d                	addi	sp,sp,-96
200121b8:	ce86                	sw	ra,92(sp)
200121ba:	cc96                	sw	t0,88(sp)
200121bc:	ca9a                	sw	t1,84(sp)
200121be:	c89e                	sw	t2,80(sp)
200121c0:	c6a2                	sw	s0,76(sp)
200121c2:	c4aa                	sw	a0,72(sp)
200121c4:	c2ae                	sw	a1,68(sp)
200121c6:	c0b2                	sw	a2,64(sp)
200121c8:	de36                	sw	a3,60(sp)
200121ca:	dc3a                	sw	a4,56(sp)
200121cc:	da3e                	sw	a5,52(sp)
200121ce:	d842                	sw	a6,48(sp)
200121d0:	d646                	sw	a7,44(sp)
200121d2:	d472                	sw	t3,40(sp)
200121d4:	d276                	sw	t4,36(sp)
200121d6:	d07a                	sw	t5,32(sp)
200121d8:	ce7e                	sw	t6,28(sp)
200121da:	1080                	addi	s0,sp,96
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:230
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC3);
200121dc:	80fff0ef          	jal	ra,200119ea <__metal_myhart_id>
200121e0:	872a                	mv	a4,a0
200121e2:	800007b7          	lui	a5,0x80000
200121e6:	070a                	slli	a4,a4,0x2
200121e8:	48c78793          	addi	a5,a5,1164 # 8000048c <metal_dtim_0_memory_end+0xffffc48c>
200121ec:	97ba                	add	a5,a5,a4
200121ee:	439c                	lw	a5,0(a5)
200121f0:	faf42623          	sw	a5,-84(s0)
200121f4:	fac42783          	lw	a5,-84(s0)
200121f8:	c78d                	beqz	a5,20012222 <metal_lc3_interrupt_vector_handler+0x6c>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:230 (discriminator 1)
200121fa:	fac42503          	lw	a0,-84(s0)
200121fe:	f6eff0ef          	jal	ra,2001196c <__metal_driver_cpu_interrupt_controller>
20012202:	faa42423          	sw	a0,-88(s0)
20012206:	fa842783          	lw	a5,-88(s0)
2001220a:	2607a783          	lw	a5,608(a5)
2001220e:	faf42223          	sw	a5,-92(s0)
20012212:	fa842783          	lw	a5,-88(s0)
20012216:	2587a783          	lw	a5,600(a5)
2001221a:	fa442583          	lw	a1,-92(s0)
2001221e:	454d                	li	a0,19
20012220:	9782                	jalr	a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:231
}
20012222:	0001                	nop
20012224:	40f6                	lw	ra,92(sp)
20012226:	42e6                	lw	t0,88(sp)
20012228:	4356                	lw	t1,84(sp)
2001222a:	43c6                	lw	t2,80(sp)
2001222c:	4436                	lw	s0,76(sp)
2001222e:	4526                	lw	a0,72(sp)
20012230:	4596                	lw	a1,68(sp)
20012232:	4606                	lw	a2,64(sp)
20012234:	56f2                	lw	a3,60(sp)
20012236:	5762                	lw	a4,56(sp)
20012238:	57d2                	lw	a5,52(sp)
2001223a:	5842                	lw	a6,48(sp)
2001223c:	58b2                	lw	a7,44(sp)
2001223e:	5e22                	lw	t3,40(sp)
20012240:	5e92                	lw	t4,36(sp)
20012242:	5f02                	lw	t5,32(sp)
20012244:	4ff2                	lw	t6,28(sp)
20012246:	6125                	addi	sp,sp,96
20012248:	30200073          	mret

2001224c <metal_lc4_interrupt_vector_handler>:
metal_lc4_interrupt_vector_handler():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:234

/* The metal_lc4_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc4_interrupt_vector_handler(void) {
2001224c:	711d                	addi	sp,sp,-96
2001224e:	ce86                	sw	ra,92(sp)
20012250:	cc96                	sw	t0,88(sp)
20012252:	ca9a                	sw	t1,84(sp)
20012254:	c89e                	sw	t2,80(sp)
20012256:	c6a2                	sw	s0,76(sp)
20012258:	c4aa                	sw	a0,72(sp)
2001225a:	c2ae                	sw	a1,68(sp)
2001225c:	c0b2                	sw	a2,64(sp)
2001225e:	de36                	sw	a3,60(sp)
20012260:	dc3a                	sw	a4,56(sp)
20012262:	da3e                	sw	a5,52(sp)
20012264:	d842                	sw	a6,48(sp)
20012266:	d646                	sw	a7,44(sp)
20012268:	d472                	sw	t3,40(sp)
2001226a:	d276                	sw	t4,36(sp)
2001226c:	d07a                	sw	t5,32(sp)
2001226e:	ce7e                	sw	t6,28(sp)
20012270:	1080                	addi	s0,sp,96
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:235
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC4);
20012272:	f78ff0ef          	jal	ra,200119ea <__metal_myhart_id>
20012276:	872a                	mv	a4,a0
20012278:	800007b7          	lui	a5,0x80000
2001227c:	070a                	slli	a4,a4,0x2
2001227e:	48c78793          	addi	a5,a5,1164 # 8000048c <metal_dtim_0_memory_end+0xffffc48c>
20012282:	97ba                	add	a5,a5,a4
20012284:	439c                	lw	a5,0(a5)
20012286:	faf42623          	sw	a5,-84(s0)
2001228a:	fac42783          	lw	a5,-84(s0)
2001228e:	c78d                	beqz	a5,200122b8 <metal_lc4_interrupt_vector_handler+0x6c>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:235 (discriminator 1)
20012290:	fac42503          	lw	a0,-84(s0)
20012294:	ed8ff0ef          	jal	ra,2001196c <__metal_driver_cpu_interrupt_controller>
20012298:	faa42423          	sw	a0,-88(s0)
2001229c:	fa842783          	lw	a5,-88(s0)
200122a0:	2787a783          	lw	a5,632(a5)
200122a4:	faf42223          	sw	a5,-92(s0)
200122a8:	fa842783          	lw	a5,-88(s0)
200122ac:	2707a783          	lw	a5,624(a5)
200122b0:	fa442583          	lw	a1,-92(s0)
200122b4:	4551                	li	a0,20
200122b6:	9782                	jalr	a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:236
}
200122b8:	0001                	nop
200122ba:	40f6                	lw	ra,92(sp)
200122bc:	42e6                	lw	t0,88(sp)
200122be:	4356                	lw	t1,84(sp)
200122c0:	43c6                	lw	t2,80(sp)
200122c2:	4436                	lw	s0,76(sp)
200122c4:	4526                	lw	a0,72(sp)
200122c6:	4596                	lw	a1,68(sp)
200122c8:	4606                	lw	a2,64(sp)
200122ca:	56f2                	lw	a3,60(sp)
200122cc:	5762                	lw	a4,56(sp)
200122ce:	57d2                	lw	a5,52(sp)
200122d0:	5842                	lw	a6,48(sp)
200122d2:	58b2                	lw	a7,44(sp)
200122d4:	5e22                	lw	t3,40(sp)
200122d6:	5e92                	lw	t4,36(sp)
200122d8:	5f02                	lw	t5,32(sp)
200122da:	4ff2                	lw	t6,28(sp)
200122dc:	6125                	addi	sp,sp,96
200122de:	30200073          	mret

200122e2 <metal_lc5_interrupt_vector_handler>:
metal_lc5_interrupt_vector_handler():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:239

/* The metal_lc5_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc5_interrupt_vector_handler(void) {
200122e2:	711d                	addi	sp,sp,-96
200122e4:	ce86                	sw	ra,92(sp)
200122e6:	cc96                	sw	t0,88(sp)
200122e8:	ca9a                	sw	t1,84(sp)
200122ea:	c89e                	sw	t2,80(sp)
200122ec:	c6a2                	sw	s0,76(sp)
200122ee:	c4aa                	sw	a0,72(sp)
200122f0:	c2ae                	sw	a1,68(sp)
200122f2:	c0b2                	sw	a2,64(sp)
200122f4:	de36                	sw	a3,60(sp)
200122f6:	dc3a                	sw	a4,56(sp)
200122f8:	da3e                	sw	a5,52(sp)
200122fa:	d842                	sw	a6,48(sp)
200122fc:	d646                	sw	a7,44(sp)
200122fe:	d472                	sw	t3,40(sp)
20012300:	d276                	sw	t4,36(sp)
20012302:	d07a                	sw	t5,32(sp)
20012304:	ce7e                	sw	t6,28(sp)
20012306:	1080                	addi	s0,sp,96
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:240
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC5);
20012308:	ee2ff0ef          	jal	ra,200119ea <__metal_myhart_id>
2001230c:	872a                	mv	a4,a0
2001230e:	800007b7          	lui	a5,0x80000
20012312:	070a                	slli	a4,a4,0x2
20012314:	48c78793          	addi	a5,a5,1164 # 8000048c <metal_dtim_0_memory_end+0xffffc48c>
20012318:	97ba                	add	a5,a5,a4
2001231a:	439c                	lw	a5,0(a5)
2001231c:	faf42623          	sw	a5,-84(s0)
20012320:	fac42783          	lw	a5,-84(s0)
20012324:	c78d                	beqz	a5,2001234e <metal_lc5_interrupt_vector_handler+0x6c>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:240 (discriminator 1)
20012326:	fac42503          	lw	a0,-84(s0)
2001232a:	e42ff0ef          	jal	ra,2001196c <__metal_driver_cpu_interrupt_controller>
2001232e:	faa42423          	sw	a0,-88(s0)
20012332:	fa842783          	lw	a5,-88(s0)
20012336:	2907a783          	lw	a5,656(a5)
2001233a:	faf42223          	sw	a5,-92(s0)
2001233e:	fa842783          	lw	a5,-88(s0)
20012342:	2887a783          	lw	a5,648(a5)
20012346:	fa442583          	lw	a1,-92(s0)
2001234a:	4555                	li	a0,21
2001234c:	9782                	jalr	a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:241
}
2001234e:	0001                	nop
20012350:	40f6                	lw	ra,92(sp)
20012352:	42e6                	lw	t0,88(sp)
20012354:	4356                	lw	t1,84(sp)
20012356:	43c6                	lw	t2,80(sp)
20012358:	4436                	lw	s0,76(sp)
2001235a:	4526                	lw	a0,72(sp)
2001235c:	4596                	lw	a1,68(sp)
2001235e:	4606                	lw	a2,64(sp)
20012360:	56f2                	lw	a3,60(sp)
20012362:	5762                	lw	a4,56(sp)
20012364:	57d2                	lw	a5,52(sp)
20012366:	5842                	lw	a6,48(sp)
20012368:	58b2                	lw	a7,44(sp)
2001236a:	5e22                	lw	t3,40(sp)
2001236c:	5e92                	lw	t4,36(sp)
2001236e:	5f02                	lw	t5,32(sp)
20012370:	4ff2                	lw	t6,28(sp)
20012372:	6125                	addi	sp,sp,96
20012374:	30200073          	mret

20012378 <metal_lc6_interrupt_vector_handler>:
metal_lc6_interrupt_vector_handler():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:244

/* The metal_lc6_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc6_interrupt_vector_handler(void) {
20012378:	711d                	addi	sp,sp,-96
2001237a:	ce86                	sw	ra,92(sp)
2001237c:	cc96                	sw	t0,88(sp)
2001237e:	ca9a                	sw	t1,84(sp)
20012380:	c89e                	sw	t2,80(sp)
20012382:	c6a2                	sw	s0,76(sp)
20012384:	c4aa                	sw	a0,72(sp)
20012386:	c2ae                	sw	a1,68(sp)
20012388:	c0b2                	sw	a2,64(sp)
2001238a:	de36                	sw	a3,60(sp)
2001238c:	dc3a                	sw	a4,56(sp)
2001238e:	da3e                	sw	a5,52(sp)
20012390:	d842                	sw	a6,48(sp)
20012392:	d646                	sw	a7,44(sp)
20012394:	d472                	sw	t3,40(sp)
20012396:	d276                	sw	t4,36(sp)
20012398:	d07a                	sw	t5,32(sp)
2001239a:	ce7e                	sw	t6,28(sp)
2001239c:	1080                	addi	s0,sp,96
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:245
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC6);
2001239e:	e4cff0ef          	jal	ra,200119ea <__metal_myhart_id>
200123a2:	872a                	mv	a4,a0
200123a4:	800007b7          	lui	a5,0x80000
200123a8:	070a                	slli	a4,a4,0x2
200123aa:	48c78793          	addi	a5,a5,1164 # 8000048c <metal_dtim_0_memory_end+0xffffc48c>
200123ae:	97ba                	add	a5,a5,a4
200123b0:	439c                	lw	a5,0(a5)
200123b2:	faf42623          	sw	a5,-84(s0)
200123b6:	fac42783          	lw	a5,-84(s0)
200123ba:	c78d                	beqz	a5,200123e4 <metal_lc6_interrupt_vector_handler+0x6c>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:245 (discriminator 1)
200123bc:	fac42503          	lw	a0,-84(s0)
200123c0:	dacff0ef          	jal	ra,2001196c <__metal_driver_cpu_interrupt_controller>
200123c4:	faa42423          	sw	a0,-88(s0)
200123c8:	fa842783          	lw	a5,-88(s0)
200123cc:	2a87a783          	lw	a5,680(a5)
200123d0:	faf42223          	sw	a5,-92(s0)
200123d4:	fa842783          	lw	a5,-88(s0)
200123d8:	2a07a783          	lw	a5,672(a5)
200123dc:	fa442583          	lw	a1,-92(s0)
200123e0:	4559                	li	a0,22
200123e2:	9782                	jalr	a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:246
}
200123e4:	0001                	nop
200123e6:	40f6                	lw	ra,92(sp)
200123e8:	42e6                	lw	t0,88(sp)
200123ea:	4356                	lw	t1,84(sp)
200123ec:	43c6                	lw	t2,80(sp)
200123ee:	4436                	lw	s0,76(sp)
200123f0:	4526                	lw	a0,72(sp)
200123f2:	4596                	lw	a1,68(sp)
200123f4:	4606                	lw	a2,64(sp)
200123f6:	56f2                	lw	a3,60(sp)
200123f8:	5762                	lw	a4,56(sp)
200123fa:	57d2                	lw	a5,52(sp)
200123fc:	5842                	lw	a6,48(sp)
200123fe:	58b2                	lw	a7,44(sp)
20012400:	5e22                	lw	t3,40(sp)
20012402:	5e92                	lw	t4,36(sp)
20012404:	5f02                	lw	t5,32(sp)
20012406:	4ff2                	lw	t6,28(sp)
20012408:	6125                	addi	sp,sp,96
2001240a:	30200073          	mret

2001240e <metal_lc7_interrupt_vector_handler>:
metal_lc7_interrupt_vector_handler():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:249

/* The metal_lc7_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc7_interrupt_vector_handler(void) {
2001240e:	711d                	addi	sp,sp,-96
20012410:	ce86                	sw	ra,92(sp)
20012412:	cc96                	sw	t0,88(sp)
20012414:	ca9a                	sw	t1,84(sp)
20012416:	c89e                	sw	t2,80(sp)
20012418:	c6a2                	sw	s0,76(sp)
2001241a:	c4aa                	sw	a0,72(sp)
2001241c:	c2ae                	sw	a1,68(sp)
2001241e:	c0b2                	sw	a2,64(sp)
20012420:	de36                	sw	a3,60(sp)
20012422:	dc3a                	sw	a4,56(sp)
20012424:	da3e                	sw	a5,52(sp)
20012426:	d842                	sw	a6,48(sp)
20012428:	d646                	sw	a7,44(sp)
2001242a:	d472                	sw	t3,40(sp)
2001242c:	d276                	sw	t4,36(sp)
2001242e:	d07a                	sw	t5,32(sp)
20012430:	ce7e                	sw	t6,28(sp)
20012432:	1080                	addi	s0,sp,96
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:250
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC7);
20012434:	db6ff0ef          	jal	ra,200119ea <__metal_myhart_id>
20012438:	872a                	mv	a4,a0
2001243a:	800007b7          	lui	a5,0x80000
2001243e:	070a                	slli	a4,a4,0x2
20012440:	48c78793          	addi	a5,a5,1164 # 8000048c <metal_dtim_0_memory_end+0xffffc48c>
20012444:	97ba                	add	a5,a5,a4
20012446:	439c                	lw	a5,0(a5)
20012448:	faf42623          	sw	a5,-84(s0)
2001244c:	fac42783          	lw	a5,-84(s0)
20012450:	c78d                	beqz	a5,2001247a <metal_lc7_interrupt_vector_handler+0x6c>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:250 (discriminator 1)
20012452:	fac42503          	lw	a0,-84(s0)
20012456:	d16ff0ef          	jal	ra,2001196c <__metal_driver_cpu_interrupt_controller>
2001245a:	faa42423          	sw	a0,-88(s0)
2001245e:	fa842783          	lw	a5,-88(s0)
20012462:	2c07a783          	lw	a5,704(a5)
20012466:	faf42223          	sw	a5,-92(s0)
2001246a:	fa842783          	lw	a5,-88(s0)
2001246e:	2b87a783          	lw	a5,696(a5)
20012472:	fa442583          	lw	a1,-92(s0)
20012476:	455d                	li	a0,23
20012478:	9782                	jalr	a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:251
}
2001247a:	0001                	nop
2001247c:	40f6                	lw	ra,92(sp)
2001247e:	42e6                	lw	t0,88(sp)
20012480:	4356                	lw	t1,84(sp)
20012482:	43c6                	lw	t2,80(sp)
20012484:	4436                	lw	s0,76(sp)
20012486:	4526                	lw	a0,72(sp)
20012488:	4596                	lw	a1,68(sp)
2001248a:	4606                	lw	a2,64(sp)
2001248c:	56f2                	lw	a3,60(sp)
2001248e:	5762                	lw	a4,56(sp)
20012490:	57d2                	lw	a5,52(sp)
20012492:	5842                	lw	a6,48(sp)
20012494:	58b2                	lw	a7,44(sp)
20012496:	5e22                	lw	t3,40(sp)
20012498:	5e92                	lw	t4,36(sp)
2001249a:	5f02                	lw	t5,32(sp)
2001249c:	4ff2                	lw	t6,28(sp)
2001249e:	6125                	addi	sp,sp,96
200124a0:	30200073          	mret

200124a4 <metal_lc8_interrupt_vector_handler>:
metal_lc8_interrupt_vector_handler():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:254

/* The metal_lc8_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc8_interrupt_vector_handler(void) {
200124a4:	711d                	addi	sp,sp,-96
200124a6:	ce86                	sw	ra,92(sp)
200124a8:	cc96                	sw	t0,88(sp)
200124aa:	ca9a                	sw	t1,84(sp)
200124ac:	c89e                	sw	t2,80(sp)
200124ae:	c6a2                	sw	s0,76(sp)
200124b0:	c4aa                	sw	a0,72(sp)
200124b2:	c2ae                	sw	a1,68(sp)
200124b4:	c0b2                	sw	a2,64(sp)
200124b6:	de36                	sw	a3,60(sp)
200124b8:	dc3a                	sw	a4,56(sp)
200124ba:	da3e                	sw	a5,52(sp)
200124bc:	d842                	sw	a6,48(sp)
200124be:	d646                	sw	a7,44(sp)
200124c0:	d472                	sw	t3,40(sp)
200124c2:	d276                	sw	t4,36(sp)
200124c4:	d07a                	sw	t5,32(sp)
200124c6:	ce7e                	sw	t6,28(sp)
200124c8:	1080                	addi	s0,sp,96
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:255
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC8);
200124ca:	d20ff0ef          	jal	ra,200119ea <__metal_myhart_id>
200124ce:	872a                	mv	a4,a0
200124d0:	800007b7          	lui	a5,0x80000
200124d4:	070a                	slli	a4,a4,0x2
200124d6:	48c78793          	addi	a5,a5,1164 # 8000048c <metal_dtim_0_memory_end+0xffffc48c>
200124da:	97ba                	add	a5,a5,a4
200124dc:	439c                	lw	a5,0(a5)
200124de:	faf42623          	sw	a5,-84(s0)
200124e2:	fac42783          	lw	a5,-84(s0)
200124e6:	c78d                	beqz	a5,20012510 <metal_lc8_interrupt_vector_handler+0x6c>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:255 (discriminator 1)
200124e8:	fac42503          	lw	a0,-84(s0)
200124ec:	c80ff0ef          	jal	ra,2001196c <__metal_driver_cpu_interrupt_controller>
200124f0:	faa42423          	sw	a0,-88(s0)
200124f4:	fa842783          	lw	a5,-88(s0)
200124f8:	2d87a783          	lw	a5,728(a5)
200124fc:	faf42223          	sw	a5,-92(s0)
20012500:	fa842783          	lw	a5,-88(s0)
20012504:	2d07a783          	lw	a5,720(a5)
20012508:	fa442583          	lw	a1,-92(s0)
2001250c:	4561                	li	a0,24
2001250e:	9782                	jalr	a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:256
}
20012510:	0001                	nop
20012512:	40f6                	lw	ra,92(sp)
20012514:	42e6                	lw	t0,88(sp)
20012516:	4356                	lw	t1,84(sp)
20012518:	43c6                	lw	t2,80(sp)
2001251a:	4436                	lw	s0,76(sp)
2001251c:	4526                	lw	a0,72(sp)
2001251e:	4596                	lw	a1,68(sp)
20012520:	4606                	lw	a2,64(sp)
20012522:	56f2                	lw	a3,60(sp)
20012524:	5762                	lw	a4,56(sp)
20012526:	57d2                	lw	a5,52(sp)
20012528:	5842                	lw	a6,48(sp)
2001252a:	58b2                	lw	a7,44(sp)
2001252c:	5e22                	lw	t3,40(sp)
2001252e:	5e92                	lw	t4,36(sp)
20012530:	5f02                	lw	t5,32(sp)
20012532:	4ff2                	lw	t6,28(sp)
20012534:	6125                	addi	sp,sp,96
20012536:	30200073          	mret

2001253a <metal_lc9_interrupt_vector_handler>:
metal_lc9_interrupt_vector_handler():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:259

/* The metal_lc9_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc9_interrupt_vector_handler(void) {
2001253a:	711d                	addi	sp,sp,-96
2001253c:	ce86                	sw	ra,92(sp)
2001253e:	cc96                	sw	t0,88(sp)
20012540:	ca9a                	sw	t1,84(sp)
20012542:	c89e                	sw	t2,80(sp)
20012544:	c6a2                	sw	s0,76(sp)
20012546:	c4aa                	sw	a0,72(sp)
20012548:	c2ae                	sw	a1,68(sp)
2001254a:	c0b2                	sw	a2,64(sp)
2001254c:	de36                	sw	a3,60(sp)
2001254e:	dc3a                	sw	a4,56(sp)
20012550:	da3e                	sw	a5,52(sp)
20012552:	d842                	sw	a6,48(sp)
20012554:	d646                	sw	a7,44(sp)
20012556:	d472                	sw	t3,40(sp)
20012558:	d276                	sw	t4,36(sp)
2001255a:	d07a                	sw	t5,32(sp)
2001255c:	ce7e                	sw	t6,28(sp)
2001255e:	1080                	addi	s0,sp,96
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:260
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC9);
20012560:	c8aff0ef          	jal	ra,200119ea <__metal_myhart_id>
20012564:	872a                	mv	a4,a0
20012566:	800007b7          	lui	a5,0x80000
2001256a:	070a                	slli	a4,a4,0x2
2001256c:	48c78793          	addi	a5,a5,1164 # 8000048c <metal_dtim_0_memory_end+0xffffc48c>
20012570:	97ba                	add	a5,a5,a4
20012572:	439c                	lw	a5,0(a5)
20012574:	faf42623          	sw	a5,-84(s0)
20012578:	fac42783          	lw	a5,-84(s0)
2001257c:	c78d                	beqz	a5,200125a6 <metal_lc9_interrupt_vector_handler+0x6c>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:260 (discriminator 1)
2001257e:	fac42503          	lw	a0,-84(s0)
20012582:	beaff0ef          	jal	ra,2001196c <__metal_driver_cpu_interrupt_controller>
20012586:	faa42423          	sw	a0,-88(s0)
2001258a:	fa842783          	lw	a5,-88(s0)
2001258e:	2f07a783          	lw	a5,752(a5)
20012592:	faf42223          	sw	a5,-92(s0)
20012596:	fa842783          	lw	a5,-88(s0)
2001259a:	2e87a783          	lw	a5,744(a5)
2001259e:	fa442583          	lw	a1,-92(s0)
200125a2:	4565                	li	a0,25
200125a4:	9782                	jalr	a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:261
}
200125a6:	0001                	nop
200125a8:	40f6                	lw	ra,92(sp)
200125aa:	42e6                	lw	t0,88(sp)
200125ac:	4356                	lw	t1,84(sp)
200125ae:	43c6                	lw	t2,80(sp)
200125b0:	4436                	lw	s0,76(sp)
200125b2:	4526                	lw	a0,72(sp)
200125b4:	4596                	lw	a1,68(sp)
200125b6:	4606                	lw	a2,64(sp)
200125b8:	56f2                	lw	a3,60(sp)
200125ba:	5762                	lw	a4,56(sp)
200125bc:	57d2                	lw	a5,52(sp)
200125be:	5842                	lw	a6,48(sp)
200125c0:	58b2                	lw	a7,44(sp)
200125c2:	5e22                	lw	t3,40(sp)
200125c4:	5e92                	lw	t4,36(sp)
200125c6:	5f02                	lw	t5,32(sp)
200125c8:	4ff2                	lw	t6,28(sp)
200125ca:	6125                	addi	sp,sp,96
200125cc:	30200073          	mret

200125d0 <metal_lc10_interrupt_vector_handler>:
metal_lc10_interrupt_vector_handler():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:265

/* The metal_lc10_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc10_interrupt_vector_handler(void) {
200125d0:	711d                	addi	sp,sp,-96
200125d2:	ce86                	sw	ra,92(sp)
200125d4:	cc96                	sw	t0,88(sp)
200125d6:	ca9a                	sw	t1,84(sp)
200125d8:	c89e                	sw	t2,80(sp)
200125da:	c6a2                	sw	s0,76(sp)
200125dc:	c4aa                	sw	a0,72(sp)
200125de:	c2ae                	sw	a1,68(sp)
200125e0:	c0b2                	sw	a2,64(sp)
200125e2:	de36                	sw	a3,60(sp)
200125e4:	dc3a                	sw	a4,56(sp)
200125e6:	da3e                	sw	a5,52(sp)
200125e8:	d842                	sw	a6,48(sp)
200125ea:	d646                	sw	a7,44(sp)
200125ec:	d472                	sw	t3,40(sp)
200125ee:	d276                	sw	t4,36(sp)
200125f0:	d07a                	sw	t5,32(sp)
200125f2:	ce7e                	sw	t6,28(sp)
200125f4:	1080                	addi	s0,sp,96
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:266
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC10);
200125f6:	bf4ff0ef          	jal	ra,200119ea <__metal_myhart_id>
200125fa:	872a                	mv	a4,a0
200125fc:	800007b7          	lui	a5,0x80000
20012600:	070a                	slli	a4,a4,0x2
20012602:	48c78793          	addi	a5,a5,1164 # 8000048c <metal_dtim_0_memory_end+0xffffc48c>
20012606:	97ba                	add	a5,a5,a4
20012608:	439c                	lw	a5,0(a5)
2001260a:	faf42623          	sw	a5,-84(s0)
2001260e:	fac42783          	lw	a5,-84(s0)
20012612:	c78d                	beqz	a5,2001263c <metal_lc10_interrupt_vector_handler+0x6c>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:266 (discriminator 1)
20012614:	fac42503          	lw	a0,-84(s0)
20012618:	b54ff0ef          	jal	ra,2001196c <__metal_driver_cpu_interrupt_controller>
2001261c:	faa42423          	sw	a0,-88(s0)
20012620:	fa842783          	lw	a5,-88(s0)
20012624:	3087a783          	lw	a5,776(a5)
20012628:	faf42223          	sw	a5,-92(s0)
2001262c:	fa842783          	lw	a5,-88(s0)
20012630:	3007a783          	lw	a5,768(a5)
20012634:	fa442583          	lw	a1,-92(s0)
20012638:	4569                	li	a0,26
2001263a:	9782                	jalr	a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:267
}
2001263c:	0001                	nop
2001263e:	40f6                	lw	ra,92(sp)
20012640:	42e6                	lw	t0,88(sp)
20012642:	4356                	lw	t1,84(sp)
20012644:	43c6                	lw	t2,80(sp)
20012646:	4436                	lw	s0,76(sp)
20012648:	4526                	lw	a0,72(sp)
2001264a:	4596                	lw	a1,68(sp)
2001264c:	4606                	lw	a2,64(sp)
2001264e:	56f2                	lw	a3,60(sp)
20012650:	5762                	lw	a4,56(sp)
20012652:	57d2                	lw	a5,52(sp)
20012654:	5842                	lw	a6,48(sp)
20012656:	58b2                	lw	a7,44(sp)
20012658:	5e22                	lw	t3,40(sp)
2001265a:	5e92                	lw	t4,36(sp)
2001265c:	5f02                	lw	t5,32(sp)
2001265e:	4ff2                	lw	t6,28(sp)
20012660:	6125                	addi	sp,sp,96
20012662:	30200073          	mret

20012666 <metal_lc11_interrupt_vector_handler>:
metal_lc11_interrupt_vector_handler():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:271

/* The metal_lc11_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc11_interrupt_vector_handler(void) {
20012666:	711d                	addi	sp,sp,-96
20012668:	ce86                	sw	ra,92(sp)
2001266a:	cc96                	sw	t0,88(sp)
2001266c:	ca9a                	sw	t1,84(sp)
2001266e:	c89e                	sw	t2,80(sp)
20012670:	c6a2                	sw	s0,76(sp)
20012672:	c4aa                	sw	a0,72(sp)
20012674:	c2ae                	sw	a1,68(sp)
20012676:	c0b2                	sw	a2,64(sp)
20012678:	de36                	sw	a3,60(sp)
2001267a:	dc3a                	sw	a4,56(sp)
2001267c:	da3e                	sw	a5,52(sp)
2001267e:	d842                	sw	a6,48(sp)
20012680:	d646                	sw	a7,44(sp)
20012682:	d472                	sw	t3,40(sp)
20012684:	d276                	sw	t4,36(sp)
20012686:	d07a                	sw	t5,32(sp)
20012688:	ce7e                	sw	t6,28(sp)
2001268a:	1080                	addi	s0,sp,96
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:272
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC11);
2001268c:	b5eff0ef          	jal	ra,200119ea <__metal_myhart_id>
20012690:	872a                	mv	a4,a0
20012692:	800007b7          	lui	a5,0x80000
20012696:	070a                	slli	a4,a4,0x2
20012698:	48c78793          	addi	a5,a5,1164 # 8000048c <metal_dtim_0_memory_end+0xffffc48c>
2001269c:	97ba                	add	a5,a5,a4
2001269e:	439c                	lw	a5,0(a5)
200126a0:	faf42623          	sw	a5,-84(s0)
200126a4:	fac42783          	lw	a5,-84(s0)
200126a8:	c78d                	beqz	a5,200126d2 <metal_lc11_interrupt_vector_handler+0x6c>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:272 (discriminator 1)
200126aa:	fac42503          	lw	a0,-84(s0)
200126ae:	abeff0ef          	jal	ra,2001196c <__metal_driver_cpu_interrupt_controller>
200126b2:	faa42423          	sw	a0,-88(s0)
200126b6:	fa842783          	lw	a5,-88(s0)
200126ba:	3207a783          	lw	a5,800(a5)
200126be:	faf42223          	sw	a5,-92(s0)
200126c2:	fa842783          	lw	a5,-88(s0)
200126c6:	3187a783          	lw	a5,792(a5)
200126ca:	fa442583          	lw	a1,-92(s0)
200126ce:	456d                	li	a0,27
200126d0:	9782                	jalr	a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:273
}
200126d2:	0001                	nop
200126d4:	40f6                	lw	ra,92(sp)
200126d6:	42e6                	lw	t0,88(sp)
200126d8:	4356                	lw	t1,84(sp)
200126da:	43c6                	lw	t2,80(sp)
200126dc:	4436                	lw	s0,76(sp)
200126de:	4526                	lw	a0,72(sp)
200126e0:	4596                	lw	a1,68(sp)
200126e2:	4606                	lw	a2,64(sp)
200126e4:	56f2                	lw	a3,60(sp)
200126e6:	5762                	lw	a4,56(sp)
200126e8:	57d2                	lw	a5,52(sp)
200126ea:	5842                	lw	a6,48(sp)
200126ec:	58b2                	lw	a7,44(sp)
200126ee:	5e22                	lw	t3,40(sp)
200126f0:	5e92                	lw	t4,36(sp)
200126f2:	5f02                	lw	t5,32(sp)
200126f4:	4ff2                	lw	t6,28(sp)
200126f6:	6125                	addi	sp,sp,96
200126f8:	30200073          	mret

200126fc <metal_lc12_interrupt_vector_handler>:
metal_lc12_interrupt_vector_handler():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:277

/* The metal_lc12_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc12_interrupt_vector_handler(void) {
200126fc:	711d                	addi	sp,sp,-96
200126fe:	ce86                	sw	ra,92(sp)
20012700:	cc96                	sw	t0,88(sp)
20012702:	ca9a                	sw	t1,84(sp)
20012704:	c89e                	sw	t2,80(sp)
20012706:	c6a2                	sw	s0,76(sp)
20012708:	c4aa                	sw	a0,72(sp)
2001270a:	c2ae                	sw	a1,68(sp)
2001270c:	c0b2                	sw	a2,64(sp)
2001270e:	de36                	sw	a3,60(sp)
20012710:	dc3a                	sw	a4,56(sp)
20012712:	da3e                	sw	a5,52(sp)
20012714:	d842                	sw	a6,48(sp)
20012716:	d646                	sw	a7,44(sp)
20012718:	d472                	sw	t3,40(sp)
2001271a:	d276                	sw	t4,36(sp)
2001271c:	d07a                	sw	t5,32(sp)
2001271e:	ce7e                	sw	t6,28(sp)
20012720:	1080                	addi	s0,sp,96
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:278
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC12);
20012722:	ac8ff0ef          	jal	ra,200119ea <__metal_myhart_id>
20012726:	872a                	mv	a4,a0
20012728:	800007b7          	lui	a5,0x80000
2001272c:	070a                	slli	a4,a4,0x2
2001272e:	48c78793          	addi	a5,a5,1164 # 8000048c <metal_dtim_0_memory_end+0xffffc48c>
20012732:	97ba                	add	a5,a5,a4
20012734:	439c                	lw	a5,0(a5)
20012736:	faf42623          	sw	a5,-84(s0)
2001273a:	fac42783          	lw	a5,-84(s0)
2001273e:	c78d                	beqz	a5,20012768 <metal_lc12_interrupt_vector_handler+0x6c>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:278 (discriminator 1)
20012740:	fac42503          	lw	a0,-84(s0)
20012744:	a28ff0ef          	jal	ra,2001196c <__metal_driver_cpu_interrupt_controller>
20012748:	faa42423          	sw	a0,-88(s0)
2001274c:	fa842783          	lw	a5,-88(s0)
20012750:	3387a783          	lw	a5,824(a5)
20012754:	faf42223          	sw	a5,-92(s0)
20012758:	fa842783          	lw	a5,-88(s0)
2001275c:	3307a783          	lw	a5,816(a5)
20012760:	fa442583          	lw	a1,-92(s0)
20012764:	4571                	li	a0,28
20012766:	9782                	jalr	a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:279
}
20012768:	0001                	nop
2001276a:	40f6                	lw	ra,92(sp)
2001276c:	42e6                	lw	t0,88(sp)
2001276e:	4356                	lw	t1,84(sp)
20012770:	43c6                	lw	t2,80(sp)
20012772:	4436                	lw	s0,76(sp)
20012774:	4526                	lw	a0,72(sp)
20012776:	4596                	lw	a1,68(sp)
20012778:	4606                	lw	a2,64(sp)
2001277a:	56f2                	lw	a3,60(sp)
2001277c:	5762                	lw	a4,56(sp)
2001277e:	57d2                	lw	a5,52(sp)
20012780:	5842                	lw	a6,48(sp)
20012782:	58b2                	lw	a7,44(sp)
20012784:	5e22                	lw	t3,40(sp)
20012786:	5e92                	lw	t4,36(sp)
20012788:	5f02                	lw	t5,32(sp)
2001278a:	4ff2                	lw	t6,28(sp)
2001278c:	6125                	addi	sp,sp,96
2001278e:	30200073          	mret

20012792 <metal_lc13_interrupt_vector_handler>:
metal_lc13_interrupt_vector_handler():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:283

/* The metal_lc13_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc13_interrupt_vector_handler(void) {
20012792:	711d                	addi	sp,sp,-96
20012794:	ce86                	sw	ra,92(sp)
20012796:	cc96                	sw	t0,88(sp)
20012798:	ca9a                	sw	t1,84(sp)
2001279a:	c89e                	sw	t2,80(sp)
2001279c:	c6a2                	sw	s0,76(sp)
2001279e:	c4aa                	sw	a0,72(sp)
200127a0:	c2ae                	sw	a1,68(sp)
200127a2:	c0b2                	sw	a2,64(sp)
200127a4:	de36                	sw	a3,60(sp)
200127a6:	dc3a                	sw	a4,56(sp)
200127a8:	da3e                	sw	a5,52(sp)
200127aa:	d842                	sw	a6,48(sp)
200127ac:	d646                	sw	a7,44(sp)
200127ae:	d472                	sw	t3,40(sp)
200127b0:	d276                	sw	t4,36(sp)
200127b2:	d07a                	sw	t5,32(sp)
200127b4:	ce7e                	sw	t6,28(sp)
200127b6:	1080                	addi	s0,sp,96
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:284
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC13);
200127b8:	a32ff0ef          	jal	ra,200119ea <__metal_myhart_id>
200127bc:	872a                	mv	a4,a0
200127be:	800007b7          	lui	a5,0x80000
200127c2:	070a                	slli	a4,a4,0x2
200127c4:	48c78793          	addi	a5,a5,1164 # 8000048c <metal_dtim_0_memory_end+0xffffc48c>
200127c8:	97ba                	add	a5,a5,a4
200127ca:	439c                	lw	a5,0(a5)
200127cc:	faf42623          	sw	a5,-84(s0)
200127d0:	fac42783          	lw	a5,-84(s0)
200127d4:	c78d                	beqz	a5,200127fe <metal_lc13_interrupt_vector_handler+0x6c>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:284 (discriminator 1)
200127d6:	fac42503          	lw	a0,-84(s0)
200127da:	992ff0ef          	jal	ra,2001196c <__metal_driver_cpu_interrupt_controller>
200127de:	faa42423          	sw	a0,-88(s0)
200127e2:	fa842783          	lw	a5,-88(s0)
200127e6:	3507a783          	lw	a5,848(a5)
200127ea:	faf42223          	sw	a5,-92(s0)
200127ee:	fa842783          	lw	a5,-88(s0)
200127f2:	3487a783          	lw	a5,840(a5)
200127f6:	fa442583          	lw	a1,-92(s0)
200127fa:	4575                	li	a0,29
200127fc:	9782                	jalr	a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:285
}
200127fe:	0001                	nop
20012800:	40f6                	lw	ra,92(sp)
20012802:	42e6                	lw	t0,88(sp)
20012804:	4356                	lw	t1,84(sp)
20012806:	43c6                	lw	t2,80(sp)
20012808:	4436                	lw	s0,76(sp)
2001280a:	4526                	lw	a0,72(sp)
2001280c:	4596                	lw	a1,68(sp)
2001280e:	4606                	lw	a2,64(sp)
20012810:	56f2                	lw	a3,60(sp)
20012812:	5762                	lw	a4,56(sp)
20012814:	57d2                	lw	a5,52(sp)
20012816:	5842                	lw	a6,48(sp)
20012818:	58b2                	lw	a7,44(sp)
2001281a:	5e22                	lw	t3,40(sp)
2001281c:	5e92                	lw	t4,36(sp)
2001281e:	5f02                	lw	t5,32(sp)
20012820:	4ff2                	lw	t6,28(sp)
20012822:	6125                	addi	sp,sp,96
20012824:	30200073          	mret

20012828 <metal_lc14_interrupt_vector_handler>:
metal_lc14_interrupt_vector_handler():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:289

/* The metal_lc14_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc14_interrupt_vector_handler(void) {
20012828:	711d                	addi	sp,sp,-96
2001282a:	ce86                	sw	ra,92(sp)
2001282c:	cc96                	sw	t0,88(sp)
2001282e:	ca9a                	sw	t1,84(sp)
20012830:	c89e                	sw	t2,80(sp)
20012832:	c6a2                	sw	s0,76(sp)
20012834:	c4aa                	sw	a0,72(sp)
20012836:	c2ae                	sw	a1,68(sp)
20012838:	c0b2                	sw	a2,64(sp)
2001283a:	de36                	sw	a3,60(sp)
2001283c:	dc3a                	sw	a4,56(sp)
2001283e:	da3e                	sw	a5,52(sp)
20012840:	d842                	sw	a6,48(sp)
20012842:	d646                	sw	a7,44(sp)
20012844:	d472                	sw	t3,40(sp)
20012846:	d276                	sw	t4,36(sp)
20012848:	d07a                	sw	t5,32(sp)
2001284a:	ce7e                	sw	t6,28(sp)
2001284c:	1080                	addi	s0,sp,96
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:290
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC14);
2001284e:	99cff0ef          	jal	ra,200119ea <__metal_myhart_id>
20012852:	872a                	mv	a4,a0
20012854:	800007b7          	lui	a5,0x80000
20012858:	070a                	slli	a4,a4,0x2
2001285a:	48c78793          	addi	a5,a5,1164 # 8000048c <metal_dtim_0_memory_end+0xffffc48c>
2001285e:	97ba                	add	a5,a5,a4
20012860:	439c                	lw	a5,0(a5)
20012862:	faf42623          	sw	a5,-84(s0)
20012866:	fac42783          	lw	a5,-84(s0)
2001286a:	c78d                	beqz	a5,20012894 <metal_lc14_interrupt_vector_handler+0x6c>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:290 (discriminator 1)
2001286c:	fac42503          	lw	a0,-84(s0)
20012870:	8fcff0ef          	jal	ra,2001196c <__metal_driver_cpu_interrupt_controller>
20012874:	faa42423          	sw	a0,-88(s0)
20012878:	fa842783          	lw	a5,-88(s0)
2001287c:	3687a783          	lw	a5,872(a5)
20012880:	faf42223          	sw	a5,-92(s0)
20012884:	fa842783          	lw	a5,-88(s0)
20012888:	3607a783          	lw	a5,864(a5)
2001288c:	fa442583          	lw	a1,-92(s0)
20012890:	4579                	li	a0,30
20012892:	9782                	jalr	a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:291
}
20012894:	0001                	nop
20012896:	40f6                	lw	ra,92(sp)
20012898:	42e6                	lw	t0,88(sp)
2001289a:	4356                	lw	t1,84(sp)
2001289c:	43c6                	lw	t2,80(sp)
2001289e:	4436                	lw	s0,76(sp)
200128a0:	4526                	lw	a0,72(sp)
200128a2:	4596                	lw	a1,68(sp)
200128a4:	4606                	lw	a2,64(sp)
200128a6:	56f2                	lw	a3,60(sp)
200128a8:	5762                	lw	a4,56(sp)
200128aa:	57d2                	lw	a5,52(sp)
200128ac:	5842                	lw	a6,48(sp)
200128ae:	58b2                	lw	a7,44(sp)
200128b0:	5e22                	lw	t3,40(sp)
200128b2:	5e92                	lw	t4,36(sp)
200128b4:	5f02                	lw	t5,32(sp)
200128b6:	4ff2                	lw	t6,28(sp)
200128b8:	6125                	addi	sp,sp,96
200128ba:	30200073          	mret

200128be <metal_lc15_interrupt_vector_handler>:
metal_lc15_interrupt_vector_handler():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:295

/* The metal_lc15_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc15_interrupt_vector_handler(void) {
200128be:	711d                	addi	sp,sp,-96
200128c0:	ce86                	sw	ra,92(sp)
200128c2:	cc96                	sw	t0,88(sp)
200128c4:	ca9a                	sw	t1,84(sp)
200128c6:	c89e                	sw	t2,80(sp)
200128c8:	c6a2                	sw	s0,76(sp)
200128ca:	c4aa                	sw	a0,72(sp)
200128cc:	c2ae                	sw	a1,68(sp)
200128ce:	c0b2                	sw	a2,64(sp)
200128d0:	de36                	sw	a3,60(sp)
200128d2:	dc3a                	sw	a4,56(sp)
200128d4:	da3e                	sw	a5,52(sp)
200128d6:	d842                	sw	a6,48(sp)
200128d8:	d646                	sw	a7,44(sp)
200128da:	d472                	sw	t3,40(sp)
200128dc:	d276                	sw	t4,36(sp)
200128de:	d07a                	sw	t5,32(sp)
200128e0:	ce7e                	sw	t6,28(sp)
200128e2:	1080                	addi	s0,sp,96
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:296
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC15);
200128e4:	906ff0ef          	jal	ra,200119ea <__metal_myhart_id>
200128e8:	872a                	mv	a4,a0
200128ea:	800007b7          	lui	a5,0x80000
200128ee:	070a                	slli	a4,a4,0x2
200128f0:	48c78793          	addi	a5,a5,1164 # 8000048c <metal_dtim_0_memory_end+0xffffc48c>
200128f4:	97ba                	add	a5,a5,a4
200128f6:	439c                	lw	a5,0(a5)
200128f8:	faf42623          	sw	a5,-84(s0)
200128fc:	fac42783          	lw	a5,-84(s0)
20012900:	c78d                	beqz	a5,2001292a <metal_lc15_interrupt_vector_handler+0x6c>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:296 (discriminator 1)
20012902:	fac42503          	lw	a0,-84(s0)
20012906:	866ff0ef          	jal	ra,2001196c <__metal_driver_cpu_interrupt_controller>
2001290a:	faa42423          	sw	a0,-88(s0)
2001290e:	fa842783          	lw	a5,-88(s0)
20012912:	3807a783          	lw	a5,896(a5)
20012916:	faf42223          	sw	a5,-92(s0)
2001291a:	fa842783          	lw	a5,-88(s0)
2001291e:	3787a783          	lw	a5,888(a5)
20012922:	fa442583          	lw	a1,-92(s0)
20012926:	457d                	li	a0,31
20012928:	9782                	jalr	a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:297
}
2001292a:	0001                	nop
2001292c:	40f6                	lw	ra,92(sp)
2001292e:	42e6                	lw	t0,88(sp)
20012930:	4356                	lw	t1,84(sp)
20012932:	43c6                	lw	t2,80(sp)
20012934:	4436                	lw	s0,76(sp)
20012936:	4526                	lw	a0,72(sp)
20012938:	4596                	lw	a1,68(sp)
2001293a:	4606                	lw	a2,64(sp)
2001293c:	56f2                	lw	a3,60(sp)
2001293e:	5762                	lw	a4,56(sp)
20012940:	57d2                	lw	a5,52(sp)
20012942:	5842                	lw	a6,48(sp)
20012944:	58b2                	lw	a7,44(sp)
20012946:	5e22                	lw	t3,40(sp)
20012948:	5e92                	lw	t4,36(sp)
2001294a:	5f02                	lw	t5,32(sp)
2001294c:	4ff2                	lw	t6,28(sp)
2001294e:	6125                	addi	sp,sp,96
20012950:	30200073          	mret

20012954 <__metal_controller_interrupt_vector_mode>:
__metal_controller_interrupt_vector_mode():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:299

metal_vector_mode __metal_controller_interrupt_vector_mode(void) {
20012954:	1101                	addi	sp,sp,-32
20012956:	ce22                	sw	s0,28(sp)
20012958:	1000                	addi	s0,sp,32
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:302
    uintptr_t val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
2001295a:	305027f3          	csrr	a5,mtvec
2001295e:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:303
    val &= METAL_MTVEC_MASK;
20012962:	fec42783          	lw	a5,-20(s0)
20012966:	03f7f793          	andi	a5,a5,63
2001296a:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:305

    switch (val) {
2001296e:	fec42703          	lw	a4,-20(s0)
20012972:	4789                	li	a5,2
20012974:	00f70d63          	beq	a4,a5,2001298e <__metal_controller_interrupt_vector_mode+0x3a>
20012978:	fec42703          	lw	a4,-20(s0)
2001297c:	478d                	li	a5,3
2001297e:	00f70a63          	beq	a4,a5,20012992 <__metal_controller_interrupt_vector_mode+0x3e>
20012982:	fec42703          	lw	a4,-20(s0)
20012986:	4785                	li	a5,1
20012988:	00f70763          	beq	a4,a5,20012996 <__metal_controller_interrupt_vector_mode+0x42>
2001298c:	a039                	j	2001299a <__metal_controller_interrupt_vector_mode+0x46>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:307
    case METAL_MTVEC_CLIC:
        return METAL_SELECTIVE_VECTOR_MODE;
2001298e:	478d                	li	a5,3
20012990:	a031                	j	2001299c <__metal_controller_interrupt_vector_mode+0x48>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:309
    case METAL_MTVEC_CLIC_VECTORED:
        return METAL_HARDWARE_VECTOR_MODE;
20012992:	4791                	li	a5,4
20012994:	a021                	j	2001299c <__metal_controller_interrupt_vector_mode+0x48>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:311
    case METAL_MTVEC_VECTORED:
        return METAL_VECTOR_MODE;
20012996:	4785                	li	a5,1
20012998:	a011                	j	2001299c <__metal_controller_interrupt_vector_mode+0x48>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:313
    }
    return METAL_DIRECT_MODE;
2001299a:	4781                	li	a5,0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:314
}
2001299c:	853e                	mv	a0,a5
2001299e:	4472                	lw	s0,28(sp)
200129a0:	6105                	addi	sp,sp,32
200129a2:	8082                	ret

200129a4 <__metal_controller_interrupt_vector>:
__metal_controller_interrupt_vector():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:317

void __metal_controller_interrupt_vector(metal_vector_mode mode,
                                         void *vec_table) {
200129a4:	7179                	addi	sp,sp,-48
200129a6:	d622                	sw	s0,44(sp)
200129a8:	1800                	addi	s0,sp,48
200129aa:	fca42e23          	sw	a0,-36(s0)
200129ae:	fcb42c23          	sw	a1,-40(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:320
    uintptr_t trap_entry, val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
200129b2:	305027f3          	csrr	a5,mtvec
200129b6:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:321
    val &= ~(METAL_MTVEC_CLIC_VECTORED | METAL_MTVEC_CLIC_RESERVED);
200129ba:	fec42783          	lw	a5,-20(s0)
200129be:	fc07f793          	andi	a5,a5,-64
200129c2:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:322
    trap_entry = (uintptr_t)vec_table;
200129c6:	fd842783          	lw	a5,-40(s0)
200129ca:	fef42423          	sw	a5,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:324

    switch (mode) {
200129ce:	fdc42703          	lw	a4,-36(s0)
200129d2:	4791                	li	a5,4
200129d4:	06e7e063          	bltu	a5,a4,20012a34 <__metal_controller_interrupt_vector+0x90>
200129d8:	fdc42783          	lw	a5,-36(s0)
200129dc:	00279713          	slli	a4,a5,0x2
200129e0:	200107b7          	lui	a5,0x20010
200129e4:	3b078793          	addi	a5,a5,944 # 200103b0 <__metal_driver_vtable_riscv_clint0+0x64>
200129e8:	97ba                	add	a5,a5,a4
200129ea:	439c                	lw	a5,0(a5)
200129ec:	8782                	jr	a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:327
    case METAL_SELECTIVE_NONVECTOR_MODE:
    case METAL_SELECTIVE_VECTOR_MODE:
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
200129ee:	fe842783          	lw	a5,-24(s0)
200129f2:	30779073          	csrw	mtvt,a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:328
        __asm__ volatile("csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC));
200129f6:	fec42783          	lw	a5,-20(s0)
200129fa:	0027e793          	ori	a5,a5,2
200129fe:	30579073          	csrw	mtvec,a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:329
        break;
20012a02:	a80d                	j	20012a34 <__metal_controller_interrupt_vector+0x90>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:331
    case METAL_HARDWARE_VECTOR_MODE:
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
20012a04:	fe842783          	lw	a5,-24(s0)
20012a08:	30779073          	csrw	mtvt,a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:333
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC_VECTORED));
20012a0c:	fec42783          	lw	a5,-20(s0)
20012a10:	0037e793          	ori	a5,a5,3
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:332
        __asm__ volatile(
20012a14:	30579073          	csrw	mtvec,a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:334
        break;
20012a18:	a831                	j	20012a34 <__metal_controller_interrupt_vector+0x90>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:337
    case METAL_VECTOR_MODE:
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(trap_entry | METAL_MTVEC_VECTORED));
20012a1a:	fe842783          	lw	a5,-24(s0)
20012a1e:	0017e793          	ori	a5,a5,1
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:336
        __asm__ volatile(
20012a22:	30579073          	csrw	mtvec,a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:338
        break;
20012a26:	a039                	j	20012a34 <__metal_controller_interrupt_vector+0x90>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:341
    case METAL_DIRECT_MODE:
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
20012a28:	fe842783          	lw	a5,-24(s0)
20012a2c:	9bf1                	andi	a5,a5,-4
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:340
        __asm__ volatile(
20012a2e:	30579073          	csrw	mtvec,a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:342
        break;
20012a32:	0001                	nop
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:344
    }
}
20012a34:	0001                	nop
20012a36:	5432                	lw	s0,44(sp)
20012a38:	6145                	addi	sp,sp,48
20012a3a:	8082                	ret

20012a3c <__metal_valid_interrupt_id>:
__metal_valid_interrupt_id():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:346

int __metal_valid_interrupt_id(int id) {
20012a3c:	1101                	addi	sp,sp,-32
20012a3e:	ce22                	sw	s0,28(sp)
20012a40:	1000                	addi	s0,sp,32
20012a42:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
20012a46:	fec42703          	lw	a4,-20(s0)
20012a4a:	47ad                	li	a5,11
20012a4c:	04f70263          	beq	a4,a5,20012a90 <__metal_valid_interrupt_id+0x54>
20012a50:	fec42703          	lw	a4,-20(s0)
20012a54:	47ad                	li	a5,11
20012a56:	00e7cd63          	blt	a5,a4,20012a70 <__metal_valid_interrupt_id+0x34>
20012a5a:	fec42703          	lw	a4,-20(s0)
20012a5e:	478d                	li	a5,3
20012a60:	02f70863          	beq	a4,a5,20012a90 <__metal_valid_interrupt_id+0x54>
20012a64:	fec42703          	lw	a4,-20(s0)
20012a68:	479d                	li	a5,7
20012a6a:	02f70363          	beq	a4,a5,20012a90 <__metal_valid_interrupt_id+0x54>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:370
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
    case METAL_INTERRUPT_ID_BEU:
        return 1;
    default:
        break;
20012a6e:	a01d                	j	20012a94 <__metal_valid_interrupt_id+0x58>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
20012a70:	fec42703          	lw	a4,-20(s0)
20012a74:	47c1                	li	a5,16
20012a76:	00f74f63          	blt	a4,a5,20012a94 <__metal_valid_interrupt_id+0x58>
20012a7a:	fec42703          	lw	a4,-20(s0)
20012a7e:	47fd                	li	a5,31
20012a80:	00e7d863          	bge	a5,a4,20012a90 <__metal_valid_interrupt_id+0x54>
20012a84:	fec42703          	lw	a4,-20(s0)
20012a88:	08000793          	li	a5,128
20012a8c:	00f71463          	bne	a4,a5,20012a94 <__metal_valid_interrupt_id+0x58>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:368
        return 1;
20012a90:	4785                	li	a5,1
20012a92:	a019                	j	20012a98 <__metal_valid_interrupt_id+0x5c>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:370
        break;
20012a94:	0001                	nop
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:373
    }

    return 0;
20012a96:	4781                	li	a5,0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:374
}
20012a98:	853e                	mv	a0,a5
20012a9a:	4472                	lw	s0,28(sp)
20012a9c:	6105                	addi	sp,sp,32
20012a9e:	8082                	ret

20012aa0 <__metal_local_interrupt_enable>:
__metal_local_interrupt_enable():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:377

int __metal_local_interrupt_enable(struct metal_interrupt *controller,
                                   metal_interrupt_id_e id, int enable) {
20012aa0:	7179                	addi	sp,sp,-48
20012aa2:	d606                	sw	ra,44(sp)
20012aa4:	d422                	sw	s0,40(sp)
20012aa6:	1800                	addi	s0,sp,48
20012aa8:	fca42e23          	sw	a0,-36(s0)
20012aac:	fcb42c23          	sw	a1,-40(s0)
20012ab0:	fcc42a23          	sw	a2,-44(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:378
    int rc = 0;
20012ab4:	fe042623          	sw	zero,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:380

    if (!controller) {
20012ab8:	fdc42783          	lw	a5,-36(s0)
20012abc:	e399                	bnez	a5,20012ac2 <__metal_local_interrupt_enable+0x22>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:381
        return -1;
20012abe:	57fd                	li	a5,-1
20012ac0:	a849                	j	20012b52 <__metal_local_interrupt_enable+0xb2>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:384
    }

    switch (id) {
20012ac2:	fd842703          	lw	a4,-40(s0)
20012ac6:	47fd                	li	a5,31
20012ac8:	08e7e063          	bltu	a5,a4,20012b48 <__metal_local_interrupt_enable+0xa8>
20012acc:	fd842783          	lw	a5,-40(s0)
20012ad0:	00279713          	slli	a4,a5,0x2
20012ad4:	200107b7          	lui	a5,0x20010
20012ad8:	3c478793          	addi	a5,a5,964 # 200103c4 <__metal_driver_vtable_riscv_clint0+0x78>
20012adc:	97ba                	add	a5,a5,a4
20012ade:	439c                	lw	a5,0(a5)
20012ae0:	8782                	jr	a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:386
    case METAL_INTERRUPT_ID_BASE:
        if (enable) {
20012ae2:	fd442783          	lw	a5,-44(s0)
20012ae6:	c781                	beqz	a5,20012aee <__metal_local_interrupt_enable+0x4e>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:387
            __metal_interrupt_global_enable();
20012ae8:	f1dfe0ef          	jal	ra,20011a04 <__metal_interrupt_global_enable>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:391
        } else {
            __metal_interrupt_global_disable();
        }
        break;
20012aec:	a08d                	j	20012b4e <__metal_local_interrupt_enable+0xae>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:389
            __metal_interrupt_global_disable();
20012aee:	f2ffe0ef          	jal	ra,20011a1c <__metal_interrupt_global_disable>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:391
        break;
20012af2:	a8b1                	j	20012b4e <__metal_local_interrupt_enable+0xae>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:393
    case METAL_INTERRUPT_ID_SW:
        if (enable) {
20012af4:	fd442783          	lw	a5,-44(s0)
20012af8:	c781                	beqz	a5,20012b00 <__metal_local_interrupt_enable+0x60>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:394
            __metal_interrupt_software_enable();
20012afa:	f3bfe0ef          	jal	ra,20011a34 <__metal_interrupt_software_enable>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:398
        } else {
            __metal_interrupt_software_disable();
        }
        break;
20012afe:	a881                	j	20012b4e <__metal_local_interrupt_enable+0xae>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:396
            __metal_interrupt_software_disable();
20012b00:	f4dfe0ef          	jal	ra,20011a4c <__metal_interrupt_software_disable>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:398
        break;
20012b04:	a0a9                	j	20012b4e <__metal_local_interrupt_enable+0xae>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:400
    case METAL_INTERRUPT_ID_TMR:
        if (enable) {
20012b06:	fd442783          	lw	a5,-44(s0)
20012b0a:	c781                	beqz	a5,20012b12 <__metal_local_interrupt_enable+0x72>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:401
            __metal_interrupt_timer_enable();
20012b0c:	f59fe0ef          	jal	ra,20011a64 <__metal_interrupt_timer_enable>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:405
        } else {
            __metal_interrupt_timer_disable();
        }
        break;
20012b10:	a83d                	j	20012b4e <__metal_local_interrupt_enable+0xae>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:403
            __metal_interrupt_timer_disable();
20012b12:	f6dfe0ef          	jal	ra,20011a7e <__metal_interrupt_timer_disable>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:405
        break;
20012b16:	a825                	j	20012b4e <__metal_local_interrupt_enable+0xae>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:407
    case METAL_INTERRUPT_ID_EXT:
        if (enable) {
20012b18:	fd442783          	lw	a5,-44(s0)
20012b1c:	c781                	beqz	a5,20012b24 <__metal_local_interrupt_enable+0x84>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:408
            __metal_interrupt_external_enable();
20012b1e:	f7bfe0ef          	jal	ra,20011a98 <__metal_interrupt_external_enable>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:412
        } else {
            __metal_interrupt_external_disable();
        }
        break;
20012b22:	a035                	j	20012b4e <__metal_local_interrupt_enable+0xae>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:410
            __metal_interrupt_external_disable();
20012b24:	f91fe0ef          	jal	ra,20011ab4 <__metal_interrupt_external_disable>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:412
        break;
20012b28:	a01d                	j	20012b4e <__metal_local_interrupt_enable+0xae>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:429
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        if (enable) {
20012b2a:	fd442783          	lw	a5,-44(s0)
20012b2e:	c799                	beqz	a5,20012b3c <__metal_local_interrupt_enable+0x9c>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:430
            __metal_interrupt_local_enable(id);
20012b30:	fd842783          	lw	a5,-40(s0)
20012b34:	853e                	mv	a0,a5
20012b36:	f9bfe0ef          	jal	ra,20011ad0 <__metal_interrupt_local_enable>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:434
        } else {
            __metal_interrupt_local_disable(id);
        }
        break;
20012b3a:	a811                	j	20012b4e <__metal_local_interrupt_enable+0xae>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:432
            __metal_interrupt_local_disable(id);
20012b3c:	fd842783          	lw	a5,-40(s0)
20012b40:	853e                	mv	a0,a5
20012b42:	fbbfe0ef          	jal	ra,20011afc <__metal_interrupt_local_disable>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:434
        break;
20012b46:	a021                	j	20012b4e <__metal_local_interrupt_enable+0xae>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:436
    default:
        rc = -1;
20012b48:	57fd                	li	a5,-1
20012b4a:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:438
    }
    return rc;
20012b4e:	fec42783          	lw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:439
}
20012b52:	853e                	mv	a0,a5
20012b54:	50b2                	lw	ra,44(sp)
20012b56:	5422                	lw	s0,40(sp)
20012b58:	6145                	addi	sp,sp,48
20012b5a:	8082                	ret

20012b5c <__metal_exception_register>:
__metal_exception_register():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:442

int __metal_exception_register(struct metal_interrupt *controller, int ecode,
                               metal_exception_handler_t isr) {
20012b5c:	7179                	addi	sp,sp,-48
20012b5e:	d622                	sw	s0,44(sp)
20012b60:	1800                	addi	s0,sp,48
20012b62:	fca42e23          	sw	a0,-36(s0)
20012b66:	fcb42c23          	sw	a1,-40(s0)
20012b6a:	fcc42a23          	sw	a2,-44(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:443
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20012b6e:	fdc42783          	lw	a5,-36(s0)
20012b72:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:445

    if ((ecode < METAL_MAX_EXCEPTION_CODE) && isr) {
20012b76:	fd842703          	lw	a4,-40(s0)
20012b7a:	47ad                	li	a5,11
20012b7c:	02e7c263          	blt	a5,a4,20012ba0 <__metal_exception_register+0x44>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:445 (discriminator 1)
20012b80:	fd442783          	lw	a5,-44(s0)
20012b84:	cf91                	beqz	a5,20012ba0 <__metal_exception_register+0x44>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:446
        intc->metal_exception_table[ecode] = isr;
20012b86:	fec42703          	lw	a4,-20(s0)
20012b8a:	fd842783          	lw	a5,-40(s0)
20012b8e:	0e878793          	addi	a5,a5,232
20012b92:	078a                	slli	a5,a5,0x2
20012b94:	97ba                	add	a5,a5,a4
20012b96:	fd442703          	lw	a4,-44(s0)
20012b9a:	c398                	sw	a4,0(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:447
        return 0;
20012b9c:	4781                	li	a5,0
20012b9e:	a011                	j	20012ba2 <__metal_exception_register+0x46>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:449
    }
    return -1;
20012ba0:	57fd                	li	a5,-1
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:450
}
20012ba2:	853e                	mv	a0,a5
20012ba4:	5432                	lw	s0,44(sp)
20012ba6:	6145                	addi	sp,sp,48
20012ba8:	8082                	ret

20012baa <__metal_driver_riscv_cpu_controller_interrupt_init>:
__metal_driver_riscv_cpu_controller_interrupt_init():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:454

extern void early_trap_vector(void);
void __metal_driver_riscv_cpu_controller_interrupt_init(
    struct metal_interrupt *controller) {
20012baa:	7179                	addi	sp,sp,-48
20012bac:	d606                	sw	ra,44(sp)
20012bae:	d422                	sw	s0,40(sp)
20012bb0:	1800                	addi	s0,sp,48
20012bb2:	fca42e23          	sw	a0,-36(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:455
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20012bb6:	fdc42783          	lw	a5,-36(s0)
20012bba:	fef42223          	sw	a5,-28(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:457

    if (!intc->init_done) {
20012bbe:	fe442783          	lw	a5,-28(s0)
20012bc2:	43dc                	lw	a5,4(a5)
20012bc4:	efdd                	bnez	a5,20012c82 <__metal_driver_riscv_cpu_controller_interrupt_init+0xd8>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:459
        /* Default to use direct interrupt, setup sw cb table*/
        for (int i = 0; i < METAL_MAX_MI; i++) {
20012bc6:	fe042623          	sw	zero,-20(s0)
20012bca:	a0b9                	j	20012c18 <__metal_driver_riscv_cpu_controller_interrupt_init+0x6e>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:460 (discriminator 3)
            intc->metal_int_table[i].handler = NULL;
20012bcc:	fe442683          	lw	a3,-28(s0)
20012bd0:	fec42703          	lw	a4,-20(s0)
20012bd4:	87ba                	mv	a5,a4
20012bd6:	0786                	slli	a5,a5,0x1
20012bd8:	97ba                	add	a5,a5,a4
20012bda:	078e                	slli	a5,a5,0x3
20012bdc:	97b6                	add	a5,a5,a3
20012bde:	0807a823          	sw	zero,144(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:461 (discriminator 3)
            intc->metal_int_table[i].sub_int = NULL;
20012be2:	fe442683          	lw	a3,-28(s0)
20012be6:	fec42703          	lw	a4,-20(s0)
20012bea:	87ba                	mv	a5,a4
20012bec:	0786                	slli	a5,a5,0x1
20012bee:	97ba                	add	a5,a5,a4
20012bf0:	078e                	slli	a5,a5,0x3
20012bf2:	97b6                	add	a5,a5,a3
20012bf4:	0807aa23          	sw	zero,148(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:462 (discriminator 3)
            intc->metal_int_table[i].exint_data = NULL;
20012bf8:	fe442683          	lw	a3,-28(s0)
20012bfc:	fec42703          	lw	a4,-20(s0)
20012c00:	87ba                	mv	a5,a4
20012c02:	0786                	slli	a5,a5,0x1
20012c04:	97ba                	add	a5,a5,a4
20012c06:	078e                	slli	a5,a5,0x3
20012c08:	97b6                	add	a5,a5,a3
20012c0a:	0807ac23          	sw	zero,152(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 3)
        for (int i = 0; i < METAL_MAX_MI; i++) {
20012c0e:	fec42783          	lw	a5,-20(s0)
20012c12:	0785                	addi	a5,a5,1
20012c14:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 1)
20012c18:	fec42703          	lw	a4,-20(s0)
20012c1c:	47fd                	li	a5,31
20012c1e:	fae7d7e3          	bge	a5,a4,20012bcc <__metal_driver_riscv_cpu_controller_interrupt_init+0x22>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:465
        }

        for (int i = 0; i < METAL_MAX_ME; i++) {
20012c22:	fe042423          	sw	zero,-24(s0)
20012c26:	a01d                	j	20012c4c <__metal_driver_riscv_cpu_controller_interrupt_init+0xa2>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:466 (discriminator 3)
            intc->metal_exception_table[i] = __metal_default_exception_handler;
20012c28:	fe442703          	lw	a4,-28(s0)
20012c2c:	fe842783          	lw	a5,-24(s0)
20012c30:	0e878793          	addi	a5,a5,232
20012c34:	078a                	slli	a5,a5,0x2
20012c36:	97ba                	add	a5,a5,a4
20012c38:	20012737          	lui	a4,0x20012
20012c3c:	b2870713          	addi	a4,a4,-1240 # 20011b28 <__metal_default_exception_handler>
20012c40:	c398                	sw	a4,0(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 3)
        for (int i = 0; i < METAL_MAX_ME; i++) {
20012c42:	fe842783          	lw	a5,-24(s0)
20012c46:	0785                	addi	a5,a5,1
20012c48:	fef42423          	sw	a5,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 1)
20012c4c:	fe842703          	lw	a4,-24(s0)
20012c50:	47ad                	li	a5,11
20012c52:	fce7dbe3          	bge	a5,a4,20012c28 <__metal_driver_riscv_cpu_controller_interrupt_init+0x7e>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:475
         * Set the real trap handler if the value of mtvec is equal to
         * early_trap_vector. If mtvec is not equal to early_trap_vector,
         * that means user has own trap handler, then we don't overwrite it.
         */
        uintptr_t mtvec;
        __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
20012c56:	305027f3          	csrr	a5,mtvec
20012c5a:	fef42023          	sw	a5,-32(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:476
        if (mtvec == (uintptr_t)&early_trap_vector) {
20012c5e:	200107b7          	lui	a5,0x20010
20012c62:	17878793          	addi	a5,a5,376 # 20010178 <early_trap_vector>
20012c66:	fe042703          	lw	a4,-32(s0)
20012c6a:	00f71863          	bne	a4,a5,20012c7a <__metal_driver_riscv_cpu_controller_interrupt_init+0xd0>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:477
            __metal_controller_interrupt_vector(
20012c6e:	200127b7          	lui	a5,0x20012
20012c72:	e0078593          	addi	a1,a5,-512 # 20011e00 <__metal_exception_handler>
20012c76:	4501                	li	a0,0
20012c78:	3335                	jal	200129a4 <__metal_controller_interrupt_vector>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:481
                METAL_DIRECT_MODE,
                (void *)(uintptr_t)&__metal_exception_handler);
        }
        intc->init_done = 1;
20012c7a:	fe442783          	lw	a5,-28(s0)
20012c7e:	4705                	li	a4,1
20012c80:	c3d8                	sw	a4,4(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:483
    }
}
20012c82:	0001                	nop
20012c84:	50b2                	lw	ra,44(sp)
20012c86:	5422                	lw	s0,40(sp)
20012c88:	6145                	addi	sp,sp,48
20012c8a:	8082                	ret

20012c8c <__metal_driver_riscv_cpu_controller_interrupt_register>:
__metal_driver_riscv_cpu_controller_interrupt_register():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:487

int __metal_driver_riscv_cpu_controller_interrupt_register(
    struct metal_interrupt *controller, int id, metal_interrupt_handler_t isr,
    void *priv) {
20012c8c:	7179                	addi	sp,sp,-48
20012c8e:	d606                	sw	ra,44(sp)
20012c90:	d422                	sw	s0,40(sp)
20012c92:	1800                	addi	s0,sp,48
20012c94:	fca42e23          	sw	a0,-36(s0)
20012c98:	fcb42c23          	sw	a1,-40(s0)
20012c9c:	fcc42a23          	sw	a2,-44(s0)
20012ca0:	fcd42823          	sw	a3,-48(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:488
    int rc = 0;
20012ca4:	fe042623          	sw	zero,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:489
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20012ca8:	fdc42783          	lw	a5,-36(s0)
20012cac:	fef42423          	sw	a5,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:491

    if (!__metal_valid_interrupt_id(id)) {
20012cb0:	fd842503          	lw	a0,-40(s0)
20012cb4:	3361                	jal	20012a3c <__metal_valid_interrupt_id>
20012cb6:	87aa                	mv	a5,a0
20012cb8:	e399                	bnez	a5,20012cbe <__metal_driver_riscv_cpu_controller_interrupt_register+0x32>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:492
        return -11;
20012cba:	57d5                	li	a5,-11
20012cbc:	aa71                	j	20012e58 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:494
    }
    if ((id == METAL_INTERRUPT_ID_BEU) &&
20012cbe:	fd842703          	lw	a4,-40(s0)
20012cc2:	08000793          	li	a5,128
20012cc6:	00f71763          	bne	a4,a5,20012cd4 <__metal_driver_riscv_cpu_controller_interrupt_register+0x48>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:495 (discriminator 1)
        (__metal_controller_interrupt_vector_mode() != METAL_DIRECT_MODE)) {
20012cca:	3169                	jal	20012954 <__metal_controller_interrupt_vector_mode>
20012ccc:	87aa                	mv	a5,a0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:494 (discriminator 1)
    if ((id == METAL_INTERRUPT_ID_BEU) &&
20012cce:	c399                	beqz	a5,20012cd4 <__metal_driver_riscv_cpu_controller_interrupt_register+0x48>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:498
        /* Only allow registration of the bus error unit interrupt if
         * interrupt vectoring if off */
        return -13;
20012cd0:	57cd                	li	a5,-13
20012cd2:	a259                	j	20012e58 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:501
    }

    if (isr) {
20012cd4:	fd442783          	lw	a5,-44(s0)
20012cd8:	cfb9                	beqz	a5,20012d36 <__metal_driver_riscv_cpu_controller_interrupt_register+0xaa>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:502
        if (id == METAL_INTERRUPT_ID_BEU) {
20012cda:	fd842703          	lw	a4,-40(s0)
20012cde:	08000793          	li	a5,128
20012ce2:	00f71f63          	bne	a4,a5,20012d00 <__metal_driver_riscv_cpu_controller_interrupt_register+0x74>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:503
            intc->metal_int_beu.handler = isr;
20012ce6:	fe842783          	lw	a5,-24(s0)
20012cea:	fd442703          	lw	a4,-44(s0)
20012cee:	38e7a823          	sw	a4,912(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:504
            intc->metal_int_beu.exint_data = priv;
20012cf2:	fe842783          	lw	a5,-24(s0)
20012cf6:	fd042703          	lw	a4,-48(s0)
20012cfa:	38e7ac23          	sw	a4,920(a5)
20012cfe:	aa99                	j	20012e54 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:506
        } else {
            intc->metal_int_table[id].handler = isr;
20012d00:	fe842683          	lw	a3,-24(s0)
20012d04:	fd842703          	lw	a4,-40(s0)
20012d08:	87ba                	mv	a5,a4
20012d0a:	0786                	slli	a5,a5,0x1
20012d0c:	97ba                	add	a5,a5,a4
20012d0e:	078e                	slli	a5,a5,0x3
20012d10:	97b6                	add	a5,a5,a3
20012d12:	fd442703          	lw	a4,-44(s0)
20012d16:	08e7a823          	sw	a4,144(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:507
            intc->metal_int_table[id].exint_data = priv;
20012d1a:	fe842683          	lw	a3,-24(s0)
20012d1e:	fd842703          	lw	a4,-40(s0)
20012d22:	87ba                	mv	a5,a4
20012d24:	0786                	slli	a5,a5,0x1
20012d26:	97ba                	add	a5,a5,a4
20012d28:	078e                	slli	a5,a5,0x3
20012d2a:	97b6                	add	a5,a5,a3
20012d2c:	fd042703          	lw	a4,-48(s0)
20012d30:	08e7ac23          	sw	a4,152(a5)
20012d34:	a205                	j	20012e54 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:510
        }
    } else {
        switch (id) {
20012d36:	fd842703          	lw	a4,-40(s0)
20012d3a:	47ad                	li	a5,11
20012d3c:	0cf70c63          	beq	a4,a5,20012e14 <__metal_driver_riscv_cpu_controller_interrupt_register+0x188>
20012d40:	fd842703          	lw	a4,-40(s0)
20012d44:	47ad                	li	a5,11
20012d46:	00e7cd63          	blt	a5,a4,20012d60 <__metal_driver_riscv_cpu_controller_interrupt_register+0xd4>
20012d4a:	fd842703          	lw	a4,-40(s0)
20012d4e:	478d                	li	a5,3
20012d50:	02f70963          	beq	a4,a5,20012d82 <__metal_driver_riscv_cpu_controller_interrupt_register+0xf6>
20012d54:	fd842703          	lw	a4,-40(s0)
20012d58:	479d                	li	a5,7
20012d5a:	06f70163          	beq	a4,a5,20012dbc <__metal_driver_riscv_cpu_controller_interrupt_register+0x130>
20012d5e:	a8c5                	j	20012e4e <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c2>
20012d60:	fd842703          	lw	a4,-40(s0)
20012d64:	47c1                	li	a5,16
20012d66:	0ef74463          	blt	a4,a5,20012e4e <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c2>
20012d6a:	fd842703          	lw	a4,-40(s0)
20012d6e:	47fd                	li	a5,31
20012d70:	0ae7d263          	bge	a5,a4,20012e14 <__metal_driver_riscv_cpu_controller_interrupt_register+0x188>
20012d74:	fd842703          	lw	a4,-40(s0)
20012d78:	08000793          	li	a5,128
20012d7c:	06f70d63          	beq	a4,a5,20012df6 <__metal_driver_riscv_cpu_controller_interrupt_register+0x16a>
20012d80:	a0f9                	j	20012e4e <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c2>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:512
        case METAL_INTERRUPT_ID_SW:
            intc->metal_int_table[id].handler = __metal_default_sw_handler;
20012d82:	fe842683          	lw	a3,-24(s0)
20012d86:	fd842703          	lw	a4,-40(s0)
20012d8a:	87ba                	mv	a5,a4
20012d8c:	0786                	slli	a5,a5,0x1
20012d8e:	97ba                	add	a5,a5,a4
20012d90:	078e                	slli	a5,a5,0x3
20012d92:	97b6                	add	a5,a5,a3
20012d94:	20012737          	lui	a4,0x20012
20012d98:	c1870713          	addi	a4,a4,-1000 # 20011c18 <__metal_default_sw_handler>
20012d9c:	08e7a823          	sw	a4,144(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:513
            intc->metal_int_table[id].sub_int = priv;
20012da0:	fe842683          	lw	a3,-24(s0)
20012da4:	fd842703          	lw	a4,-40(s0)
20012da8:	87ba                	mv	a5,a4
20012daa:	0786                	slli	a5,a5,0x1
20012dac:	97ba                	add	a5,a5,a4
20012dae:	078e                	slli	a5,a5,0x3
20012db0:	97b6                	add	a5,a5,a3
20012db2:	fd042703          	lw	a4,-48(s0)
20012db6:	08e7aa23          	sw	a4,148(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:514
            break;
20012dba:	a869                	j	20012e54 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:516
        case METAL_INTERRUPT_ID_TMR:
            intc->metal_int_table[id].handler = __metal_default_timer_handler;
20012dbc:	fe842683          	lw	a3,-24(s0)
20012dc0:	fd842703          	lw	a4,-40(s0)
20012dc4:	87ba                	mv	a5,a4
20012dc6:	0786                	slli	a5,a5,0x1
20012dc8:	97ba                	add	a5,a5,a4
20012dca:	078e                	slli	a5,a5,0x3
20012dcc:	97b6                	add	a5,a5,a3
20012dce:	20012737          	lui	a4,0x20012
20012dd2:	d2870713          	addi	a4,a4,-728 # 20011d28 <__metal_default_timer_handler>
20012dd6:	08e7a823          	sw	a4,144(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:517
            intc->metal_int_table[id].sub_int = priv;
20012dda:	fe842683          	lw	a3,-24(s0)
20012dde:	fd842703          	lw	a4,-40(s0)
20012de2:	87ba                	mv	a5,a4
20012de4:	0786                	slli	a5,a5,0x1
20012de6:	97ba                	add	a5,a5,a4
20012de8:	078e                	slli	a5,a5,0x3
20012dea:	97b6                	add	a5,a5,a3
20012dec:	fd042703          	lw	a4,-48(s0)
20012df0:	08e7aa23          	sw	a4,148(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:518
            break;
20012df4:	a085                	j	20012e54 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:520
        case METAL_INTERRUPT_ID_BEU:
            intc->metal_int_beu.handler = __metal_default_beu_handler;
20012df6:	fe842783          	lw	a5,-24(s0)
20012dfa:	20012737          	lui	a4,0x20012
20012dfe:	d1270713          	addi	a4,a4,-750 # 20011d12 <__metal_default_beu_handler>
20012e02:	38e7a823          	sw	a4,912(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:521
            intc->metal_int_beu.exint_data = priv;
20012e06:	fe842783          	lw	a5,-24(s0)
20012e0a:	fd042703          	lw	a4,-48(s0)
20012e0e:	38e7ac23          	sw	a4,920(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:522
            break;
20012e12:	a089                	j	20012e54 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:540
        case METAL_INTERRUPT_ID_LC11:
        case METAL_INTERRUPT_ID_LC12:
        case METAL_INTERRUPT_ID_LC13:
        case METAL_INTERRUPT_ID_LC14:
        case METAL_INTERRUPT_ID_LC15:
            intc->metal_int_table[id].handler =
20012e14:	fe842683          	lw	a3,-24(s0)
20012e18:	fd842703          	lw	a4,-40(s0)
20012e1c:	87ba                	mv	a5,a4
20012e1e:	0786                	slli	a5,a5,0x1
20012e20:	97ba                	add	a5,a5,a4
20012e22:	078e                	slli	a5,a5,0x3
20012e24:	97b6                	add	a5,a5,a3
20012e26:	20012737          	lui	a4,0x20012
20012e2a:	b4070713          	addi	a4,a4,-1216 # 20011b40 <__metal_default_interrupt_handler>
20012e2e:	08e7a823          	sw	a4,144(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:542
                __metal_default_interrupt_handler;
            intc->metal_int_table[id].sub_int = priv;
20012e32:	fe842683          	lw	a3,-24(s0)
20012e36:	fd842703          	lw	a4,-40(s0)
20012e3a:	87ba                	mv	a5,a4
20012e3c:	0786                	slli	a5,a5,0x1
20012e3e:	97ba                	add	a5,a5,a4
20012e40:	078e                	slli	a5,a5,0x3
20012e42:	97b6                	add	a5,a5,a3
20012e44:	fd042703          	lw	a4,-48(s0)
20012e48:	08e7aa23          	sw	a4,148(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:543
            break;
20012e4c:	a021                	j	20012e54 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:545
        default:
            rc = -12;
20012e4e:	57d1                	li	a5,-12
20012e50:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:548
        }
    }
    return rc;
20012e54:	fec42783          	lw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:549
}
20012e58:	853e                	mv	a0,a5
20012e5a:	50b2                	lw	ra,44(sp)
20012e5c:	5422                	lw	s0,40(sp)
20012e5e:	6145                	addi	sp,sp,48
20012e60:	8082                	ret

20012e62 <__metal_driver_riscv_cpu_controller_interrupt_enable>:
__metal_driver_riscv_cpu_controller_interrupt_enable():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:552

int __metal_driver_riscv_cpu_controller_interrupt_enable(
    struct metal_interrupt *controller, int id) {
20012e62:	1101                	addi	sp,sp,-32
20012e64:	ce06                	sw	ra,28(sp)
20012e66:	cc22                	sw	s0,24(sp)
20012e68:	1000                	addi	s0,sp,32
20012e6a:	fea42623          	sw	a0,-20(s0)
20012e6e:	feb42423          	sw	a1,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:553
    return __metal_local_interrupt_enable(controller, id, METAL_ENABLE);
20012e72:	fe842783          	lw	a5,-24(s0)
20012e76:	4605                	li	a2,1
20012e78:	85be                	mv	a1,a5
20012e7a:	fec42503          	lw	a0,-20(s0)
20012e7e:	310d                	jal	20012aa0 <__metal_local_interrupt_enable>
20012e80:	87aa                	mv	a5,a0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:554
}
20012e82:	853e                	mv	a0,a5
20012e84:	40f2                	lw	ra,28(sp)
20012e86:	4462                	lw	s0,24(sp)
20012e88:	6105                	addi	sp,sp,32
20012e8a:	8082                	ret

20012e8c <__metal_driver_riscv_cpu_controller_interrupt_disable>:
__metal_driver_riscv_cpu_controller_interrupt_disable():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:557

int __metal_driver_riscv_cpu_controller_interrupt_disable(
    struct metal_interrupt *controller, int id) {
20012e8c:	1101                	addi	sp,sp,-32
20012e8e:	ce06                	sw	ra,28(sp)
20012e90:	cc22                	sw	s0,24(sp)
20012e92:	1000                	addi	s0,sp,32
20012e94:	fea42623          	sw	a0,-20(s0)
20012e98:	feb42423          	sw	a1,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:558
    return __metal_local_interrupt_enable(controller, id, METAL_DISABLE);
20012e9c:	fe842783          	lw	a5,-24(s0)
20012ea0:	4601                	li	a2,0
20012ea2:	85be                	mv	a1,a5
20012ea4:	fec42503          	lw	a0,-20(s0)
20012ea8:	3ee5                	jal	20012aa0 <__metal_local_interrupt_enable>
20012eaa:	87aa                	mv	a5,a0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:559
}
20012eac:	853e                	mv	a0,a5
20012eae:	40f2                	lw	ra,28(sp)
20012eb0:	4462                	lw	s0,24(sp)
20012eb2:	6105                	addi	sp,sp,32
20012eb4:	8082                	ret

20012eb6 <__metal_driver_riscv_cpu_controller_get_vector_mode>:
__metal_driver_riscv_cpu_controller_get_vector_mode():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:591
    }
    return -1;
}

metal_vector_mode __metal_driver_riscv_cpu_controller_get_vector_mode(
    struct metal_interrupt *controller) {
20012eb6:	1101                	addi	sp,sp,-32
20012eb8:	ce06                	sw	ra,28(sp)
20012eba:	cc22                	sw	s0,24(sp)
20012ebc:	1000                	addi	s0,sp,32
20012ebe:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:592
    return __metal_controller_interrupt_vector_mode();
20012ec2:	3c49                	jal	20012954 <__metal_controller_interrupt_vector_mode>
20012ec4:	87aa                	mv	a5,a0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:593
}
20012ec6:	853e                	mv	a0,a5
20012ec8:	40f2                	lw	ra,28(sp)
20012eca:	4462                	lw	s0,24(sp)
20012ecc:	6105                	addi	sp,sp,32
20012ece:	8082                	ret

20012ed0 <__metal_driver_riscv_cpu_controller_set_vector_mode>:
__metal_driver_riscv_cpu_controller_set_vector_mode():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:596

int __metal_driver_riscv_cpu_controller_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
20012ed0:	1101                	addi	sp,sp,-32
20012ed2:	ce06                	sw	ra,28(sp)
20012ed4:	cc22                	sw	s0,24(sp)
20012ed6:	1000                	addi	s0,sp,32
20012ed8:	fea42623          	sw	a0,-20(s0)
20012edc:	feb42423          	sw	a1,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:598

    if (mode == METAL_DIRECT_MODE) {
20012ee0:	fe842783          	lw	a5,-24(s0)
20012ee4:	eb91                	bnez	a5,20012ef8 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x28>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:599
        __metal_controller_interrupt_vector(
20012ee6:	200127b7          	lui	a5,0x20012
20012eea:	e0078593          	addi	a1,a5,-512 # 20011e00 <__metal_exception_handler>
20012eee:	fe842503          	lw	a0,-24(s0)
20012ef2:	3c4d                	jal	200129a4 <__metal_controller_interrupt_vector>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:601
            mode, (void *)(uintptr_t)&__metal_exception_handler);
        return 0;
20012ef4:	4781                	li	a5,0
20012ef6:	a005                	j	20012f16 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x46>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:603
    }
    if (mode == METAL_VECTOR_MODE) {
20012ef8:	fe842703          	lw	a4,-24(s0)
20012efc:	4785                	li	a5,1
20012efe:	00f71b63          	bne	a4,a5,20012f14 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x44>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:604
        __metal_controller_interrupt_vector(
20012f02:	200147b7          	lui	a5,0x20014
20012f06:	e0078593          	addi	a1,a5,-512 # 20013e00 <__metal_vector_table>
20012f0a:	fe842503          	lw	a0,-24(s0)
20012f0e:	3c59                	jal	200129a4 <__metal_controller_interrupt_vector>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:606
            mode, (void *)(uintptr_t)__metal_vector_table);
        return 0;
20012f10:	4781                	li	a5,0
20012f12:	a011                	j	20012f16 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x46>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:608
    }
    return -1;
20012f14:	57fd                	li	a5,-1
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:609
}
20012f16:	853e                	mv	a0,a5
20012f18:	40f2                	lw	ra,28(sp)
20012f1a:	4462                	lw	s0,24(sp)
20012f1c:	6105                	addi	sp,sp,32
20012f1e:	8082                	ret

20012f20 <__metal_driver_riscv_cpu_controller_command_request>:
__metal_driver_riscv_cpu_controller_command_request():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:612

int __metal_driver_riscv_cpu_controller_command_request(
    struct metal_interrupt *controller, int cmd, void *data) {
20012f20:	1101                	addi	sp,sp,-32
20012f22:	ce22                	sw	s0,28(sp)
20012f24:	1000                	addi	s0,sp,32
20012f26:	fea42623          	sw	a0,-20(s0)
20012f2a:	feb42423          	sw	a1,-24(s0)
20012f2e:	fec42223          	sw	a2,-28(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:615
    /* NOP for now, unless local interrupt lines the like of clic, clint, plic
     */
    return 0;
20012f32:	4781                	li	a5,0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:616
}
20012f34:	853e                	mv	a0,a5
20012f36:	4472                	lw	s0,28(sp)
20012f38:	6105                	addi	sp,sp,32
20012f3a:	8082                	ret

20012f3c <__metal_driver_cpu_mcycle_get>:
__metal_driver_cpu_mcycle_get():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:620

/* CPU driver !!! */

unsigned long long __metal_driver_cpu_mcycle_get(struct metal_cpu *cpu) {
20012f3c:	7139                	addi	sp,sp,-64
20012f3e:	de22                	sw	s0,60(sp)
20012f40:	0080                	addi	s0,sp,64
20012f42:	fca42623          	sw	a0,-52(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:621
    unsigned long long val = 0;
20012f46:	4301                	li	t1,0
20012f48:	4381                	li	t2,0
20012f4a:	fe642423          	sw	t1,-24(s0)
20012f4e:	fe742623          	sw	t2,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:627 (discriminator 1)

#if __riscv_xlen == 32
    unsigned long hi, hi1, lo;

    do {
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi));
20012f52:	b8002573          	csrr	a0,mcycleh
20012f56:	fea42223          	sw	a0,-28(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:628 (discriminator 1)
        __asm__ volatile("csrr %0, mcycle" : "=r"(lo));
20012f5a:	b0002573          	csrr	a0,mcycle
20012f5e:	fea42023          	sw	a0,-32(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:629 (discriminator 1)
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi1));
20012f62:	b8002573          	csrr	a0,mcycleh
20012f66:	fca42e23          	sw	a0,-36(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:632 (discriminator 1)
        /* hi != hi1 means mcycle overflow during we get value,
         * so we must retry. */
    } while (hi != hi1);
20012f6a:	fe442883          	lw	a7,-28(s0)
20012f6e:	fdc42503          	lw	a0,-36(s0)
20012f72:	fea890e3          	bne	a7,a0,20012f52 <__metal_driver_cpu_mcycle_get+0x16>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:634

    val = ((unsigned long long)hi << 32) | lo;
20012f76:	fe442503          	lw	a0,-28(s0)
20012f7a:	85aa                	mv	a1,a0
20012f7c:	4601                	li	a2,0
20012f7e:	00059813          	slli	a6,a1,0x0
20012f82:	4781                	li	a5,0
20012f84:	fe042603          	lw	a2,-32(s0)
20012f88:	86b2                	mv	a3,a2
20012f8a:	4701                	li	a4,0
20012f8c:	00d7e633          	or	a2,a5,a3
20012f90:	fec42423          	sw	a2,-24(s0)
20012f94:	00e867b3          	or	a5,a6,a4
20012f98:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:639
#else
    __asm__ volatile("csrr %0, mcycle" : "=r"(val));
#endif

    return val;
20012f9c:	fe842783          	lw	a5,-24(s0)
20012fa0:	fec42803          	lw	a6,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:640
}
20012fa4:	853e                	mv	a0,a5
20012fa6:	85c2                	mv	a1,a6
20012fa8:	5472                	lw	s0,60(sp)
20012faa:	6121                	addi	sp,sp,64
20012fac:	8082                	ret

20012fae <__metal_driver_cpu_timebase_get>:
__metal_driver_cpu_timebase_get():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:642

unsigned long long __metal_driver_cpu_timebase_get(struct metal_cpu *cpu) {
20012fae:	7179                	addi	sp,sp,-48
20012fb0:	d606                	sw	ra,44(sp)
20012fb2:	d422                	sw	s0,40(sp)
20012fb4:	d24a                	sw	s2,36(sp)
20012fb6:	d04e                	sw	s3,32(sp)
20012fb8:	1800                	addi	s0,sp,48
20012fba:	fca42e23          	sw	a0,-36(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:644
    int timebase;
    if (!cpu) {
20012fbe:	fdc42783          	lw	a5,-36(s0)
20012fc2:	e781                	bnez	a5,20012fca <__metal_driver_cpu_timebase_get+0x1c>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:645
        return 0;
20012fc4:	4901                	li	s2,0
20012fc6:	4981                	li	s3,0
20012fc8:	a821                	j	20012fe0 <__metal_driver_cpu_timebase_get+0x32>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:648
    }

    timebase = __metal_driver_cpu_timebase((struct metal_cpu *)cpu);
20012fca:	fdc42503          	lw	a0,-36(s0)
20012fce:	975fe0ef          	jal	ra,20011942 <__metal_driver_cpu_timebase>
20012fd2:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:649
    return timebase;
20012fd6:	fec42783          	lw	a5,-20(s0)
20012fda:	893e                	mv	s2,a5
20012fdc:	87fd                	srai	a5,a5,0x1f
20012fde:	89be                	mv	s3,a5
20012fe0:	87ca                	mv	a5,s2
20012fe2:	884e                	mv	a6,s3
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:650
}
20012fe4:	853e                	mv	a0,a5
20012fe6:	85c2                	mv	a1,a6
20012fe8:	50b2                	lw	ra,44(sp)
20012fea:	5422                	lw	s0,40(sp)
20012fec:	5912                	lw	s2,36(sp)
20012fee:	5982                	lw	s3,32(sp)
20012ff0:	6145                	addi	sp,sp,48
20012ff2:	8082                	ret

20012ff4 <__metal_driver_cpu_mtime_get>:
__metal_driver_cpu_mtime_get():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:652

unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu) {
20012ff4:	7179                	addi	sp,sp,-48
20012ff6:	d606                	sw	ra,44(sp)
20012ff8:	d422                	sw	s0,40(sp)
20012ffa:	1800                	addi	s0,sp,48
20012ffc:	fca42e23          	sw	a0,-36(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:653
    unsigned long long time = 0;
20013000:	4781                	li	a5,0
20013002:	4801                	li	a6,0
20013004:	fef42023          	sw	a5,-32(s0)
20013008:	ff042223          	sw	a6,-28(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:657
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
2001300c:	fdc42503          	lw	a0,-36(s0)
20013010:	95dfe0ef          	jal	ra,2001196c <__metal_driver_cpu_interrupt_controller>
20013014:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:659

    if (intc) {
20013018:	fec42783          	lw	a5,-20(s0)
2001301c:	c78d                	beqz	a5,20013046 <__metal_driver_cpu_mtime_get+0x52>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:660
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
2001301e:	fec42783          	lw	a5,-20(s0)
20013022:	13c7a783          	lw	a5,316(a5)
20013026:	fef42423          	sw	a5,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:661
        if (tmr_intc) {
2001302a:	fe842783          	lw	a5,-24(s0)
2001302e:	cf81                	beqz	a5,20013046 <__metal_driver_cpu_mtime_get+0x52>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:662
            tmr_intc->vtable->command_request(tmr_intc, METAL_TIMER_MTIME_GET,
20013030:	fe842783          	lw	a5,-24(s0)
20013034:	439c                	lw	a5,0(a5)
20013036:	47f8                	lw	a4,76(a5)
20013038:	fe040793          	addi	a5,s0,-32
2001303c:	863e                	mv	a2,a5
2001303e:	4585                	li	a1,1
20013040:	fe842503          	lw	a0,-24(s0)
20013044:	9702                	jalr	a4
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:666
                                              &time);
        }
    }
    return time;
20013046:	fe042783          	lw	a5,-32(s0)
2001304a:	fe442803          	lw	a6,-28(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:667
}
2001304e:	853e                	mv	a0,a5
20013050:	85c2                	mv	a1,a6
20013052:	50b2                	lw	ra,44(sp)
20013054:	5422                	lw	s0,40(sp)
20013056:	6145                	addi	sp,sp,48
20013058:	8082                	ret

2001305a <__metal_driver_cpu_mtimecmp_set>:
__metal_driver_cpu_mtimecmp_set():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:670

int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time) {
2001305a:	7179                	addi	sp,sp,-48
2001305c:	d606                	sw	ra,44(sp)
2001305e:	d422                	sw	s0,40(sp)
20013060:	d226                	sw	s1,36(sp)
20013062:	1800                	addi	s0,sp,48
20013064:	fca42e23          	sw	a0,-36(s0)
20013068:	fcb42823          	sw	a1,-48(s0)
2001306c:	fcc42a23          	sw	a2,-44(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:671
    int rc = -1;
20013070:	57fd                	li	a5,-1
20013072:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:675
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20013076:	fdc42503          	lw	a0,-36(s0)
2001307a:	8f3fe0ef          	jal	ra,2001196c <__metal_driver_cpu_interrupt_controller>
2001307e:	fea42423          	sw	a0,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:677

    if (intc) {
20013082:	fe842783          	lw	a5,-24(s0)
20013086:	cf8d                	beqz	a5,200130c0 <__metal_driver_cpu_mtimecmp_set+0x66>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:678
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20013088:	fe842783          	lw	a5,-24(s0)
2001308c:	13c7a783          	lw	a5,316(a5)
20013090:	fef42223          	sw	a5,-28(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:679
        if (tmr_intc) {
20013094:	fe442783          	lw	a5,-28(s0)
20013098:	c785                	beqz	a5,200130c0 <__metal_driver_cpu_mtimecmp_set+0x66>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:680
            rc = tmr_intc->vtable->mtimecmp_set(
2001309a:	fe442783          	lw	a5,-28(s0)
2001309e:	439c                	lw	a5,0(a5)
200130a0:	4ba4                	lw	s1,80(a5)
200130a2:	fdc42503          	lw	a0,-36(s0)
200130a6:	879fe0ef          	jal	ra,2001191e <__metal_driver_cpu_hartid>
200130aa:	87aa                	mv	a5,a0
200130ac:	fd042603          	lw	a2,-48(s0)
200130b0:	fd442683          	lw	a3,-44(s0)
200130b4:	85be                	mv	a1,a5
200130b6:	fe442503          	lw	a0,-28(s0)
200130ba:	9482                	jalr	s1
200130bc:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:684
                tmr_intc, __metal_driver_cpu_hartid(cpu), time);
        }
    }
    return rc;
200130c0:	fec42783          	lw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:685
}
200130c4:	853e                	mv	a0,a5
200130c6:	50b2                	lw	ra,44(sp)
200130c8:	5422                	lw	s0,40(sp)
200130ca:	5492                	lw	s1,36(sp)
200130cc:	6145                	addi	sp,sp,48
200130ce:	8082                	ret

200130d0 <__metal_driver_cpu_timer_controller_interrupt>:
__metal_driver_cpu_timer_controller_interrupt():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:688

struct metal_interrupt *
__metal_driver_cpu_timer_controller_interrupt(struct metal_cpu *cpu) {
200130d0:	1101                	addi	sp,sp,-32
200130d2:	ce22                	sw	s0,28(sp)
200130d4:	1000                	addi	s0,sp,32
200130d6:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:690
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
200130da:	800007b7          	lui	a5,0x80000
200130de:	49078793          	addi	a5,a5,1168 # 80000490 <metal_dtim_0_memory_end+0xffffc490>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:699
#else
#pragma message("There is no interrupt controller for Timer interrupt")
    return NULL;
#endif
#endif
}
200130e2:	853e                	mv	a0,a5
200130e4:	4472                	lw	s0,28(sp)
200130e6:	6105                	addi	sp,sp,32
200130e8:	8082                	ret

200130ea <__metal_driver_cpu_get_timer_interrupt_id>:
__metal_driver_cpu_get_timer_interrupt_id():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:701

int __metal_driver_cpu_get_timer_interrupt_id(struct metal_cpu *cpu) {
200130ea:	1101                	addi	sp,sp,-32
200130ec:	ce22                	sw	s0,28(sp)
200130ee:	1000                	addi	s0,sp,32
200130f0:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:702
    return METAL_INTERRUPT_ID_TMR;
200130f4:	479d                	li	a5,7
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:703
}
200130f6:	853e                	mv	a0,a5
200130f8:	4472                	lw	s0,28(sp)
200130fa:	6105                	addi	sp,sp,32
200130fc:	8082                	ret

200130fe <__metal_driver_cpu_sw_controller_interrupt>:
__metal_driver_cpu_sw_controller_interrupt():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:706

struct metal_interrupt *
__metal_driver_cpu_sw_controller_interrupt(struct metal_cpu *cpu) {
200130fe:	1101                	addi	sp,sp,-32
20013100:	ce22                	sw	s0,28(sp)
20013102:	1000                	addi	s0,sp,32
20013104:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:708
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
20013108:	800007b7          	lui	a5,0x80000
2001310c:	49078793          	addi	a5,a5,1168 # 80000490 <metal_dtim_0_memory_end+0xffffc490>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:717
#else
#pragma message("There is no interrupt controller for Software interrupt")
    return NULL;
#endif
#endif
}
20013110:	853e                	mv	a0,a5
20013112:	4472                	lw	s0,28(sp)
20013114:	6105                	addi	sp,sp,32
20013116:	8082                	ret

20013118 <__metal_driver_cpu_get_sw_interrupt_id>:
__metal_driver_cpu_get_sw_interrupt_id():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:719

int __metal_driver_cpu_get_sw_interrupt_id(struct metal_cpu *cpu) {
20013118:	1101                	addi	sp,sp,-32
2001311a:	ce22                	sw	s0,28(sp)
2001311c:	1000                	addi	s0,sp,32
2001311e:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:720
    return METAL_INTERRUPT_ID_SW;
20013122:	478d                	li	a5,3
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:721
}
20013124:	853e                	mv	a0,a5
20013126:	4472                	lw	s0,28(sp)
20013128:	6105                	addi	sp,sp,32
2001312a:	8082                	ret

2001312c <__metal_driver_cpu_set_sw_ipi>:
__metal_driver_cpu_set_sw_ipi():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:723

int __metal_driver_cpu_set_sw_ipi(struct metal_cpu *cpu, int hartid) {
2001312c:	7179                	addi	sp,sp,-48
2001312e:	d606                	sw	ra,44(sp)
20013130:	d422                	sw	s0,40(sp)
20013132:	1800                	addi	s0,sp,48
20013134:	fca42e23          	sw	a0,-36(s0)
20013138:	fcb42c23          	sw	a1,-40(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:724
    int rc = -1;
2001313c:	57fd                	li	a5,-1
2001313e:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:728
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20013142:	fdc42503          	lw	a0,-36(s0)
20013146:	827fe0ef          	jal	ra,2001196c <__metal_driver_cpu_interrupt_controller>
2001314a:	fea42423          	sw	a0,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:730

    if (intc) {
2001314e:	fe842783          	lw	a5,-24(s0)
20013152:	c79d                	beqz	a5,20013180 <__metal_driver_cpu_set_sw_ipi+0x54>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:731
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20013154:	fe842783          	lw	a5,-24(s0)
20013158:	0dc7a783          	lw	a5,220(a5)
2001315c:	fef42223          	sw	a5,-28(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:732
        if (sw_intc) {
20013160:	fe442783          	lw	a5,-28(s0)
20013164:	cf91                	beqz	a5,20013180 <__metal_driver_cpu_set_sw_ipi+0x54>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:733
            rc = sw_intc->vtable->command_request(
20013166:	fe442783          	lw	a5,-28(s0)
2001316a:	439c                	lw	a5,0(a5)
2001316c:	47f8                	lw	a4,76(a5)
2001316e:	fd840793          	addi	a5,s0,-40
20013172:	863e                	mv	a2,a5
20013174:	458d                	li	a1,3
20013176:	fe442503          	lw	a0,-28(s0)
2001317a:	9702                	jalr	a4
2001317c:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:737
                sw_intc, METAL_SOFTWARE_IPI_SET, &hartid);
        }
    }
    return rc;
20013180:	fec42783          	lw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:738
}
20013184:	853e                	mv	a0,a5
20013186:	50b2                	lw	ra,44(sp)
20013188:	5422                	lw	s0,40(sp)
2001318a:	6145                	addi	sp,sp,48
2001318c:	8082                	ret

2001318e <__metal_driver_cpu_clear_sw_ipi>:
__metal_driver_cpu_clear_sw_ipi():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:740

int __metal_driver_cpu_clear_sw_ipi(struct metal_cpu *cpu, int hartid) {
2001318e:	7179                	addi	sp,sp,-48
20013190:	d606                	sw	ra,44(sp)
20013192:	d422                	sw	s0,40(sp)
20013194:	1800                	addi	s0,sp,48
20013196:	fca42e23          	sw	a0,-36(s0)
2001319a:	fcb42c23          	sw	a1,-40(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:741
    int rc = -1;
2001319e:	57fd                	li	a5,-1
200131a0:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:745
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
200131a4:	fdc42503          	lw	a0,-36(s0)
200131a8:	fc4fe0ef          	jal	ra,2001196c <__metal_driver_cpu_interrupt_controller>
200131ac:	fea42423          	sw	a0,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:747

    if (intc) {
200131b0:	fe842783          	lw	a5,-24(s0)
200131b4:	c79d                	beqz	a5,200131e2 <__metal_driver_cpu_clear_sw_ipi+0x54>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:748
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
200131b6:	fe842783          	lw	a5,-24(s0)
200131ba:	0dc7a783          	lw	a5,220(a5)
200131be:	fef42223          	sw	a5,-28(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:749
        if (sw_intc) {
200131c2:	fe442783          	lw	a5,-28(s0)
200131c6:	cf91                	beqz	a5,200131e2 <__metal_driver_cpu_clear_sw_ipi+0x54>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:750
            rc = sw_intc->vtable->command_request(
200131c8:	fe442783          	lw	a5,-28(s0)
200131cc:	439c                	lw	a5,0(a5)
200131ce:	47f8                	lw	a4,76(a5)
200131d0:	fd840793          	addi	a5,s0,-40
200131d4:	863e                	mv	a2,a5
200131d6:	4589                	li	a1,2
200131d8:	fe442503          	lw	a0,-28(s0)
200131dc:	9702                	jalr	a4
200131de:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:754
                sw_intc, METAL_SOFTWARE_IPI_CLEAR, &hartid);
        }
    }
    return rc;
200131e2:	fec42783          	lw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:755
}
200131e6:	853e                	mv	a0,a5
200131e8:	50b2                	lw	ra,44(sp)
200131ea:	5422                	lw	s0,40(sp)
200131ec:	6145                	addi	sp,sp,48
200131ee:	8082                	ret

200131f0 <__metal_driver_cpu_get_msip>:
__metal_driver_cpu_get_msip():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:757

int __metal_driver_cpu_get_msip(struct metal_cpu *cpu, int hartid) {
200131f0:	7179                	addi	sp,sp,-48
200131f2:	d606                	sw	ra,44(sp)
200131f4:	d422                	sw	s0,40(sp)
200131f6:	1800                	addi	s0,sp,48
200131f8:	fca42e23          	sw	a0,-36(s0)
200131fc:	fcb42c23          	sw	a1,-40(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:758
    int rc = 0;
20013200:	fe042623          	sw	zero,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:762
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20013204:	fdc42503          	lw	a0,-36(s0)
20013208:	f64fe0ef          	jal	ra,2001196c <__metal_driver_cpu_interrupt_controller>
2001320c:	fea42423          	sw	a0,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:764

    if (intc) {
20013210:	fe842783          	lw	a5,-24(s0)
20013214:	c79d                	beqz	a5,20013242 <__metal_driver_cpu_get_msip+0x52>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:765
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20013216:	fe842783          	lw	a5,-24(s0)
2001321a:	0dc7a783          	lw	a5,220(a5)
2001321e:	fef42223          	sw	a5,-28(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:766
        if (sw_intc) {
20013222:	fe442783          	lw	a5,-28(s0)
20013226:	cf91                	beqz	a5,20013242 <__metal_driver_cpu_get_msip+0x52>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:767
            rc = sw_intc->vtable->command_request(
20013228:	fe442783          	lw	a5,-28(s0)
2001322c:	439c                	lw	a5,0(a5)
2001322e:	47f8                	lw	a4,76(a5)
20013230:	fd840793          	addi	a5,s0,-40
20013234:	863e                	mv	a2,a5
20013236:	4591                	li	a1,4
20013238:	fe442503          	lw	a0,-28(s0)
2001323c:	9702                	jalr	a4
2001323e:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:771
                sw_intc, METAL_SOFTWARE_MSIP_GET, &hartid);
        }
    }
    return rc;
20013242:	fec42783          	lw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:772
}
20013246:	853e                	mv	a0,a5
20013248:	50b2                	lw	ra,44(sp)
2001324a:	5422                	lw	s0,40(sp)
2001324c:	6145                	addi	sp,sp,48
2001324e:	8082                	ret

20013250 <__metal_driver_cpu_controller_interrupt>:
__metal_driver_cpu_controller_interrupt():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:775

struct metal_interrupt *
__metal_driver_cpu_controller_interrupt(struct metal_cpu *cpu) {
20013250:	1101                	addi	sp,sp,-32
20013252:	ce06                	sw	ra,28(sp)
20013254:	cc22                	sw	s0,24(sp)
20013256:	1000                	addi	s0,sp,32
20013258:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:776
    return __metal_driver_cpu_interrupt_controller(cpu);
2001325c:	fec42503          	lw	a0,-20(s0)
20013260:	f0cfe0ef          	jal	ra,2001196c <__metal_driver_cpu_interrupt_controller>
20013264:	87aa                	mv	a5,a0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:777
}
20013266:	853e                	mv	a0,a5
20013268:	40f2                	lw	ra,28(sp)
2001326a:	4462                	lw	s0,24(sp)
2001326c:	6105                	addi	sp,sp,32
2001326e:	8082                	ret

20013270 <__metal_driver_cpu_exception_register>:
__metal_driver_cpu_exception_register():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:798
    }
    return -1;
}

int __metal_driver_cpu_exception_register(struct metal_cpu *cpu, int ecode,
                                          metal_exception_handler_t isr) {
20013270:	7179                	addi	sp,sp,-48
20013272:	d606                	sw	ra,44(sp)
20013274:	d422                	sw	s0,40(sp)
20013276:	1800                	addi	s0,sp,48
20013278:	fca42e23          	sw	a0,-36(s0)
2001327c:	fcb42c23          	sw	a1,-40(s0)
20013280:	fcc42a23          	sw	a2,-44(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:801
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20013284:	fdc42503          	lw	a0,-36(s0)
20013288:	ee4fe0ef          	jal	ra,2001196c <__metal_driver_cpu_interrupt_controller>
2001328c:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:803

    if (intc) {
20013290:	fec42783          	lw	a5,-20(s0)
20013294:	cb99                	beqz	a5,200132aa <__metal_driver_cpu_exception_register+0x3a>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:804
        return __metal_exception_register((struct metal_interrupt *)intc, ecode,
20013296:	fd442603          	lw	a2,-44(s0)
2001329a:	fd842583          	lw	a1,-40(s0)
2001329e:	fec42503          	lw	a0,-20(s0)
200132a2:	8bbff0ef          	jal	ra,20012b5c <__metal_exception_register>
200132a6:	87aa                	mv	a5,a0
200132a8:	a011                	j	200132ac <__metal_driver_cpu_exception_register+0x3c>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:807
                                          isr);
    }
    return -1;
200132aa:	57fd                	li	a5,-1
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:808
}
200132ac:	853e                	mv	a0,a5
200132ae:	50b2                	lw	ra,44(sp)
200132b0:	5422                	lw	s0,40(sp)
200132b2:	6145                	addi	sp,sp,48
200132b4:	8082                	ret

200132b6 <__metal_driver_cpu_get_instruction_length>:
__metal_driver_cpu_get_instruction_length():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:811

int __metal_driver_cpu_get_instruction_length(struct metal_cpu *cpu,
                                              uintptr_t epc) {
200132b6:	1101                	addi	sp,sp,-32
200132b8:	ce22                	sw	s0,28(sp)
200132ba:	1000                	addi	s0,sp,32
200132bc:	fea42623          	sw	a0,-20(s0)
200132c0:	feb42423          	sw	a1,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:817
    /**
     * Per ISA compressed instruction has last two bits of opcode set.
     * The encoding '00' '01' '10' are used for compressed instruction.
     * Only enconding '11' isn't regarded as compressed instruction (>16b).
     */
    return ((*(unsigned short *)epc & METAL_INSN_LENGTH_MASK) ==
200132c4:	fe842783          	lw	a5,-24(s0)
200132c8:	0007d783          	lhu	a5,0(a5)
200132cc:	0037f713          	andi	a4,a5,3
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:820
            METAL_INSN_NOT_COMPRESSED)
               ? 4
               : 2;
200132d0:	478d                	li	a5,3
200132d2:	00f71463          	bne	a4,a5,200132da <__metal_driver_cpu_get_instruction_length+0x24>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 1)
200132d6:	4791                	li	a5,4
200132d8:	a011                	j	200132dc <__metal_driver_cpu_get_instruction_length+0x26>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 2)
200132da:	4789                	li	a5,2
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:821 (discriminator 5)
}
200132dc:	853e                	mv	a0,a5
200132de:	4472                	lw	s0,28(sp)
200132e0:	6105                	addi	sp,sp,32
200132e2:	8082                	ret

200132e4 <__metal_driver_cpu_get_exception_pc>:
__metal_driver_cpu_get_exception_pc():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:823

uintptr_t __metal_driver_cpu_get_exception_pc(struct metal_cpu *cpu) {
200132e4:	7179                	addi	sp,sp,-48
200132e6:	d622                	sw	s0,44(sp)
200132e8:	1800                	addi	s0,sp,48
200132ea:	fca42e23          	sw	a0,-36(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:825
    uintptr_t mepc;
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
200132ee:	341027f3          	csrr	a5,mepc
200132f2:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:826
    return mepc;
200132f6:	fec42783          	lw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:827
}
200132fa:	853e                	mv	a0,a5
200132fc:	5432                	lw	s0,44(sp)
200132fe:	6145                	addi	sp,sp,48
20013300:	8082                	ret

20013302 <__metal_driver_cpu_set_exception_pc>:
__metal_driver_cpu_set_exception_pc():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:829

int __metal_driver_cpu_set_exception_pc(struct metal_cpu *cpu, uintptr_t mepc) {
20013302:	1101                	addi	sp,sp,-32
20013304:	ce22                	sw	s0,28(sp)
20013306:	1000                	addi	s0,sp,32
20013308:	fea42623          	sw	a0,-20(s0)
2001330c:	feb42423          	sw	a1,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:830
    __asm__ volatile("csrw mepc, %0" ::"r"(mepc));
20013310:	fe842783          	lw	a5,-24(s0)
20013314:	34179073          	csrw	mepc,a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:831
    return 0;
20013318:	4781                	li	a5,0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:832
}
2001331a:	853e                	mv	a0,a5
2001331c:	4472                	lw	s0,28(sp)
2001331e:	6105                	addi	sp,sp,32
20013320:	8082                	ret

20013322 <__metal_driver_cpu_get_buserror>:
__metal_driver_cpu_get_buserror():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:834

struct metal_buserror *__metal_driver_cpu_get_buserror(struct metal_cpu *cpu) {
20013322:	1101                	addi	sp,sp,-32
20013324:	ce06                	sw	ra,28(sp)
20013326:	cc22                	sw	s0,24(sp)
20013328:	1000                	addi	s0,sp,32
2001332a:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:835
    return __metal_driver_cpu_buserror(cpu);
2001332e:	fec42503          	lw	a0,-20(s0)
20013332:	e64fe0ef          	jal	ra,20011996 <__metal_driver_cpu_buserror>
20013336:	87aa                	mv	a5,a0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/riscv_cpu.c:836
}
20013338:	853e                	mv	a0,a5
2001333a:	40f2                	lw	ra,28(sp)
2001333c:	4462                	lw	s0,24(sp)
2001333e:	6105                	addi	sp,sp,32
20013340:	8082                	ret

20013342 <__metal_driver_sifive_fe310_g000_hfrosc_ref>:
__metal_driver_sifive_fe310_g000_hfrosc_ref():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1240



/* --------------------- sifive_fe310_g000_hfrosc ------------ */
static __inline__ struct metal_clock * __metal_driver_sifive_fe310_g000_hfrosc_ref(const struct metal_clock *clock)
{
20013342:	1101                	addi	sp,sp,-32
20013344:	ce22                	sw	s0,28(sp)
20013346:	1000                	addi	s0,sp,32
20013348:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1241
		return (struct metal_clock *)&__metal_dt_clock_2.clock;
2001334c:	800007b7          	lui	a5,0x80000
20013350:	06c78793          	addi	a5,a5,108 # 8000006c <metal_dtim_0_memory_end+0xffffc06c>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1242
}
20013354:	853e                	mv	a0,a5
20013356:	4472                	lw	s0,28(sp)
20013358:	6105                	addi	sp,sp,32
2001335a:	8082                	ret

2001335c <__metal_driver_sifive_fe310_g000_hfrosc_config_base>:
__metal_driver_sifive_fe310_g000_hfrosc_config_base():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1245

static __inline__ struct __metal_driver_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_hfrosc_config_base(const struct metal_clock *clock)
{
2001335c:	1101                	addi	sp,sp,-32
2001335e:	ce22                	sw	s0,28(sp)
20013360:	1000                	addi	s0,sp,32
20013362:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1246
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20013366:	81818793          	addi	a5,gp,-2024 # 800004a0 <__metal_dt_prci_10008000>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1247
}
2001336a:	853e                	mv	a0,a5
2001336c:	4472                	lw	s0,28(sp)
2001336e:	6105                	addi	sp,sp,32
20013370:	8082                	ret

20013372 <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfrosc_config_offset():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1255
{
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
}

static __inline__ long __metal_driver_sifive_fe310_g000_hfrosc_config_offset(const struct metal_clock *clock)
{
20013372:	1101                	addi	sp,sp,-32
20013374:	ce22                	sw	s0,28(sp)
20013376:	1000                	addi	s0,sp,32
20013378:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1256
		return METAL_SIFIVE_FE310_G000_PRCI_HFROSCCFG;
2001337c:	4781                	li	a5,0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1257
}
2001337e:	853e                	mv	a0,a5
20013380:	4472                	lw	s0,28(sp)
20013382:	6105                	addi	sp,sp,32
20013384:	8082                	ret

20013386 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1372
{
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_SIZE;
}

static __inline__ const struct __metal_driver_vtable_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_prci_vtable( )
{
20013386:	1141                	addi	sp,sp,-16
20013388:	c622                	sw	s0,12(sp)
2001338a:	0800                	addi	s0,sp,16
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1373
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
2001338c:	82c18793          	addi	a5,gp,-2004 # 800004b4 <__metal_driver_vtable_sifive_fe310_g000_prci>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1374
}
20013390:	853e                	mv	a0,a5
20013392:	4432                	lw	s0,12(sp)
20013394:	0141                	addi	sp,sp,16
20013396:	8082                	ret

20013398 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:17
#define CONFIG_TRIM 0x001F0000UL
#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(
    const struct metal_clock *clock) {
20013398:	7139                	addi	sp,sp,-64
2001339a:	de06                	sw	ra,60(sp)
2001339c:	dc22                	sw	s0,56(sp)
2001339e:	0080                	addi	s0,sp,64
200133a0:	fca42623          	sw	a0,-52(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:19
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfrosc_ref(clock);
200133a4:	fcc42503          	lw	a0,-52(s0)
200133a8:	3f69                	jal	20013342 <__metal_driver_sifive_fe310_g000_hfrosc_ref>
200133aa:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:21
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfrosc_config_offset(clock);
200133ae:	fcc42503          	lw	a0,-52(s0)
200133b2:	37c1                	jal	20013372 <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>
200133b4:	fea42423          	sw	a0,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:23
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfrosc_config_base(clock);
200133b8:	fcc42503          	lw	a0,-52(s0)
200133bc:	3745                	jal	2001335c <__metal_driver_sifive_fe310_g000_hfrosc_config_base>
200133be:	fea42223          	sw	a0,-28(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:25
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
200133c2:	37d1                	jal	20013386 <__metal_driver_sifive_fe310_g000_prci_vtable>
200133c4:	fea42023          	sw	a0,-32(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:26
    long cfg = vtable->get_reg(config_base, config_offset);
200133c8:	fe042783          	lw	a5,-32(s0)
200133cc:	439c                	lw	a5,0(a5)
200133ce:	fe842583          	lw	a1,-24(s0)
200133d2:	fe442503          	lw	a0,-28(s0)
200133d6:	9782                	jalr	a5
200133d8:	fca42e23          	sw	a0,-36(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:28

    if ((cfg & CONFIG_ENABLE) == 0)
200133dc:	fdc42703          	lw	a4,-36(s0)
200133e0:	400007b7          	lui	a5,0x40000
200133e4:	8ff9                	and	a5,a5,a4
200133e6:	e399                	bnez	a5,200133ec <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x54>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:29
        return -1;
200133e8:	57fd                	li	a5,-1
200133ea:	a025                	j	20013412 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:30
    if ((cfg & CONFIG_READY) == 0)
200133ec:	fdc42783          	lw	a5,-36(s0)
200133f0:	0007c463          	bltz	a5,200133f8 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x60>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:31
        return -1;
200133f4:	57fd                	li	a5,-1
200133f6:	a831                	j	20013412 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:32
    return metal_clock_get_rate_hz(ref) / ((cfg & CONFIG_DIVIDER) + 1);
200133f8:	fec42503          	lw	a0,-20(s0)
200133fc:	0ab000ef          	jal	ra,20013ca6 <metal_clock_get_rate_hz>
20013400:	87aa                	mv	a5,a0
20013402:	873e                	mv	a4,a5
20013404:	fdc42783          	lw	a5,-36(s0)
20013408:	03f7f793          	andi	a5,a5,63
2001340c:	0785                	addi	a5,a5,1
2001340e:	02f757b3          	divu	a5,a4,a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:33
}
20013412:	853e                	mv	a0,a5
20013414:	50f2                	lw	ra,60(sp)
20013416:	5462                	lw	s0,56(sp)
20013418:	6121                	addi	sp,sp,64
2001341a:	8082                	ret

2001341c <__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:36

long __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
2001341c:	1101                	addi	sp,sp,-32
2001341e:	ce06                	sw	ra,28(sp)
20013420:	cc22                	sw	s0,24(sp)
20013422:	1000                	addi	s0,sp,32
20013424:	fea42623          	sw	a0,-20(s0)
20013428:	feb42423          	sw	a1,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:37
    return __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(clock);
2001342c:	fec42503          	lw	a0,-20(s0)
20013430:	37a5                	jal	20013398 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>
20013432:	87aa                	mv	a5,a0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:38
}
20013434:	853e                	mv	a0,a5
20013436:	40f2                	lw	ra,28(sp)
20013438:	4462                	lw	s0,24(sp)
2001343a:	6105                	addi	sp,sp,32
2001343c:	8082                	ret

2001343e <__metal_driver_sifive_fe310_g000_hfxosc_ref>:
__metal_driver_sifive_fe310_g000_hfxosc_ref():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1263
{
2001343e:	1101                	addi	sp,sp,-32
20013440:	ce22                	sw	s0,28(sp)
20013442:	1000                	addi	s0,sp,32
20013444:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1264
		return (struct metal_clock *)&__metal_dt_clock_0.clock;
20013448:	800007b7          	lui	a5,0x80000
2001344c:	06078793          	addi	a5,a5,96 # 80000060 <metal_dtim_0_memory_end+0xffffc060>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1265
}
20013450:	853e                	mv	a0,a5
20013452:	4472                	lw	s0,28(sp)
20013454:	6105                	addi	sp,sp,32
20013456:	8082                	ret

20013458 <__metal_driver_sifive_fe310_g000_hfxosc_config_base>:
__metal_driver_sifive_fe310_g000_hfxosc_config_base():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1268
{
20013458:	1101                	addi	sp,sp,-32
2001345a:	ce22                	sw	s0,28(sp)
2001345c:	1000                	addi	s0,sp,32
2001345e:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1269
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20013462:	81818793          	addi	a5,gp,-2024 # 800004a0 <__metal_dt_prci_10008000>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1270
}
20013466:	853e                	mv	a0,a5
20013468:	4472                	lw	s0,28(sp)
2001346a:	6105                	addi	sp,sp,32
2001346c:	8082                	ret

2001346e <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfxosc_config_offset():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1273
{
2001346e:	1101                	addi	sp,sp,-32
20013470:	ce22                	sw	s0,28(sp)
20013472:	1000                	addi	s0,sp,32
20013474:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1274
		return METAL_SIFIVE_FE310_G000_PRCI_HFXOSCCFG;
20013478:	4791                	li	a5,4
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1275
}
2001347a:	853e                	mv	a0,a5
2001347c:	4472                	lw	s0,28(sp)
2001347e:	6105                	addi	sp,sp,32
20013480:	8082                	ret

20013482 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1372
{
20013482:	1141                	addi	sp,sp,-16
20013484:	c622                	sw	s0,12(sp)
20013486:	0800                	addi	s0,sp,16
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1373
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20013488:	82c18793          	addi	a5,gp,-2004 # 800004b4 <__metal_driver_vtable_sifive_fe310_g000_prci>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1374
}
2001348c:	853e                	mv	a0,a5
2001348e:	4432                	lw	s0,12(sp)
20013490:	0141                	addi	sp,sp,16
20013492:	8082                	ret

20013494 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:15

#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(
    const struct metal_clock *clock) {
20013494:	7139                	addi	sp,sp,-64
20013496:	de06                	sw	ra,60(sp)
20013498:	dc22                	sw	s0,56(sp)
2001349a:	0080                	addi	s0,sp,64
2001349c:	fca42623          	sw	a0,-52(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:17
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfxosc_ref(clock);
200134a0:	fcc42503          	lw	a0,-52(s0)
200134a4:	3f69                	jal	2001343e <__metal_driver_sifive_fe310_g000_hfxosc_ref>
200134a6:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:19
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfxosc_config_offset(clock);
200134aa:	fcc42503          	lw	a0,-52(s0)
200134ae:	37c1                	jal	2001346e <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>
200134b0:	fea42423          	sw	a0,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:21
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfxosc_config_base(clock);
200134b4:	fcc42503          	lw	a0,-52(s0)
200134b8:	3745                	jal	20013458 <__metal_driver_sifive_fe310_g000_hfxosc_config_base>
200134ba:	fea42223          	sw	a0,-28(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:23
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
200134be:	37d1                	jal	20013482 <__metal_driver_sifive_fe310_g000_prci_vtable>
200134c0:	fea42023          	sw	a0,-32(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:24
    long cfg = vtable->get_reg(config_base, config_offset);
200134c4:	fe042783          	lw	a5,-32(s0)
200134c8:	439c                	lw	a5,0(a5)
200134ca:	fe842583          	lw	a1,-24(s0)
200134ce:	fe442503          	lw	a0,-28(s0)
200134d2:	9782                	jalr	a5
200134d4:	fca42e23          	sw	a0,-36(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:26

    if ((cfg & CONFIG_ENABLE) == 0)
200134d8:	fdc42703          	lw	a4,-36(s0)
200134dc:	400007b7          	lui	a5,0x40000
200134e0:	8ff9                	and	a5,a5,a4
200134e2:	e399                	bnez	a5,200134e8 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x54>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:27
        return -1;
200134e4:	57fd                	li	a5,-1
200134e6:	a821                	j	200134fe <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:28
    if ((cfg & CONFIG_READY) == 0)
200134e8:	fdc42783          	lw	a5,-36(s0)
200134ec:	0007c463          	bltz	a5,200134f4 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x60>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:29
        return -1;
200134f0:	57fd                	li	a5,-1
200134f2:	a031                	j	200134fe <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:30
    return metal_clock_get_rate_hz(ref);
200134f4:	fec42503          	lw	a0,-20(s0)
200134f8:	7ae000ef          	jal	ra,20013ca6 <metal_clock_get_rate_hz>
200134fc:	87aa                	mv	a5,a0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:31
}
200134fe:	853e                	mv	a0,a5
20013500:	50f2                	lw	ra,60(sp)
20013502:	5462                	lw	s0,56(sp)
20013504:	6121                	addi	sp,sp,64
20013506:	8082                	ret

20013508 <__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:34

long __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
20013508:	1101                	addi	sp,sp,-32
2001350a:	ce06                	sw	ra,28(sp)
2001350c:	cc22                	sw	s0,24(sp)
2001350e:	1000                	addi	s0,sp,32
20013510:	fea42623          	sw	a0,-20(s0)
20013514:	feb42423          	sw	a1,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:35
    return __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(clock);
20013518:	fec42503          	lw	a0,-20(s0)
2001351c:	3fa5                	jal	20013494 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>
2001351e:	87aa                	mv	a5,a0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:36
}
20013520:	853e                	mv	a0,a5
20013522:	40f2                	lw	ra,28(sp)
20013524:	4462                	lw	s0,24(sp)
20013526:	6105                	addi	sp,sp,32
20013528:	8082                	ret

2001352a <__metal_driver_sifive_fe310_g000_pll_pllsel0>:
__metal_driver_sifive_fe310_g000_pll_pllsel0():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1324
{
2001352a:	1101                	addi	sp,sp,-32
2001352c:	ce22                	sw	s0,28(sp)
2001352e:	1000                	addi	s0,sp,32
20013530:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1325
		return (struct metal_clock *)&__metal_dt_clock_3.clock;
20013534:	800007b7          	lui	a5,0x80000
20013538:	46078793          	addi	a5,a5,1120 # 80000460 <metal_dtim_0_memory_end+0xffffc460>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1326
}
2001353c:	853e                	mv	a0,a5
2001353e:	4472                	lw	s0,28(sp)
20013540:	6105                	addi	sp,sp,32
20013542:	8082                	ret

20013544 <__metal_driver_sifive_fe310_g000_pll_pllref>:
__metal_driver_sifive_fe310_g000_pll_pllref():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1329
{
20013544:	1101                	addi	sp,sp,-32
20013546:	ce22                	sw	s0,28(sp)
20013548:	1000                	addi	s0,sp,32
2001354a:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1330
		return (struct metal_clock *)&__metal_dt_clock_1.clock;
2001354e:	800007b7          	lui	a5,0x80000
20013552:	46c78793          	addi	a5,a5,1132 # 8000046c <metal_dtim_0_memory_end+0xffffc46c>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1331
}
20013556:	853e                	mv	a0,a5
20013558:	4472                	lw	s0,28(sp)
2001355a:	6105                	addi	sp,sp,32
2001355c:	8082                	ret

2001355e <__metal_driver_sifive_fe310_g000_pll_divider_base>:
__metal_driver_sifive_fe310_g000_pll_divider_base():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1334
{
2001355e:	1101                	addi	sp,sp,-32
20013560:	ce22                	sw	s0,28(sp)
20013562:	1000                	addi	s0,sp,32
20013564:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1335
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20013568:	81818793          	addi	a5,gp,-2024 # 800004a0 <__metal_dt_prci_10008000>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1336
}
2001356c:	853e                	mv	a0,a5
2001356e:	4472                	lw	s0,28(sp)
20013570:	6105                	addi	sp,sp,32
20013572:	8082                	ret

20013574 <__metal_driver_sifive_fe310_g000_pll_divider_offset>:
__metal_driver_sifive_fe310_g000_pll_divider_offset():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1339
{
20013574:	1101                	addi	sp,sp,-32
20013576:	ce22                	sw	s0,28(sp)
20013578:	1000                	addi	s0,sp,32
2001357a:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1340
		return METAL_SIFIVE_FE310_G000_PRCI_PLLOUTDIV;
2001357e:	47b1                	li	a5,12
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1341
}
20013580:	853e                	mv	a0,a5
20013582:	4472                	lw	s0,28(sp)
20013584:	6105                	addi	sp,sp,32
20013586:	8082                	ret

20013588 <__metal_driver_sifive_fe310_g000_pll_config_base>:
__metal_driver_sifive_fe310_g000_pll_config_base():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1344
{
20013588:	1141                	addi	sp,sp,-16
2001358a:	c622                	sw	s0,12(sp)
2001358c:	0800                	addi	s0,sp,16
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1345
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
2001358e:	81818793          	addi	a5,gp,-2024 # 800004a0 <__metal_dt_prci_10008000>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1346
}
20013592:	853e                	mv	a0,a5
20013594:	4432                	lw	s0,12(sp)
20013596:	0141                	addi	sp,sp,16
20013598:	8082                	ret

2001359a <__metal_driver_sifive_fe310_g000_pll_config_offset>:
__metal_driver_sifive_fe310_g000_pll_config_offset():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1349
{
2001359a:	1141                	addi	sp,sp,-16
2001359c:	c622                	sw	s0,12(sp)
2001359e:	0800                	addi	s0,sp,16
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1350
		return METAL_SIFIVE_FE310_G000_PRCI_PLLCFG;
200135a0:	47a1                	li	a5,8
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1351
}
200135a2:	853e                	mv	a0,a5
200135a4:	4432                	lw	s0,12(sp)
200135a6:	0141                	addi	sp,sp,16
200135a8:	8082                	ret

200135aa <__metal_driver_sifive_fe310_g000_pll_init_rate>:
__metal_driver_sifive_fe310_g000_pll_init_rate():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1354
{
200135aa:	1141                	addi	sp,sp,-16
200135ac:	c622                	sw	s0,12(sp)
200135ae:	0800                	addi	s0,sp,16
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1355
		return 16000000;
200135b0:	00f427b7          	lui	a5,0xf42
200135b4:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1356
}
200135b8:	853e                	mv	a0,a5
200135ba:	4432                	lw	s0,12(sp)
200135bc:	0141                	addi	sp,sp,16
200135be:	8082                	ret

200135c0 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1362
{
200135c0:	1141                	addi	sp,sp,-16
200135c2:	c622                	sw	s0,12(sp)
200135c4:	0800                	addi	s0,sp,16
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1363
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
200135c6:	100087b7          	lui	a5,0x10008
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1364
}
200135ca:	853e                	mv	a0,a5
200135cc:	4432                	lw	s0,12(sp)
200135ce:	0141                	addi	sp,sp,16
200135d0:	8082                	ret

200135d2 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1372
{
200135d2:	1141                	addi	sp,sp,-16
200135d4:	c622                	sw	s0,12(sp)
200135d6:	0800                	addi	s0,sp,16
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1373
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
200135d8:	82c18793          	addi	a5,gp,-2004 # 800004b4 <__metal_driver_vtable_sifive_fe310_g000_prci>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1374
}
200135dc:	853e                	mv	a0,a5
200135de:	4432                	lw	s0,12(sp)
200135e0:	0141                	addi	sp,sp,16
200135e2:	8082                	ret

200135e4 <get_pll_config_freq>:
get_pll_config_freq():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:141
                                const struct pll_config_t *config) {
200135e4:	1101                	addi	sp,sp,-32
200135e6:	ce22                	sw	s0,28(sp)
200135e8:	1000                	addi	s0,sp,32
200135ea:	fea42623          	sw	a0,-20(s0)
200135ee:	feb42423          	sw	a1,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142
    if (pll_input_rate < config->min_input_rate ||
200135f2:	fe842783          	lw	a5,-24(s0)
200135f6:	479c                	lw	a5,8(a5)
200135f8:	fec42703          	lw	a4,-20(s0)
200135fc:	00f76963          	bltu	a4,a5,2001360e <get_pll_config_freq+0x2a>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:143 (discriminator 1)
        pll_input_rate > config->max_input_rate)
20013600:	fe842783          	lw	a5,-24(s0)
20013604:	47dc                	lw	a5,12(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142 (discriminator 1)
    if (pll_input_rate < config->min_input_rate ||
20013606:	fec42703          	lw	a4,-20(s0)
2001360a:	00e7f463          	bgeu	a5,a4,20013612 <get_pll_config_freq+0x2e>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:144
        return PLL_CONFIG_NOT_VALID;
2001360e:	57fd                	li	a5,-1
20013610:	a829                	j	2001362a <get_pll_config_freq+0x46>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:146
    return pll_input_rate * config->multiplier / config->divisor;
20013612:	fe842783          	lw	a5,-24(s0)
20013616:	4398                	lw	a4,0(a5)
20013618:	fec42783          	lw	a5,-20(s0)
2001361c:	02f70733          	mul	a4,a4,a5
20013620:	fe842783          	lw	a5,-24(s0)
20013624:	43dc                	lw	a5,4(a5)
20013626:	02f757b3          	divu	a5,a4,a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:147
}
2001362a:	853e                	mv	a0,a5
2001362c:	4472                	lw	s0,28(sp)
2001362e:	6105                	addi	sp,sp,32
20013630:	8082                	ret

20013632 <__metal_driver_sifive_fe310_g000_pll_init>:
__metal_driver_sifive_fe310_g000_pll_init():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:162
    struct __metal_driver_sifive_fe310_g000_pll *pll) {
20013632:	7139                	addi	sp,sp,-64
20013634:	de06                	sw	ra,60(sp)
20013636:	dc22                	sw	s0,56(sp)
20013638:	0080                	addi	s0,sp,64
2001363a:	fca42623          	sw	a0,-52(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:164
        __metal_driver_sifive_fe310_g000_pll_pllref(&(pll->clock));
2001363e:	fcc42783          	lw	a5,-52(s0)
20013642:	853e                	mv	a0,a5
20013644:	3701                	jal	20013544 <__metal_driver_sifive_fe310_g000_pll_pllref>
20013646:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:165
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
2001364a:	3785                	jal	200135aa <__metal_driver_sifive_fe310_g000_pll_init_rate>
2001364c:	fea42423          	sw	a0,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:166
    long config_offset = __metal_driver_sifive_fe310_g000_pll_config_offset();
20013650:	37a9                	jal	2001359a <__metal_driver_sifive_fe310_g000_pll_config_offset>
20013652:	fea42223          	sw	a0,-28(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:167
    long base = __metal_driver_sifive_fe310_g000_prci_base();
20013656:	37ad                	jal	200135c0 <__metal_driver_sifive_fe310_g000_prci_base>
20013658:	fea42023          	sw	a0,-32(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:169
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
2001365c:	fe042703          	lw	a4,-32(s0)
20013660:	fe442783          	lw	a5,-28(s0)
20013664:	97ba                	add	a5,a5,a4
20013666:	fcf42e23          	sw	a5,-36(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:173
    _metal_clock_call_all_callbacks(pll->clock._pre_rate_change_callback);
2001366a:	fcc42783          	lw	a5,-52(s0)
2001366e:	43dc                	lw	a5,4(a5)
20013670:	853e                	mv	a0,a5
20013672:	2bd5                	jal	20013c66 <_metal_clock_call_all_callbacks>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:177
    if ((__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL) != 0)
20013674:	fdc42783          	lw	a5,-36(s0)
20013678:	4398                	lw	a4,0(a5)
2001367a:	67c1                	lui	a5,0x10
2001367c:	8ff9                	and	a5,a5,a4
2001367e:	cb91                	beqz	a5,20013692 <__metal_driver_sifive_fe310_g000_pll_init+0x60>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:178
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
20013680:	fdc42783          	lw	a5,-36(s0)
20013684:	4398                	lw	a4,0(a5)
20013686:	77c1                	lui	a5,0xffff0
20013688:	17fd                	addi	a5,a5,-1
2001368a:	8f7d                	and	a4,a4,a5
2001368c:	fdc42783          	lw	a5,-36(s0)
20013690:	c398                	sw	a4,0(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:181
    if (pllref != NULL)
20013692:	fec42783          	lw	a5,-20(s0)
20013696:	cb91                	beqz	a5,200136aa <__metal_driver_sifive_fe310_g000_pll_init+0x78>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:182
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_REFSEL;
20013698:	fdc42783          	lw	a5,-36(s0)
2001369c:	4398                	lw	a4,0(a5)
2001369e:	000207b7          	lui	a5,0x20
200136a2:	8f5d                	or	a4,a4,a5
200136a4:	fdc42783          	lw	a5,-36(s0)
200136a8:	c398                	sw	a4,0(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:187
    pll->clock.vtable->set_rate_hz(&(pll->clock), init_rate);
200136aa:	fcc42783          	lw	a5,-52(s0)
200136ae:	439c                	lw	a5,0(a5)
200136b0:	43d8                	lw	a4,4(a5)
200136b2:	fcc42783          	lw	a5,-52(s0)
200136b6:	fe842583          	lw	a1,-24(s0)
200136ba:	853e                	mv	a0,a5
200136bc:	9702                	jalr	a4
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:190
    _metal_clock_call_all_callbacks(pll->clock._post_rate_change_callback);
200136be:	fcc42783          	lw	a5,-52(s0)
200136c2:	479c                	lw	a5,8(a5)
200136c4:	853e                	mv	a0,a5
200136c6:	2345                	jal	20013c66 <_metal_clock_call_all_callbacks>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:191
}
200136c8:	0001                	nop
200136ca:	50f2                	lw	ra,60(sp)
200136cc:	5462                	lw	s0,56(sp)
200136ce:	6121                	addi	sp,sp,64
200136d0:	8082                	ret

200136d2 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_get_rate_hz():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:194
    const struct metal_clock *clock) {
200136d2:	711d                	addi	sp,sp,-96
200136d4:	ce86                	sw	ra,92(sp)
200136d6:	cca2                	sw	s0,88(sp)
200136d8:	1080                	addi	s0,sp,96
200136da:	faa42623          	sw	a0,-84(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:196
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
200136de:	fac42503          	lw	a0,-84(s0)
200136e2:	358d                	jal	20013544 <__metal_driver_sifive_fe310_g000_pll_pllref>
200136e4:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:198
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
200136e8:	fac42503          	lw	a0,-84(s0)
200136ec:	3d3d                	jal	2001352a <__metal_driver_sifive_fe310_g000_pll_pllsel0>
200136ee:	fea42423          	sw	a0,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:200
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
200136f2:	fac42503          	lw	a0,-84(s0)
200136f6:	3555                	jal	2001359a <__metal_driver_sifive_fe310_g000_pll_config_offset>
200136f8:	fea42223          	sw	a0,-28(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:202
        __metal_driver_sifive_fe310_g000_pll_config_base(clock);
200136fc:	fac42503          	lw	a0,-84(s0)
20013700:	3561                	jal	20013588 <__metal_driver_sifive_fe310_g000_pll_config_base>
20013702:	fea42023          	sw	a0,-32(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:204
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20013706:	fac42503          	lw	a0,-84(s0)
2001370a:	35ad                	jal	20013574 <__metal_driver_sifive_fe310_g000_pll_divider_offset>
2001370c:	fca42e23          	sw	a0,-36(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:206
        __metal_driver_sifive_fe310_g000_pll_divider_base(clock);
20013710:	fac42503          	lw	a0,-84(s0)
20013714:	35a9                	jal	2001355e <__metal_driver_sifive_fe310_g000_pll_divider_base>
20013716:	fca42c23          	sw	a0,-40(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:208
        __metal_driver_sifive_fe310_g000_prci_vtable();
2001371a:	3d65                	jal	200135d2 <__metal_driver_sifive_fe310_g000_prci_vtable>
2001371c:	fca42a23          	sw	a0,-44(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:210
    long cfg = vtable->get_reg(config_base, config_offset);
20013720:	fd442783          	lw	a5,-44(s0)
20013724:	439c                	lw	a5,0(a5)
20013726:	fe442583          	lw	a1,-28(s0)
2001372a:	fe042503          	lw	a0,-32(s0)
2001372e:	9782                	jalr	a5
20013730:	fca42823          	sw	a0,-48(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:211
    long div = vtable->get_reg(divider_base, divider_offset);
20013734:	fd442783          	lw	a5,-44(s0)
20013738:	439c                	lw	a5,0(a5)
2001373a:	fdc42583          	lw	a1,-36(s0)
2001373e:	fd842503          	lw	a0,-40(s0)
20013742:	9782                	jalr	a5
20013744:	fca42623          	sw	a0,-52(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:215
    if (__METAL_GET_FIELD(cfg, PLL_SEL) == 0)
20013748:	fd042703          	lw	a4,-48(s0)
2001374c:	67c1                	lui	a5,0x10
2001374e:	8f7d                	and	a4,a4,a5
20013750:	67c1                	lui	a5,0x10
20013752:	00f77763          	bgeu	a4,a5,20013760 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x8e>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:216
        return metal_clock_get_rate_hz(pllsel0);
20013756:	fe842503          	lw	a0,-24(s0)
2001375a:	23b1                	jal	20013ca6 <metal_clock_get_rate_hz>
2001375c:	87aa                	mv	a5,a0
2001375e:	a8d9                	j	20013834 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x162>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:221
        __METAL_GET_FIELD(cfg, PLL_REFSEL) ? pllref : pllsel0);
20013760:	fd042703          	lw	a4,-48(s0)
20013764:	000207b7          	lui	a5,0x20
20013768:	8f7d                	and	a4,a4,a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220
    long ref_hz = metal_clock_get_rate_hz(
2001376a:	000207b7          	lui	a5,0x20
2001376e:	00f76563          	bltu	a4,a5,20013778 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xa6>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 1)
20013772:	fec42783          	lw	a5,-20(s0)
20013776:	a019                	j	2001377c <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xaa>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 2)
20013778:	fe842783          	lw	a5,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 4)
2001377c:	853e                	mv	a0,a5
2001377e:	2325                	jal	20013ca6 <metal_clock_get_rate_hz>
20013780:	fca42423          	sw	a0,-56(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:225 (discriminator 4)
    if (__METAL_GET_FIELD(cfg, PLL_BYPASS))
20013784:	fd042703          	lw	a4,-48(s0)
20013788:	000407b7          	lui	a5,0x40
2001378c:	8f7d                	and	a4,a4,a5
2001378e:	000407b7          	lui	a5,0x40
20013792:	00f76563          	bltu	a4,a5,2001379c <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xca>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:226
        return ref_hz;
20013796:	fc842783          	lw	a5,-56(s0)
2001379a:	a869                	j	20013834 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x162>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:229
    long div_r = __METAL_GET_FIELD(cfg, PLL_R) + 1;
2001379c:	fd042783          	lw	a5,-48(s0)
200137a0:	8b9d                	andi	a5,a5,7
200137a2:	0785                	addi	a5,a5,1
200137a4:	fcf42223          	sw	a5,-60(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:230
    long mul_f = 2 * (__METAL_GET_FIELD(cfg, PLL_F) + 1);
200137a8:	fd042783          	lw	a5,-48(s0)
200137ac:	3f07f793          	andi	a5,a5,1008
200137b0:	8391                	srli	a5,a5,0x4
200137b2:	0785                	addi	a5,a5,1
200137b4:	0786                	slli	a5,a5,0x1
200137b6:	fcf42023          	sw	a5,-64(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:231
    if (__METAL_GET_FIELD(cfg, PLL_Q) == 0)
200137ba:	fd042703          	lw	a4,-48(s0)
200137be:	6785                	lui	a5,0x1
200137c0:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
200137c4:	8f7d                	and	a4,a4,a5
200137c6:	3ff00793          	li	a5,1023
200137ca:	00e7e463          	bltu	a5,a4,200137d2 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x100>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:232
        return -1;
200137ce:	57fd                	li	a5,-1
200137d0:	a095                	j	20013834 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x162>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:233
    long div_q = 1 << __METAL_GET_FIELD(cfg, PLL_Q);
200137d2:	fd042703          	lw	a4,-48(s0)
200137d6:	6785                	lui	a5,0x1
200137d8:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
200137dc:	8ff9                	and	a5,a5,a4
200137de:	83a9                	srli	a5,a5,0xa
200137e0:	4705                	li	a4,1
200137e2:	00f717b3          	sll	a5,a4,a5
200137e6:	faf42e23          	sw	a5,-68(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:238
    long pllout = (((ref_hz / div_r) * mul_f) / div_q);
200137ea:	fc842703          	lw	a4,-56(s0)
200137ee:	fc442783          	lw	a5,-60(s0)
200137f2:	02f74733          	div	a4,a4,a5
200137f6:	fc042783          	lw	a5,-64(s0)
200137fa:	02f70733          	mul	a4,a4,a5
200137fe:	fbc42783          	lw	a5,-68(s0)
20013802:	02f747b3          	div	a5,a4,a5
20013806:	faf42c23          	sw	a5,-72(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:239
    if (__METAL_GET_FIELD(div, DIV_1))
2001380a:	fcc42783          	lw	a5,-52(s0)
2001380e:	1007f713          	andi	a4,a5,256
20013812:	0ff00793          	li	a5,255
20013816:	00e7f563          	bgeu	a5,a4,20013820 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x14e>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:240
        return pllout;
2001381a:	fb842783          	lw	a5,-72(s0)
2001381e:	a819                	j	20013834 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x162>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:242
    return pllout / (2 * (__METAL_GET_FIELD(div, DIV_DIV) + 1));
20013820:	fb842703          	lw	a4,-72(s0)
20013824:	fcc42783          	lw	a5,-52(s0)
20013828:	03f7f793          	andi	a5,a5,63
2001382c:	0785                	addi	a5,a5,1
2001382e:	0786                	slli	a5,a5,0x1
20013830:	02f757b3          	divu	a5,a4,a5
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:243
}
20013834:	853e                	mv	a0,a5
20013836:	40f6                	lw	ra,92(sp)
20013838:	4466                	lw	s0,88(sp)
2001383a:	6125                	addi	sp,sp,96
2001383c:	8082                	ret

2001383e <find_closest_config>:
find_closest_config():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:253
static int find_closest_config(long ref_hz, long rate) {
2001383e:	7139                	addi	sp,sp,-64
20013840:	de06                	sw	ra,60(sp)
20013842:	dc22                	sw	s0,56(sp)
20013844:	0080                	addi	s0,sp,64
20013846:	fca42623          	sw	a0,-52(s0)
2001384a:	fcb42423          	sw	a1,-56(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:254
    int closest_index = -1;
2001384e:	57fd                	li	a5,-1
20013850:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:255
    long closest_diff = LONG_MAX;
20013854:	800007b7          	lui	a5,0x80000
20013858:	fff7c793          	not	a5,a5
2001385c:	fef42423          	sw	a5,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
20013860:	04300793          	li	a5,67
20013864:	fef42223          	sw	a5,-28(s0)
20013868:	a0ad                	j	200138d2 <find_closest_config+0x94>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:261
        long config_freq = get_pll_config_freq(ref_hz, &(pll_configs[i]));
2001386a:	fcc42683          	lw	a3,-52(s0)
2001386e:	fe442783          	lw	a5,-28(s0)
20013872:	00579713          	slli	a4,a5,0x5
20013876:	200107b7          	lui	a5,0x20010
2001387a:	4ec78793          	addi	a5,a5,1260 # 200104ec <pll_configs>
2001387e:	97ba                	add	a5,a5,a4
20013880:	85be                	mv	a1,a5
20013882:	8536                	mv	a0,a3
20013884:	3385                	jal	200135e4 <get_pll_config_freq>
20013886:	fea42023          	sw	a0,-32(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:262
        if (config_freq != PLL_CONFIG_NOT_VALID) {
2001388a:	fe042703          	lw	a4,-32(s0)
2001388e:	57fd                	li	a5,-1
20013890:	02f70c63          	beq	a4,a5,200138c8 <find_closest_config+0x8a>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:263
            long freq_diff = abs(config_freq - rate);
20013894:	fe042703          	lw	a4,-32(s0)
20013898:	fc842783          	lw	a5,-56(s0)
2001389c:	8f1d                	sub	a4,a4,a5
2001389e:	41f75793          	srai	a5,a4,0x1f
200138a2:	8f3d                	xor	a4,a4,a5
200138a4:	40f707b3          	sub	a5,a4,a5
200138a8:	fcf42e23          	sw	a5,-36(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:264
            if (freq_diff < closest_diff) {
200138ac:	fdc42703          	lw	a4,-36(s0)
200138b0:	fe842783          	lw	a5,-24(s0)
200138b4:	00f75a63          	bge	a4,a5,200138c8 <find_closest_config+0x8a>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:265
                closest_index = i;
200138b8:	fe442783          	lw	a5,-28(s0)
200138bc:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:266
                closest_diff = freq_diff;
200138c0:	fdc42783          	lw	a5,-36(s0)
200138c4:	fef42423          	sw	a5,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:260
         i--) {
200138c8:	fe442783          	lw	a5,-28(s0)
200138cc:	17fd                	addi	a5,a5,-1
200138ce:	fef42223          	sw	a5,-28(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259 (discriminator 1)
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
200138d2:	fe442783          	lw	a5,-28(s0)
200138d6:	f807dae3          	bgez	a5,2001386a <find_closest_config+0x2c>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:271
    return closest_index;
200138da:	fec42783          	lw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:272
}
200138de:	853e                	mv	a0,a5
200138e0:	50f2                	lw	ra,60(sp)
200138e2:	5462                	lw	s0,56(sp)
200138e4:	6121                	addi	sp,sp,64
200138e6:	8082                	ret

200138e8 <configure_pll>:
configure_pll():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:289
                          const struct pll_config_t *config) {
200138e8:	7179                	addi	sp,sp,-48
200138ea:	d606                	sw	ra,44(sp)
200138ec:	d422                	sw	s0,40(sp)
200138ee:	1800                	addi	s0,sp,48
200138f0:	fca42e23          	sw	a0,-36(s0)
200138f4:	fcb42c23          	sw	a1,-40(s0)
200138f8:	fcc42a23          	sw	a2,-44(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:290
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_R);
200138fc:	fdc42783          	lw	a5,-36(s0)
20013900:	439c                	lw	a5,0(a5)
20013902:	ff87f713          	andi	a4,a5,-8
20013906:	fdc42783          	lw	a5,-36(s0)
2001390a:	c398                	sw	a4,0(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:291
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_R_SHIFT(config->r);
2001390c:	fdc42783          	lw	a5,-36(s0)
20013910:	4398                	lw	a4,0(a5)
20013912:	fd442783          	lw	a5,-44(s0)
20013916:	4b9c                	lw	a5,16(a5)
20013918:	8b9d                	andi	a5,a5,7
2001391a:	8f5d                	or	a4,a4,a5
2001391c:	fdc42783          	lw	a5,-36(s0)
20013920:	c398                	sw	a4,0(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:293
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_F);
20013922:	fdc42783          	lw	a5,-36(s0)
20013926:	439c                	lw	a5,0(a5)
20013928:	c0f7f713          	andi	a4,a5,-1009
2001392c:	fdc42783          	lw	a5,-36(s0)
20013930:	c398                	sw	a4,0(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:294
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_F_SHIFT(config->f);
20013932:	fdc42783          	lw	a5,-36(s0)
20013936:	4398                	lw	a4,0(a5)
20013938:	fd442783          	lw	a5,-44(s0)
2001393c:	4bdc                	lw	a5,20(a5)
2001393e:	0792                	slli	a5,a5,0x4
20013940:	3f07f793          	andi	a5,a5,1008
20013944:	8f5d                	or	a4,a4,a5
20013946:	fdc42783          	lw	a5,-36(s0)
2001394a:	c398                	sw	a4,0(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:296
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_Q);
2001394c:	fdc42783          	lw	a5,-36(s0)
20013950:	4398                	lw	a4,0(a5)
20013952:	77fd                	lui	a5,0xfffff
20013954:	3ff78793          	addi	a5,a5,1023 # fffff3ff <metal_dtim_0_memory_end+0x7fffb3ff>
20013958:	8f7d                	and	a4,a4,a5
2001395a:	fdc42783          	lw	a5,-36(s0)
2001395e:	c398                	sw	a4,0(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:297
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_Q_SHIFT(config->q);
20013960:	fdc42783          	lw	a5,-36(s0)
20013964:	4398                	lw	a4,0(a5)
20013966:	fd442783          	lw	a5,-44(s0)
2001396a:	4f9c                	lw	a5,24(a5)
2001396c:	00a79693          	slli	a3,a5,0xa
20013970:	6785                	lui	a5,0x1
20013972:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20013976:	8ff5                	and	a5,a5,a3
20013978:	8f5d                	or	a4,a4,a5
2001397a:	fdc42783          	lw	a5,-36(s0)
2001397e:	c398                	sw	a4,0(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:299
    if (config->d < 0) {
20013980:	fd442783          	lw	a5,-44(s0)
20013984:	4fdc                	lw	a5,28(a5)
20013986:	0207db63          	bgez	a5,200139bc <configure_pll+0xd4>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:301
        __METAL_ACCESS_ONCE(plloutdiv) |= DIV_1;
2001398a:	fd842783          	lw	a5,-40(s0)
2001398e:	439c                	lw	a5,0(a5)
20013990:	1007e713          	ori	a4,a5,256
20013994:	fd842783          	lw	a5,-40(s0)
20013998:	c398                	sw	a4,0(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:303
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
2001399a:	fd842783          	lw	a5,-40(s0)
2001399e:	439c                	lw	a5,0(a5)
200139a0:	fc07f713          	andi	a4,a5,-64
200139a4:	fd842783          	lw	a5,-40(s0)
200139a8:	c398                	sw	a4,0(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:304
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(1);
200139aa:	fd842783          	lw	a5,-40(s0)
200139ae:	439c                	lw	a5,0(a5)
200139b0:	0017e713          	ori	a4,a5,1
200139b4:	fd842783          	lw	a5,-40(s0)
200139b8:	c398                	sw	a4,0(a5)
200139ba:	a82d                	j	200139f4 <configure_pll+0x10c>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:306
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_1);
200139bc:	fd842783          	lw	a5,-40(s0)
200139c0:	439c                	lw	a5,0(a5)
200139c2:	eff7f713          	andi	a4,a5,-257
200139c6:	fd842783          	lw	a5,-40(s0)
200139ca:	c398                	sw	a4,0(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:308
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
200139cc:	fd842783          	lw	a5,-40(s0)
200139d0:	439c                	lw	a5,0(a5)
200139d2:	fc07f713          	andi	a4,a5,-64
200139d6:	fd842783          	lw	a5,-40(s0)
200139da:	c398                	sw	a4,0(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:309
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(config->d);
200139dc:	fd842783          	lw	a5,-40(s0)
200139e0:	4398                	lw	a4,0(a5)
200139e2:	fd442783          	lw	a5,-44(s0)
200139e6:	4fdc                	lw	a5,28(a5)
200139e8:	03f7f793          	andi	a5,a5,63
200139ec:	8f5d                	or	a4,a4,a5
200139ee:	fd842783          	lw	a5,-40(s0)
200139f2:	c398                	sw	a4,0(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:312
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_BYPASS);
200139f4:	fdc42783          	lw	a5,-36(s0)
200139f8:	4398                	lw	a4,0(a5)
200139fa:	fffc07b7          	lui	a5,0xfffc0
200139fe:	17fd                	addi	a5,a5,-1
20013a00:	8f7d                	and	a4,a4,a5
20013a02:	fdc42783          	lw	a5,-36(s0)
20013a06:	c398                	sw	a4,0(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:317
    __metal_driver_riscv_clint0_command_request(__METAL_DT_RISCV_CLINT0_HANDLE,
20013a08:	fe040793          	addi	a5,s0,-32
20013a0c:	863e                	mv	a2,a5
20013a0e:	4585                	li	a1,1
20013a10:	800007b7          	lui	a5,0x80000
20013a14:	49078513          	addi	a0,a5,1168 # 80000490 <metal_dtim_0_memory_end+0xffffc490>
20013a18:	d6dfd0ef          	jal	ra,20011784 <__metal_driver_riscv_clint0_command_request>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:319
    mtime_end = mtime + PLL_LOCK_WAIT_TICKS;
20013a1c:	fe042683          	lw	a3,-32(s0)
20013a20:	fe442703          	lw	a4,-28(s0)
20013a24:	4591                	li	a1,4
20013a26:	4601                	li	a2,0
20013a28:	00b687b3          	add	a5,a3,a1
20013a2c:	853e                	mv	a0,a5
20013a2e:	00d53533          	sltu	a0,a0,a3
20013a32:	00c70833          	add	a6,a4,a2
20013a36:	01050733          	add	a4,a0,a6
20013a3a:	883a                	mv	a6,a4
20013a3c:	fef42423          	sw	a5,-24(s0)
20013a40:	ff042623          	sw	a6,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:320
    while (mtime <= mtime_end) {
20013a44:	a819                	j	20013a5a <configure_pll+0x172>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
        __metal_driver_riscv_clint0_command_request(
20013a46:	fe040793          	addi	a5,s0,-32
20013a4a:	863e                	mv	a2,a5
20013a4c:	4585                	li	a1,1
20013a4e:	800007b7          	lui	a5,0x80000
20013a52:	49078513          	addi	a0,a5,1168 # 80000490 <metal_dtim_0_memory_end+0xffffc490>
20013a56:	d2ffd0ef          	jal	ra,20011784 <__metal_driver_riscv_clint0_command_request>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:320
    while (mtime <= mtime_end) {
20013a5a:	fe042783          	lw	a5,-32(s0)
20013a5e:	fe442803          	lw	a6,-28(s0)
20013a62:	fec42703          	lw	a4,-20(s0)
20013a66:	86c2                	mv	a3,a6
20013a68:	00d76b63          	bltu	a4,a3,20013a7e <configure_pll+0x196>
20013a6c:	fec42703          	lw	a4,-20(s0)
20013a70:	86c2                	mv	a3,a6
20013a72:	fcd71ae3          	bne	a4,a3,20013a46 <configure_pll+0x15e>
20013a76:	fe842703          	lw	a4,-24(s0)
20013a7a:	fcf776e3          	bgeu	a4,a5,20013a46 <configure_pll+0x15e>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:339
    while ((__METAL_ACCESS_ONCE(pllcfg) & PLL_LOCK) == 0)
20013a7e:	0001                	nop
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:339 (discriminator 1)
20013a80:	fdc42783          	lw	a5,-36(s0)
20013a84:	439c                	lw	a5,0(a5)
20013a86:	fe07dde3          	bgez	a5,20013a80 <configure_pll+0x198>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:341
}
20013a8a:	0001                	nop
20013a8c:	50b2                	lw	ra,44(sp)
20013a8e:	5422                	lw	s0,40(sp)
20013a90:	6145                	addi	sp,sp,48
20013a92:	8082                	ret

20013a94 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_set_rate_hz():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:344
                                                      long rate) {
20013a94:	715d                	addi	sp,sp,-80
20013a96:	c686                	sw	ra,76(sp)
20013a98:	c4a2                	sw	s0,72(sp)
20013a9a:	0880                	addi	s0,sp,80
20013a9c:	faa42e23          	sw	a0,-68(s0)
20013aa0:	fab42c23          	sw	a1,-72(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:346
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
20013aa4:	fbc42503          	lw	a0,-68(s0)
20013aa8:	a9dff0ef          	jal	ra,20013544 <__metal_driver_sifive_fe310_g000_pll_pllref>
20013aac:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:348
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
20013ab0:	fbc42503          	lw	a0,-68(s0)
20013ab4:	a77ff0ef          	jal	ra,2001352a <__metal_driver_sifive_fe310_g000_pll_pllsel0>
20013ab8:	fea42423          	sw	a0,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:350
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
20013abc:	fbc42503          	lw	a0,-68(s0)
20013ac0:	3ce9                	jal	2001359a <__metal_driver_sifive_fe310_g000_pll_config_offset>
20013ac2:	fea42223          	sw	a0,-28(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:352
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20013ac6:	fbc42503          	lw	a0,-68(s0)
20013aca:	aabff0ef          	jal	ra,20013574 <__metal_driver_sifive_fe310_g000_pll_divider_offset>
20013ace:	fea42023          	sw	a0,-32(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:353
    long base = __metal_driver_sifive_fe310_g000_prci_base();
20013ad2:	34fd                	jal	200135c0 <__metal_driver_sifive_fe310_g000_prci_base>
20013ad4:	fca42e23          	sw	a0,-36(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:355
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
20013ad8:	fdc42703          	lw	a4,-36(s0)
20013adc:	fe442783          	lw	a5,-28(s0)
20013ae0:	97ba                	add	a5,a5,a4
20013ae2:	fcf42c23          	sw	a5,-40(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:356
    __metal_io_u32 *plloutdiv = (__metal_io_u32 *)(base + divider_offset);
20013ae6:	fdc42703          	lw	a4,-36(s0)
20013aea:	fe042783          	lw	a5,-32(s0)
20013aee:	97ba                	add	a5,a5,a4
20013af0:	fcf42a23          	sw	a5,-44(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:359
    if (__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL)
20013af4:	fd842783          	lw	a5,-40(s0)
20013af8:	4398                	lw	a4,0(a5)
20013afa:	67c1                	lui	a5,0x10
20013afc:	8ff9                	and	a5,a5,a4
20013afe:	cb91                	beqz	a5,20013b12 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x7e>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:360
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
20013b00:	fd842783          	lw	a5,-40(s0)
20013b04:	4398                	lw	a4,0(a5)
20013b06:	77c1                	lui	a5,0xffff0
20013b08:	17fd                	addi	a5,a5,-1
20013b0a:	8f7d                	and	a4,a4,a5
20013b0c:	fd842783          	lw	a5,-40(s0)
20013b10:	c398                	sw	a4,0(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365
        __METAL_ACCESS_ONCE(pllcfg) & PLL_REFSEL ? pllref : pllsel0);
20013b12:	fd842783          	lw	a5,-40(s0)
20013b16:	4398                	lw	a4,0(a5)
20013b18:	000207b7          	lui	a5,0x20
20013b1c:	8ff9                	and	a5,a5,a4
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:364
    long ref_hz = metal_clock_get_rate_hz(
20013b1e:	c781                	beqz	a5,20013b26 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x92>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:364 (discriminator 1)
20013b20:	fec42783          	lw	a5,-20(s0)
20013b24:	a019                	j	20013b2a <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x96>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:364 (discriminator 2)
20013b26:	fe842783          	lw	a5,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:364 (discriminator 4)
20013b2a:	853e                	mv	a0,a5
20013b2c:	2aad                	jal	20013ca6 <metal_clock_get_rate_hz>
20013b2e:	fca42823          	sw	a0,-48(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:369 (discriminator 4)
    if ((ref_hz * 3 / 4) <= rate && (ref_hz * 5 / 4) >= rate) {
20013b32:	fd042703          	lw	a4,-48(s0)
20013b36:	87ba                	mv	a5,a4
20013b38:	0786                	slli	a5,a5,0x1
20013b3a:	97ba                	add	a5,a5,a4
20013b3c:	41f7d713          	srai	a4,a5,0x1f
20013b40:	8b0d                	andi	a4,a4,3
20013b42:	97ba                	add	a5,a5,a4
20013b44:	8789                	srai	a5,a5,0x2
20013b46:	873e                	mv	a4,a5
20013b48:	fb842783          	lw	a5,-72(s0)
20013b4c:	02e7cb63          	blt	a5,a4,20013b82 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xee>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:369 (discriminator 1)
20013b50:	fd042703          	lw	a4,-48(s0)
20013b54:	87ba                	mv	a5,a4
20013b56:	078a                	slli	a5,a5,0x2
20013b58:	97ba                	add	a5,a5,a4
20013b5a:	41f7d713          	srai	a4,a5,0x1f
20013b5e:	8b0d                	andi	a4,a4,3
20013b60:	97ba                	add	a5,a5,a4
20013b62:	8789                	srai	a5,a5,0x2
20013b64:	873e                	mv	a4,a5
20013b66:	fb842783          	lw	a5,-72(s0)
20013b6a:	00f74c63          	blt	a4,a5,20013b82 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xee>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
20013b6e:	fd842783          	lw	a5,-40(s0)
20013b72:	4398                	lw	a4,0(a5)
20013b74:	000407b7          	lui	a5,0x40
20013b78:	8f5d                	or	a4,a4,a5
20013b7a:	fd842783          	lw	a5,-40(s0)
20013b7e:	c398                	sw	a4,0(a5)
20013b80:	a0b1                	j	20013bcc <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x138>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:372
        int config_index = find_closest_config(ref_hz, rate);
20013b82:	fb842583          	lw	a1,-72(s0)
20013b86:	fd042503          	lw	a0,-48(s0)
20013b8a:	3955                	jal	2001383e <find_closest_config>
20013b8c:	fca42623          	sw	a0,-52(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:373
        if (config_index != -1) {
20013b90:	fcc42703          	lw	a4,-52(s0)
20013b94:	57fd                	li	a5,-1
20013b96:	02f70263          	beq	a4,a5,20013bba <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x126>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:374
            configure_pll(pllcfg, plloutdiv, &(pll_configs[config_index]));
20013b9a:	fcc42783          	lw	a5,-52(s0)
20013b9e:	00579713          	slli	a4,a5,0x5
20013ba2:	200107b7          	lui	a5,0x20010
20013ba6:	4ec78793          	addi	a5,a5,1260 # 200104ec <pll_configs>
20013baa:	97ba                	add	a5,a5,a4
20013bac:	863e                	mv	a2,a5
20013bae:	fd442583          	lw	a1,-44(s0)
20013bb2:	fd842503          	lw	a0,-40(s0)
20013bb6:	3b0d                	jal	200138e8 <configure_pll>
20013bb8:	a811                	j	20013bcc <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x138>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:377
            __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
20013bba:	fd842783          	lw	a5,-40(s0)
20013bbe:	4398                	lw	a4,0(a5)
20013bc0:	000407b7          	lui	a5,0x40
20013bc4:	8f5d                	or	a4,a4,a5
20013bc6:	fd842783          	lw	a5,-40(s0)
20013bca:	c398                	sw	a4,0(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:382
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_SEL;
20013bcc:	fd842783          	lw	a5,-40(s0)
20013bd0:	4398                	lw	a4,0(a5)
20013bd2:	67c1                	lui	a5,0x10
20013bd4:	8f5d                	or	a4,a4,a5
20013bd6:	fd842783          	lw	a5,-40(s0)
20013bda:	c398                	sw	a4,0(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:384
    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
20013bdc:	fbc42503          	lw	a0,-68(s0)
20013be0:	3ccd                	jal	200136d2 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>
20013be2:	87aa                	mv	a5,a0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:385
}
20013be4:	853e                	mv	a0,a5
20013be6:	40b6                	lw	ra,76(sp)
20013be8:	4426                	lw	s0,72(sp)
20013bea:	6161                	addi	sp,sp,80
20013bec:	8082                	ret

20013bee <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1362
{
20013bee:	1141                	addi	sp,sp,-16
20013bf0:	c622                	sw	s0,12(sp)
20013bf2:	0800                	addi	s0,sp,16
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1363
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
20013bf4:	100087b7          	lui	a5,0x10008
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:1364
}
20013bf8:	853e                	mv	a0,a5
20013bfa:	4432                	lw	s0,12(sp)
20013bfc:	0141                	addi	sp,sp,16
20013bfe:	8082                	ret

20013c00 <__metal_driver_sifive_fe310_g000_prci_get_reg>:
__metal_driver_sifive_fe310_g000_prci_get_reg():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:12

#include <metal/drivers/sifive_fe310-g000_prci.h>
#include <metal/machine.h>

long __metal_driver_sifive_fe310_g000_prci_get_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset) {
20013c00:	7179                	addi	sp,sp,-48
20013c02:	d606                	sw	ra,44(sp)
20013c04:	d422                	sw	s0,40(sp)
20013c06:	1800                	addi	s0,sp,48
20013c08:	fca42e23          	sw	a0,-36(s0)
20013c0c:	fcb42c23          	sw	a1,-40(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:13
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
20013c10:	3ff9                	jal	20013bee <__metal_driver_sifive_fe310_g000_prci_base>
20013c12:	87aa                	mv	a5,a0
20013c14:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:14
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset));
20013c18:	fd842703          	lw	a4,-40(s0)
20013c1c:	fec42783          	lw	a5,-20(s0)
20013c20:	97ba                	add	a5,a5,a4
20013c22:	439c                	lw	a5,0(a5)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:15
}
20013c24:	853e                	mv	a0,a5
20013c26:	50b2                	lw	ra,44(sp)
20013c28:	5422                	lw	s0,40(sp)
20013c2a:	6145                	addi	sp,sp,48
20013c2c:	8082                	ret

20013c2e <__metal_driver_sifive_fe310_g000_prci_set_reg>:
__metal_driver_sifive_fe310_g000_prci_set_reg():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:19

long __metal_driver_sifive_fe310_g000_prci_set_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset,
    long value) {
20013c2e:	7179                	addi	sp,sp,-48
20013c30:	d606                	sw	ra,44(sp)
20013c32:	d422                	sw	s0,40(sp)
20013c34:	1800                	addi	s0,sp,48
20013c36:	fca42e23          	sw	a0,-36(s0)
20013c3a:	fcb42c23          	sw	a1,-40(s0)
20013c3e:	fcc42a23          	sw	a2,-44(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:20
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
20013c42:	3775                	jal	20013bee <__metal_driver_sifive_fe310_g000_prci_base>
20013c44:	87aa                	mv	a5,a0
20013c46:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:21
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset)) = value;
20013c4a:	fd842703          	lw	a4,-40(s0)
20013c4e:	fec42783          	lw	a5,-20(s0)
20013c52:	97ba                	add	a5,a5,a4
20013c54:	873e                	mv	a4,a5
20013c56:	fd442783          	lw	a5,-44(s0)
20013c5a:	c31c                	sw	a5,0(a4)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:22
}
20013c5c:	853e                	mv	a0,a5
20013c5e:	50b2                	lw	ra,44(sp)
20013c60:	5422                	lw	s0,40(sp)
20013c62:	6145                	addi	sp,sp,48
20013c64:	8082                	ret

20013c66 <_metal_clock_call_all_callbacks>:
_metal_clock_call_all_callbacks():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/metal/clock.h:50

/*!
 * @brief Call all callbacks in the linked list, if any are registered
 */
__inline__ void
_metal_clock_call_all_callbacks(const metal_clock_callback *const list) {
20013c66:	7179                	addi	sp,sp,-48
20013c68:	d606                	sw	ra,44(sp)
20013c6a:	d422                	sw	s0,40(sp)
20013c6c:	1800                	addi	s0,sp,48
20013c6e:	fca42e23          	sw	a0,-36(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/metal/clock.h:51
    const metal_clock_callback *current = list;
20013c72:	fdc42783          	lw	a5,-36(s0)
20013c76:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/metal/clock.h:52
    while (current) {
20013c7a:	a831                	j	20013c96 <_metal_clock_call_all_callbacks+0x30>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/metal/clock.h:53
        current->callback(current->priv);
20013c7c:	fec42783          	lw	a5,-20(s0)
20013c80:	4398                	lw	a4,0(a5)
20013c82:	fec42783          	lw	a5,-20(s0)
20013c86:	43dc                	lw	a5,4(a5)
20013c88:	853e                	mv	a0,a5
20013c8a:	9702                	jalr	a4
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/metal/clock.h:54
        current = current->_next;
20013c8c:	fec42783          	lw	a5,-20(s0)
20013c90:	479c                	lw	a5,8(a5)
20013c92:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/metal/clock.h:52
    while (current) {
20013c96:	fec42783          	lw	a5,-20(s0)
20013c9a:	f3ed                	bnez	a5,20013c7c <_metal_clock_call_all_callbacks+0x16>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/metal/clock.h:56
    }
}
20013c9c:	0001                	nop
20013c9e:	50b2                	lw	ra,44(sp)
20013ca0:	5422                	lw	s0,40(sp)
20013ca2:	6145                	addi	sp,sp,48
20013ca4:	8082                	ret

20013ca6 <metal_clock_get_rate_hz>:
metal_clock_get_rate_hz():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/metal/clock.h:110
 * @brief Returns the current rate of the given clock
 *
 * @param clk The handle for the clock
 * @return The current rate of the clock in Hz
 */
__inline__ long metal_clock_get_rate_hz(const struct metal_clock *clk) {
20013ca6:	1101                	addi	sp,sp,-32
20013ca8:	ce06                	sw	ra,28(sp)
20013caa:	cc22                	sw	s0,24(sp)
20013cac:	1000                	addi	s0,sp,32
20013cae:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/metal/clock.h:111
    return clk->vtable->get_rate_hz(clk);
20013cb2:	fec42783          	lw	a5,-20(s0)
20013cb6:	439c                	lw	a5,0(a5)
20013cb8:	439c                	lw	a5,0(a5)
20013cba:	fec42503          	lw	a0,-20(s0)
20013cbe:	9782                	jalr	a5
20013cc0:	87aa                	mv	a5,a0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/metal/clock.h:112
}
20013cc2:	853e                	mv	a0,a5
20013cc4:	40f2                	lw	ra,28(sp)
20013cc6:	4462                	lw	s0,24(sp)
20013cc8:	6105                	addi	sp,sp,32
20013cca:	8082                	ret

20013ccc <metal_clock_set_rate_hz>:
metal_clock_set_rate_hz():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/metal/clock.h:128
 * could be anything!
 *
 * Prior to and after the rate change of the clock, this will call the
 * registered pre- and post-rate change callbacks.
 */
__inline__ long metal_clock_set_rate_hz(struct metal_clock *clk, long hz) {
20013ccc:	7179                	addi	sp,sp,-48
20013cce:	d606                	sw	ra,44(sp)
20013cd0:	d422                	sw	s0,40(sp)
20013cd2:	1800                	addi	s0,sp,48
20013cd4:	fca42e23          	sw	a0,-36(s0)
20013cd8:	fcb42c23          	sw	a1,-40(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/metal/clock.h:129
    _metal_clock_call_all_callbacks(clk->_pre_rate_change_callback);
20013cdc:	fdc42783          	lw	a5,-36(s0)
20013ce0:	43dc                	lw	a5,4(a5)
20013ce2:	853e                	mv	a0,a5
20013ce4:	3749                	jal	20013c66 <_metal_clock_call_all_callbacks>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/metal/clock.h:131

    long out = clk->vtable->set_rate_hz(clk, hz);
20013ce6:	fdc42783          	lw	a5,-36(s0)
20013cea:	439c                	lw	a5,0(a5)
20013cec:	43dc                	lw	a5,4(a5)
20013cee:	fd842583          	lw	a1,-40(s0)
20013cf2:	fdc42503          	lw	a0,-36(s0)
20013cf6:	9782                	jalr	a5
20013cf8:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/metal/clock.h:133

    _metal_clock_call_all_callbacks(clk->_post_rate_change_callback);
20013cfc:	fdc42783          	lw	a5,-36(s0)
20013d00:	479c                	lw	a5,8(a5)
20013d02:	853e                	mv	a0,a5
20013d04:	378d                	jal	20013c66 <_metal_clock_call_all_callbacks>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/metal/clock.h:135

    return out;
20013d06:	fec42783          	lw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/metal/clock.h:136
}
20013d0a:	853e                	mv	a0,a5
20013d0c:	50b2                	lw	ra,44(sp)
20013d0e:	5422                	lw	s0,40(sp)
20013d10:	6145                	addi	sp,sp,48
20013d12:	8082                	ret

20013d14 <metal_cpu_interrupt_controller>:
metal_cpu_interrupt_controller():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/metal/cpu.h:224
 *
 * @param cpu The CPU device handle
 * @return The handle for the CPU interrupt controller
 */
__inline__ struct metal_interrupt *
metal_cpu_interrupt_controller(struct metal_cpu *cpu) {
20013d14:	1101                	addi	sp,sp,-32
20013d16:	ce06                	sw	ra,28(sp)
20013d18:	cc22                	sw	s0,24(sp)
20013d1a:	1000                	addi	s0,sp,32
20013d1c:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/metal/cpu.h:225
    return cpu->vtable->controller_interrupt(cpu);
20013d20:	fec42783          	lw	a5,-20(s0)
20013d24:	439c                	lw	a5,0(a5)
20013d26:	57dc                	lw	a5,44(a5)
20013d28:	fec42503          	lw	a0,-20(s0)
20013d2c:	9782                	jalr	a5
20013d2e:	87aa                	mv	a5,a0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/metal/cpu.h:226
}
20013d30:	853e                	mv	a0,a5
20013d32:	40f2                	lw	ra,28(sp)
20013d34:	4462                	lw	s0,24(sp)
20013d36:	6105                	addi	sp,sp,32
20013d38:	8082                	ret

20013d3a <metal_cpu_get>:
metal_cpu_get():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/cpu.c:7
/* SPDX-License-Identifier: Apache-2.0 */

#include <metal/cpu.h>
#include <metal/machine.h>

struct metal_cpu *metal_cpu_get(unsigned int hartid) {
20013d3a:	1101                	addi	sp,sp,-32
20013d3c:	ce22                	sw	s0,28(sp)
20013d3e:	1000                	addi	s0,sp,32
20013d40:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/cpu.c:8
    if (hartid < __METAL_DT_MAX_HARTS) {
20013d44:	fec42783          	lw	a5,-20(s0)
20013d48:	eb99                	bnez	a5,20013d5e <metal_cpu_get+0x24>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/cpu.c:9
        return (struct metal_cpu *)__metal_cpu_table[hartid];
20013d4a:	800007b7          	lui	a5,0x80000
20013d4e:	fec42703          	lw	a4,-20(s0)
20013d52:	070a                	slli	a4,a4,0x2
20013d54:	48c78793          	addi	a5,a5,1164 # 8000048c <metal_dtim_0_memory_end+0xffffc48c>
20013d58:	97ba                	add	a5,a5,a4
20013d5a:	439c                	lw	a5,0(a5)
20013d5c:	a011                	j	20013d60 <metal_cpu_get+0x26>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/cpu.c:11
    }
    return NULL;
20013d5e:	4781                	li	a5,0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/cpu.c:12
}
20013d60:	853e                	mv	a0,a5
20013d62:	4472                	lw	s0,28(sp)
20013d64:	6105                	addi	sp,sp,32
20013d66:	8082                	ret

20013d68 <metal_cpu_get_current_hartid>:
metal_cpu_get_current_hartid():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/cpu.c:14

int metal_cpu_get_current_hartid() {
20013d68:	1101                	addi	sp,sp,-32
20013d6a:	ce22                	sw	s0,28(sp)
20013d6c:	1000                	addi	s0,sp,32
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/cpu.c:17
#ifdef __riscv
    int mhartid;
    __asm__ volatile("csrr %0, mhartid" : "=r"(mhartid));
20013d6e:	f14027f3          	csrr	a5,mhartid
20013d72:	fef42623          	sw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/cpu.c:18
    return mhartid;
20013d76:	fec42783          	lw	a5,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/cpu.c:20
#endif
}
20013d7a:	853e                	mv	a0,a5
20013d7c:	4472                	lw	s0,28(sp)
20013d7e:	6105                	addi	sp,sp,32
20013d80:	8082                	ret

20013d82 <metal_shutdown>:
metal_shutdown():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/shutdown.c:17
    __metal_shutdown_exit(__METAL_DT_SHUTDOWN_HANDLE, code);
}
#else
#pragma message(                                                               \
    "There is no defined shutdown mechanism, metal_shutdown() will spin.")
void metal_shutdown(int code) {
20013d82:	1101                	addi	sp,sp,-32
20013d84:	ce22                	sw	s0,28(sp)
20013d86:	1000                	addi	s0,sp,32
20013d88:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/shutdown.c:19 (discriminator 1)
    while (1) {
        __asm__ volatile("nop");
20013d8c:	0001                	nop
20013d8e:	bffd                	j	20013d8c <metal_shutdown+0xa>
	...

20013e00 <__metal_vector_table>:
IRQ_0():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/vector.S:96
#endif
.option norvc
.global __metal_vector_table
__metal_vector_table:
IRQ_0:
        j metal_interrupt_vector_handler
20013e00:	d59fd06f          	j	20011b58 <metal_interrupt_vector_handler>

20013e04 <IRQ_1>:
IRQ_1():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/vector.S:98
IRQ_1:
        j metal_interrupt_vector_handler
20013e04:	d55fd06f          	j	20011b58 <metal_interrupt_vector_handler>

20013e08 <IRQ_2>:
IRQ_2():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/vector.S:100
IRQ_2:
        j metal_interrupt_vector_handler
20013e08:	d51fd06f          	j	20011b58 <metal_interrupt_vector_handler>

20013e0c <IRQ_3>:
IRQ_3():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/vector.S:102
IRQ_3:
        j metal_software_interrupt_vector_handler
20013e0c:	d7bfd06f          	j	20011b86 <metal_software_interrupt_vector_handler>

20013e10 <IRQ_4>:
IRQ_4():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/vector.S:104
IRQ_4:
        j metal_interrupt_vector_handler
20013e10:	d49fd06f          	j	20011b58 <metal_interrupt_vector_handler>

20013e14 <IRQ_5>:
IRQ_5():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/vector.S:106
IRQ_5:
        j metal_interrupt_vector_handler
20013e14:	d45fd06f          	j	20011b58 <metal_interrupt_vector_handler>

20013e18 <IRQ_6>:
IRQ_6():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/vector.S:108
IRQ_6:
        j metal_interrupt_vector_handler
20013e18:	d41fd06f          	j	20011b58 <metal_interrupt_vector_handler>

20013e1c <IRQ_7>:
IRQ_7():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/vector.S:110
IRQ_7:
        j metal_timer_interrupt_vector_handler
20013e1c:	e65fd06f          	j	20011c80 <metal_timer_interrupt_vector_handler>

20013e20 <IRQ_8>:
IRQ_8():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/vector.S:112
IRQ_8:
        j metal_interrupt_vector_handler
20013e20:	d39fd06f          	j	20011b58 <metal_interrupt_vector_handler>

20013e24 <IRQ_9>:
IRQ_9():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/vector.S:114
IRQ_9:
        j metal_interrupt_vector_handler
20013e24:	d35fd06f          	j	20011b58 <metal_interrupt_vector_handler>

20013e28 <IRQ_10>:
IRQ_10():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/vector.S:116
IRQ_10:
        j metal_interrupt_vector_handler
20013e28:	d31fd06f          	j	20011b58 <metal_interrupt_vector_handler>

20013e2c <IRQ_11>:
IRQ_11():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/vector.S:118
IRQ_11:
        j metal_interrupt_vector_handler
20013e2c:	d2dfd06f          	j	20011b58 <metal_interrupt_vector_handler>

20013e30 <IRQ_12>:
IRQ_12():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/vector.S:120
IRQ_12:
        j metal_interrupt_vector_handler
20013e30:	d29fd06f          	j	20011b58 <metal_interrupt_vector_handler>

20013e34 <IRQ_13>:
IRQ_13():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/vector.S:122
IRQ_13:
        j metal_interrupt_vector_handler
20013e34:	d25fd06f          	j	20011b58 <metal_interrupt_vector_handler>

20013e38 <IRQ_14>:
IRQ_14():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/vector.S:124
IRQ_14:
        j metal_interrupt_vector_handler
20013e38:	d21fd06f          	j	20011b58 <metal_interrupt_vector_handler>

20013e3c <IRQ_15>:
IRQ_15():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/vector.S:126
IRQ_15:
        j metal_interrupt_vector_handler
20013e3c:	d1dfd06f          	j	20011b58 <metal_interrupt_vector_handler>

20013e40 <IRQ_LC0>:
IRQ_LC0():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/vector.S:128
IRQ_LC0:
        j metal_lc0_interrupt_vector_handler
20013e40:	9b6fe06f          	j	20011ff6 <metal_lc0_interrupt_vector_handler>

20013e44 <IRQ_LC1>:
IRQ_LC1():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/vector.S:130
IRQ_LC1:
        j metal_lc1_interrupt_vector_handler
20013e44:	a46fe06f          	j	2001208a <metal_lc1_interrupt_vector_handler>

20013e48 <IRQ_LC2>:
IRQ_LC2():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/vector.S:132
IRQ_LC2:
        j metal_lc2_interrupt_vector_handler
20013e48:	ad8fe06f          	j	20012120 <metal_lc2_interrupt_vector_handler>

20013e4c <IRQ_LC3>:
IRQ_LC3():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/vector.S:134
IRQ_LC3:
        j metal_lc3_interrupt_vector_handler
20013e4c:	b6afe06f          	j	200121b6 <metal_lc3_interrupt_vector_handler>

20013e50 <IRQ_LC4>:
IRQ_LC4():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/vector.S:136
IRQ_LC4:
        j metal_lc4_interrupt_vector_handler
20013e50:	bfcfe06f          	j	2001224c <metal_lc4_interrupt_vector_handler>

20013e54 <IRQ_LC5>:
IRQ_LC5():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/vector.S:138
IRQ_LC5:
        j metal_lc5_interrupt_vector_handler
20013e54:	c8efe06f          	j	200122e2 <metal_lc5_interrupt_vector_handler>

20013e58 <IRQ_LC6>:
IRQ_LC6():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/vector.S:140
IRQ_LC6:
        j metal_lc6_interrupt_vector_handler
20013e58:	d20fe06f          	j	20012378 <metal_lc6_interrupt_vector_handler>

20013e5c <IRQ_LC7>:
IRQ_LC7():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/vector.S:142
IRQ_LC7:
        j metal_lc7_interrupt_vector_handler
20013e5c:	db2fe06f          	j	2001240e <metal_lc7_interrupt_vector_handler>

20013e60 <IRQ_LC8>:
IRQ_LC8():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/vector.S:144
IRQ_LC8:
        j metal_lc8_interrupt_vector_handler
20013e60:	e44fe06f          	j	200124a4 <metal_lc8_interrupt_vector_handler>

20013e64 <IRQ_LC9>:
IRQ_LC9():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/vector.S:146
IRQ_LC9:
        j metal_lc9_interrupt_vector_handler
20013e64:	ed6fe06f          	j	2001253a <metal_lc9_interrupt_vector_handler>

20013e68 <IRQ_LC10>:
IRQ_LC10():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/vector.S:148
IRQ_LC10:
        j metal_lc10_interrupt_vector_handler
20013e68:	f68fe06f          	j	200125d0 <metal_lc10_interrupt_vector_handler>

20013e6c <IRQ_LC11>:
IRQ_LC11():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/vector.S:150
IRQ_LC11:
        j metal_lc11_interrupt_vector_handler
20013e6c:	ffafe06f          	j	20012666 <metal_lc11_interrupt_vector_handler>

20013e70 <IRQ_LC12>:
IRQ_LC12():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/vector.S:152
IRQ_LC12:
        j metal_lc12_interrupt_vector_handler
20013e70:	88dfe06f          	j	200126fc <metal_lc12_interrupt_vector_handler>

20013e74 <IRQ_LC13>:
IRQ_LC13():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/vector.S:154
IRQ_LC13:
        j metal_lc13_interrupt_vector_handler
20013e74:	91ffe06f          	j	20012792 <metal_lc13_interrupt_vector_handler>

20013e78 <IRQ_LC14>:
IRQ_LC14():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/vector.S:156
IRQ_LC14:
        j metal_lc14_interrupt_vector_handler
20013e78:	9b1fe06f          	j	20012828 <metal_lc14_interrupt_vector_handler>

20013e7c <IRQ_LC15>:
IRQ_LC15():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/vector.S:158
IRQ_LC15:
        j metal_lc15_interrupt_vector_handler
20013e7c:	a43fe06f          	j	200128be <metal_lc15_interrupt_vector_handler>

20013e80 <__metal_driver_fixed_clock_rate>:
__metal_driver_fixed_clock_rate():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:206
{
20013e80:	1101                	addi	sp,sp,-32
20013e82:	ce22                	sw	s0,28(sp)
20013e84:	1000                	addi	s0,sp,32
20013e86:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:207
	if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_0) {
20013e8a:	fec42703          	lw	a4,-20(s0)
20013e8e:	800007b7          	lui	a5,0x80000
20013e92:	06078793          	addi	a5,a5,96 # 80000060 <metal_dtim_0_memory_end+0xffffc060>
20013e96:	00f71763          	bne	a4,a5,20013ea4 <__metal_driver_fixed_clock_rate+0x24>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:208
		return METAL_FIXED_CLOCK_0_CLOCK_FREQUENCY;
20013e9a:	00f427b7          	lui	a5,0xf42
20013e9e:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
20013ea2:	a099                	j	20013ee8 <__metal_driver_fixed_clock_rate+0x68>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:210
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_2) {
20013ea4:	fec42703          	lw	a4,-20(s0)
20013ea8:	800007b7          	lui	a5,0x80000
20013eac:	06c78793          	addi	a5,a5,108 # 8000006c <metal_dtim_0_memory_end+0xffffc06c>
20013eb0:	00f71763          	bne	a4,a5,20013ebe <__metal_driver_fixed_clock_rate+0x3e>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:211
		return METAL_FIXED_CLOCK_2_CLOCK_FREQUENCY;
20013eb4:	044aa7b7          	lui	a5,0x44aa
20013eb8:	20078793          	addi	a5,a5,512 # 44aa200 <__heap_size+0x44a9a00>
20013ebc:	a035                	j	20013ee8 <__metal_driver_fixed_clock_rate+0x68>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:213
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_5) {
20013ebe:	fec42703          	lw	a4,-20(s0)
20013ec2:	800007b7          	lui	a5,0x80000
20013ec6:	07878793          	addi	a5,a5,120 # 80000078 <metal_dtim_0_memory_end+0xffffc078>
20013eca:	00f71463          	bne	a4,a5,20013ed2 <__metal_driver_fixed_clock_rate+0x52>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:214
		return METAL_FIXED_CLOCK_5_CLOCK_FREQUENCY;
20013ece:	67a1                	lui	a5,0x8
20013ed0:	a821                	j	20013ee8 <__metal_driver_fixed_clock_rate+0x68>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:216
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_6) {
20013ed2:	fec42703          	lw	a4,-20(s0)
20013ed6:	800007b7          	lui	a5,0x80000
20013eda:	08478793          	addi	a5,a5,132 # 80000084 <metal_dtim_0_memory_end+0xffffc084>
20013ede:	00f71463          	bne	a4,a5,20013ee6 <__metal_driver_fixed_clock_rate+0x66>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:217
		return METAL_FIXED_CLOCK_6_CLOCK_FREQUENCY;
20013ee2:	67a1                	lui	a5,0x8
20013ee4:	a011                	j	20013ee8 <__metal_driver_fixed_clock_rate+0x68>
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:220
		return 0;
20013ee6:	4781                	li	a5,0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/bsp/build/debug/./metal/machine.h:222
}
20013ee8:	853e                	mv	a0,a5
20013eea:	4472                	lw	s0,28(sp)
20013eec:	6105                	addi	sp,sp,32
20013eee:	8082                	ret

20013ef0 <__metal_driver_fixed_clock_get_rate_hz>:
__metal_driver_fixed_clock_get_rate_hz():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/fixed-clock.c:12

#include <metal/drivers/fixed-clock.h>
#include <metal/machine.h>
#include <stddef.h>

long __metal_driver_fixed_clock_get_rate_hz(const struct metal_clock *gclk) {
20013ef0:	1101                	addi	sp,sp,-32
20013ef2:	ce06                	sw	ra,28(sp)
20013ef4:	cc22                	sw	s0,24(sp)
20013ef6:	1000                	addi	s0,sp,32
20013ef8:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/fixed-clock.c:13
    return __metal_driver_fixed_clock_rate(gclk);
20013efc:	fec42503          	lw	a0,-20(s0)
20013f00:	3741                	jal	20013e80 <__metal_driver_fixed_clock_rate>
20013f02:	87aa                	mv	a5,a0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/fixed-clock.c:14
}
20013f04:	853e                	mv	a0,a5
20013f06:	40f2                	lw	ra,28(sp)
20013f08:	4462                	lw	s0,24(sp)
20013f0a:	6105                	addi	sp,sp,32
20013f0c:	8082                	ret

20013f0e <__metal_driver_fixed_clock_set_rate_hz>:
__metal_driver_fixed_clock_set_rate_hz():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/fixed-clock.c:17

long __metal_driver_fixed_clock_set_rate_hz(struct metal_clock *gclk,
                                            long target_hz) {
20013f0e:	1101                	addi	sp,sp,-32
20013f10:	ce06                	sw	ra,28(sp)
20013f12:	cc22                	sw	s0,24(sp)
20013f14:	1000                	addi	s0,sp,32
20013f16:	fea42623          	sw	a0,-20(s0)
20013f1a:	feb42423          	sw	a1,-24(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/fixed-clock.c:18
    return __metal_driver_fixed_clock_get_rate_hz(gclk);
20013f1e:	fec42503          	lw	a0,-20(s0)
20013f22:	37f9                	jal	20013ef0 <__metal_driver_fixed_clock_get_rate_hz>
20013f24:	87aa                	mv	a5,a0
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/src/drivers/fixed-clock.c:19
}
20013f26:	853e                	mv	a0,a5
20013f28:	40f2                	lw	ra,28(sp)
20013f2a:	4462                	lw	s0,24(sp)
20013f2c:	6105                	addi	sp,sp,32
20013f2e:	8082                	ret

20013f30 <_exit>:
_exit():
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/sys_exit.c:3
#include <metal/shutdown.h>

void _exit(int exit_status) {
20013f30:	1101                	addi	sp,sp,-32
20013f32:	ce06                	sw	ra,28(sp)
20013f34:	cc22                	sw	s0,24(sp)
20013f36:	1000                	addi	s0,sp,32
20013f38:	fea42623          	sw	a0,-20(s0)
/home/jelle/Documents/project_embed_netrf/Freedom_workspace/sifive_hifive1_revb_PWM_bare_metal/freedom-metal/gloss/sys_exit.c:4
    metal_shutdown(exit_status);
20013f3c:	fec42503          	lw	a0,-20(s0)
20013f40:	3589                	jal	20013d82 <metal_shutdown>
